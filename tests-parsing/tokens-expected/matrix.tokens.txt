VOID : void
ID : _ln
LPAR : (
RPAR : )
SEMI : ;
VOID : void
ID : print
LPAR : (
CONST : const
CHAR : char
STAR : *
RPAR : )
SEMI : ;
VOID : void
ID : println
LPAR : (
CONST : const
CHAR : char
STAR : *
RPAR : )
SEMI : ;
VOID : void
ID : print_int
LPAR : (
INT : int
RPAR : )
SEMI : ;
VOID : void
ID : print_real
LPAR : (
FLOAT : float
RPAR : )
SEMI : ;
VOID : void
ID : println_int
LPAR : (
INT : int
RPAR : )
SEMI : ;
VOID : void
ID : println_real
LPAR : (
FLOAT : float
RPAR : )
SEMI : ;
VOID : void
ID : print_int_pad
LPAR : (
INT : int
COMMA : ,
INT : int
RPAR : )
SEMI : ;
VOID : void
ID : print_real_pad
LPAR : (
FLOAT : float
COMMA : ,
INT : int
RPAR : )
SEMI : ;
INT : int
ID : main
LPAR : (
RPAR : )
LCB : {
INT : int
ID : mat
LB : [
INT_VAL : 4
RB : ]
LB : [
INT_VAL : 4
RB : ]
SEMI : ;
LCB : {
INT : int
ID : i
SEMI : ;
FOR : for
LPAR : (
ID : i
ASSIGN : =
INT_VAL : 0
SEMI : ;
ID : i
LT : <
INT_VAL : 4
SEMI : ;
ID : i
ASSIGN : =
ID : i
PLUS : +
INT_VAL : 1
RPAR : )
LCB : {
INT : int
ID : j
SEMI : ;
FOR : for
LPAR : (
ID : j
ASSIGN : =
INT_VAL : 0
SEMI : ;
ID : j
LT : <
INT_VAL : 4
SEMI : ;
ID : j
ASSIGN : =
ID : j
PLUS : +
INT_VAL : 1
RPAR : )
LCB : {
INT : int
ID : ii
ASSIGN : =
ID : i
PLUS : +
INT_VAL : 1
SEMI : ;
INT : int
ID : jj
ASSIGN : =
LPAR : (
ID : j
PLUS : +
INT_VAL : 1
RPAR : )
SEMI : ;
ID : mat
LB : [
ID : i
RB : ]
LB : [
ID : j
RB : ]
ASSIGN : =
INT_VAL : 1000
STAR : *
ID : ii
PLUS : +
ID : jj
STAR : *
ID : jj
SEMI : ;
RCB : }
RCB : }
RCB : }
LCB : {
INT : int
ID : i
SEMI : ;
FOR : for
LPAR : (
ID : i
ASSIGN : =
INT_VAL : 0
SEMI : ;
ID : i
LT : <
INT_VAL : 4
SEMI : ;
ID : i
ASSIGN : =
ID : i
PLUS : +
INT_VAL : 1
RPAR : )
LCB : {
ID : print_int_pad
LPAR : (
ID : i
COMMA : ,
INT_VAL : 2
RPAR : )
SEMI : ;
ID : print
LPAR : (
STR_VAL : " | "
RPAR : )
SEMI : ;
INT : int
ID : j
SEMI : ;
FOR : for
LPAR : (
ID : j
ASSIGN : =
INT_VAL : 0
SEMI : ;
ID : j
LT : <
INT_VAL : 4
SEMI : ;
ID : j
ASSIGN : =
ID : j
PLUS : +
INT_VAL : 1
RPAR : )
LCB : {
ID : print_int_pad
LPAR : (
ID : j
COMMA : ,
INT_VAL : 2
RPAR : )
SEMI : ;
ID : print_int_pad
LPAR : (
ID : mat
LB : [
ID : i
RB : ]
LB : [
ID : j
RB : ]
COMMA : ,
INT_VAL : 6
RPAR : )
SEMI : ;
RCB : }
ID : _ln
LPAR : (
RPAR : )
SEMI : ;
RCB : }
RCB : }
RETURN : return
INT_VAL : 0
SEMI : ;
RCB : }
