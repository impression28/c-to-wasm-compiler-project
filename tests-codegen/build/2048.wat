
(module
    (import "std" "readln" (func $readln (param i32) (param i32) (result i32)))
    (import "std" "_ln" (func $_ln))
    (import "std" "_print" (func $_print (param i32) (param i32)))
    (import "std" "_println" (func $_println (param i32) (param i32)))
    (import "std" "print_int" (func $print_int (param i32)))
    (import "std" "print_real" (func $print_real (param f32)))
    (import "std" "println_int" (func $println_int (param i32)))
    (import "std" "println_real" (func $println_real (param f32)))
    (import "std" "print_int_pad" (func $print_int_pad (param i32) (param i32)))
    (import "std" "print_real_pad" (func $print_real_pad (param f32) (param i32)))

    (export "memory" (memory $mem))
    (export "str_len" (func $str_len))
    (export "str_copy" (func $str_copy))
    (export "str_end" (func $str_end))
    (export "str_cat" (func $str_cat))
    (export "main" (func $main))

    (memory $mem 1)

    (func $str_len (param $po i32) (result i32)
        (local $idx i32)
        (block $out
            (loop $loop
                local.get $po
                local.get $idx
                i32.add
                i32.load8_u
                i32.eqz
                br_if $out
                local.get $idx
                i32.const 1
                i32.add
                local.set $idx
                br $loop
            )
        )
        local.get $idx
    )
    (func $str_copy (param $dest i32) (param $src i32)
        (local $c i32)
        (block $out
            (loop $loop
                local.get $src
                i32.load8_u
                local.tee $c
                i32.eqz
                br_if $out
                local.get $dest
                local.get $c
                i32.store8
                local.get $src
                i32.const 1
                i32.add
                local.set $src
                local.get $dest
                i32.const 1
                i32.add
                local.set $dest
                br $loop
            )
        )
    )
    (func $str_end (param $po i32) (result i32)
        (block $out
            (loop $loop
                local.get $po
                i32.load8_u
                i32.eqz
                br_if $out
                local.get $po
                i32.const 1
                i32.add
                local.set $po
                br $loop
            )
        )
        local.get $po
    )
    (func $print (param $po i32)
        local.get $po
        local.get $po
        call $str_len
        call $_print
    )
    (func $println (param $po i32)
        local.get $po
        call $print
        call $_ln
    )
    (func $str_cat (param $dest i32) (param $src i32)
        local.get $dest
        call $str_end
        local.get $src
        call $str_copy
    )

(global $fp (mut i32) (i32.const 312))
(global $sp (mut i32) (i32.const 312))

(global $temp_i32 (mut i32) (i32.const 0))
(global $temp_f32 (mut f32) (f32.const 0))

(data (i32.const 0) "|")
(data (i32.const 8) " ")
(data (i32.const 16) "\n")
(data (i32.const 24) "-")
(data (i32.const 32) "  ")
(data (i32.const 40) "SCORE: ")
(data (i32.const 48) "  RECORD: ")
(data (i32.const 64) "CONTROLS: W A S D; Q to quit")
(data (i32.const 96) "        ")
(data (i32.const 112) "> ")
(data (i32.const 120) "input line too long")
(data (i32.const 144) "Resetting...")
(data (i32.const 160) "Quitting...")
(data (i32.const 176) "GAME OVER\n")
(data (i32.const 192) "press R to start a new game\n")
  (func $rand
  (result i32)
  (get_global $sp)
  (i32.const 4)
  (i32.add)
  (set_global $sp)
  ;; (Block 1 (ExprStmt (= "[integer]" (Var "___rand_counter" "0,10" "[integer]") (+ "[integer]" (Var "___rand_counter" "0,10" "[integer]") (Integer "[integer]" 1)))) (return (Var "___rand_counter" "0,10" "[integer]")))
  ;; {
    ;; (ExprStmt (= "[integer]" (Var "___rand_counter" "0,10" "[integer]") (+ "[integer]" (Var "___rand_counter" "0,10" "[integer]") (Integer "[integer]" 1))))
    (i32.const 224)
    (i32.const 224)
    (i32.load)
    (i32.const 1)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    ;; (return (Var "___rand_counter" "0,10" "[integer]"))
    (i32.const 224)
    (i32.load)
    (return)
  ;; }
  (get_global $sp)
  (i32.const 4)
  (i32.sub)
  (set_global $sp)
  )

  (func $srand
  (param i32)
  (get_global $sp)
  (i32.const 8)
  (i32.add)
  (set_global $sp)
  ;; s
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; (Block 2 (ExprStmt (= "[integer]" (Var "___rand_counter" "0,10" "[integer]") (Var "s" "2,0" "[integer]"))))
  ;; {
    ;; (ExprStmt (= "[integer]" (Var "___rand_counter" "0,10" "[integer]") (Var "s" "2,0" "[integer]")))
    (i32.const 224)
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
  ;; }
  (get_global $sp)
  (i32.const 8)
  (i32.sub)
  (set_global $sp)
  )

  (func $clear_screen
  (get_global $sp)
  (i32.const 8)
  (i32.add)
  (set_global $sp)
  ;; (Block 3 (ForStmt (ExprStmt (= "[integer]" (Var "i" "3,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "3,0" "[integer]") (Integer "[integer]" 20)) (ExprStmt (= "[integer]" (Var "i" "3,0" "[integer]") (+ "[integer]" (Var "i" "3,0" "[integer]") (Integer "[integer]" 1)))) (Block 4 (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ())))))
  ;; {
    ;; (ForStmt (ExprStmt (= "[integer]" (Var "i" "3,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "3,0" "[integer]") (Integer "[integer]" 20)) (ExprStmt (= "[integer]" (Var "i" "3,0" "[integer]") (+ "[integer]" (Var "i" "3,0" "[integer]") (Integer "[integer]" 1)))) (Block 4 (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ()))))
    ;; (ExprStmt (= "[integer]" (Var "i" "3,0" "[integer]") (Integer "[integer]" 0)))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (block $loopbrk0
    (loop $loopaux0
    (block $loop0
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.const 20)
    (i32.lt_s)
    (i32.eqz)
    (br_if $loopbrk0)
    ;; (Block 4 (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ())))
    ;; {
      ;; (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ()))
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $_ln)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
    ;; }
    )
    ;; (ExprStmt (= "[integer]" (Var "i" "3,0" "[integer]") (+ "[integer]" (Var "i" "3,0" "[integer]") (Integer "[integer]" 1))))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.const 1)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (br $loopaux0)
    )
    )
  ;; }
  (get_global $sp)
  (i32.const 8)
  (i32.sub)
  (set_global $sp)
  )

  (func $repeatPrint
  (param i32)
  (param i32)
  (get_global $sp)
  (i32.const 16)
  (i32.add)
  (set_global $sp)
  ;; c
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; n
  (get_global $fp)
  (i32.const 8)
  (i32.add)
  (get_local 1)
  (i32.store)
  ;; (Block 5 (ForStmt (ExprStmt (= "[integer]" (Var "i" "5,2" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "5,2" "[integer]") (Var "n" "5,1" "[integer]")) (ExprStmt (= "[integer]" (Var "i" "5,2" "[integer]") (+ "[integer]" (Var "i" "5,2" "[integer]") (Integer "[integer]" 1)))) (Block 6 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (Var "c" "5,0" "[*char]")))))))
  ;; {
    ;; (ForStmt (ExprStmt (= "[integer]" (Var "i" "5,2" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "5,2" "[integer]") (Var "n" "5,1" "[integer]")) (ExprStmt (= "[integer]" (Var "i" "5,2" "[integer]") (+ "[integer]" (Var "i" "5,2" "[integer]") (Integer "[integer]" 1)))) (Block 6 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (Var "c" "5,0" "[*char]"))))))
    ;; (ExprStmt (= "[integer]" (Var "i" "5,2" "[integer]") (Integer "[integer]" 0)))
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (block $loopbrk0
    (loop $loopaux0
    (block $loop0
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.load)
    (get_global $fp)
    (i32.const 8)
    (i32.add)
    (i32.load)
    (i32.lt_s)
    (i32.eqz)
    (br_if $loopbrk0)
    ;; (Block 6 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (Var "c" "5,0" "[*char]")))))
    ;; {
      ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (Var "c" "5,0" "[*char]"))))
      (get_global $fp)
      (i32.const 4)
      (i32.add)
      (i32.load)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $print)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
    ;; }
    )
    ;; (ExprStmt (= "[integer]" (Var "i" "5,2" "[integer]") (+ "[integer]" (Var "i" "5,2" "[integer]") (Integer "[integer]" 1))))
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.load)
    (i32.const 1)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (br $loopaux0)
    )
    )
  ;; }
  (get_global $sp)
  (i32.const 16)
  (i32.sub)
  (set_global $sp)
  )

  (func $table_vpadding
  (param i32)
  (get_global $sp)
  (i32.const 12)
  (i32.add)
  (set_global $sp)
  ;; r
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; (Block 7 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))) (ForStmt (ExprStmt (= "[integer]" (Var "c" "7,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "c" "7,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "c" "7,1" "[integer]") (+ "[integer]" (Var "c" "7,1" "[integer]") (Integer "[integer]" 1)))) (Block 8 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "2")))))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))
    (i32.const 0)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $print)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ForStmt (ExprStmt (= "[integer]" (Var "c" "7,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "c" "7,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "c" "7,1" "[integer]") (+ "[integer]" (Var "c" "7,1" "[integer]") (Integer "[integer]" 1)))) (Block 8 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))))
    ;; (ExprStmt (= "[integer]" (Var "c" "7,1" "[integer]") (Integer "[integer]" 0)))
    (get_global $fp)
    (i32.const 8)
    (i32.add)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (block $loopbrk0
    (loop $loopaux0
    (block $loop0
    (get_global $fp)
    (i32.const 8)
    (i32.add)
    (i32.load)
    (i32.const 4)
    (i32.lt_s)
    (i32.eqz)
    (br_if $loopbrk0)
    ;; (Block 8 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))))
    ;; {
      ;; (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8))))
      (i32.const 8)
      (i32.const 8)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $repeatPrint)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
      ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))
      (i32.const 0)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $print)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
    ;; }
    )
    ;; (ExprStmt (= "[integer]" (Var "c" "7,1" "[integer]") (+ "[integer]" (Var "c" "7,1" "[integer]") (Integer "[integer]" 1))))
    (get_global $fp)
    (i32.const 8)
    (i32.add)
    (get_global $fp)
    (i32.const 8)
    (i32.add)
    (i32.load)
    (i32.const 1)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (br $loopaux0)
    )
    )
    ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "2"))))
    (i32.const 16)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $print)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
  ;; }
  (get_global $sp)
  (i32.const 12)
  (i32.sub)
  (set_global $sp)
  )

  (func $table_hline
  (get_global $sp)
  (i32.const 4)
  (i32.add)
  (set_global $sp)
  ;; (Block 9 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "3") (Var "TABLE_WIDTH" "0,14" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "2")))))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "3") (Var "TABLE_WIDTH" "0,14" "[integer]"))))
    (i32.const 24)
    (i32.const 232)
    (i32.load)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $repeatPrint)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "2"))))
    (i32.const 16)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $print)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
  ;; }
  (get_global $sp)
  (i32.const 4)
  (i32.sub)
  (set_global $sp)
  )

  (func $render_table
  (get_global $sp)
  (i32.const 16)
  (i32.add)
  (set_global $sp)
  ;; (Block 10 (ExprStmt ("f(x)" "[void]" (Var "table_hline" "0,21" "[()void]") ())) (ForStmt (ExprStmt (= "[integer]" (Var "r" "10,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "r" "10,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "r" "10,0" "[integer]") (+ "[integer]" (Var "r" "10,0" "[integer]") (Integer "[integer]" 1)))) (Block 11 (ExprStmt ("f(x)" "[void]" (Var "table_vpadding" "0,20" "[(integer r)void]") ( (Var "r" "10,0" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))) (ForStmt (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (+ "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 1)))) (Block 12 (Block (ExprStmt (= "[integer]" (Var "v" "12,0" "[integer]") (v[x] "[integer]" (Var "c" "10,1" "[integer]") (v[x] "[[4]integer]" (Var "r" "10,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfElseStmt (Var "v" "12,0" "[integer]") (Block 13 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "v" "12,0" "[integer]") (Integer "[integer]" 4)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))) (Block 14 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))))))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "2")))) (ExprStmt ("f(x)" "[void]" (Var "table_vpadding" "0,20" "[(integer r)void]") ( (Var "r" "10,0" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "table_hline" "0,21" "[()void]") ())))))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "table_hline" "0,21" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $table_hline)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ForStmt (ExprStmt (= "[integer]" (Var "r" "10,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "r" "10,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "r" "10,0" "[integer]") (+ "[integer]" (Var "r" "10,0" "[integer]") (Integer "[integer]" 1)))) (Block 11 (ExprStmt ("f(x)" "[void]" (Var "table_vpadding" "0,20" "[(integer r)void]") ( (Var "r" "10,0" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))) (ForStmt (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (+ "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 1)))) (Block 12 (Block (ExprStmt (= "[integer]" (Var "v" "12,0" "[integer]") (v[x] "[integer]" (Var "c" "10,1" "[integer]") (v[x] "[[4]integer]" (Var "r" "10,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfElseStmt (Var "v" "12,0" "[integer]") (Block 13 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "v" "12,0" "[integer]") (Integer "[integer]" 4)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))) (Block 14 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))))))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "2")))) (ExprStmt ("f(x)" "[void]" (Var "table_vpadding" "0,20" "[(integer r)void]") ( (Var "r" "10,0" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "table_hline" "0,21" "[()void]") ()))))
    ;; (ExprStmt (= "[integer]" (Var "r" "10,0" "[integer]") (Integer "[integer]" 0)))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (block $loopbrk0
    (loop $loopaux0
    (block $loop0
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.const 4)
    (i32.lt_s)
    (i32.eqz)
    (br_if $loopbrk0)
    ;; (Block 11 (ExprStmt ("f(x)" "[void]" (Var "table_vpadding" "0,20" "[(integer r)void]") ( (Var "r" "10,0" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))) (ForStmt (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (+ "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 1)))) (Block 12 (Block (ExprStmt (= "[integer]" (Var "v" "12,0" "[integer]") (v[x] "[integer]" (Var "c" "10,1" "[integer]") (v[x] "[[4]integer]" (Var "r" "10,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfElseStmt (Var "v" "12,0" "[integer]") (Block 13 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "v" "12,0" "[integer]") (Integer "[integer]" 4)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))) (Block 14 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))))))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "2")))) (ExprStmt ("f(x)" "[void]" (Var "table_vpadding" "0,20" "[(integer r)void]") ( (Var "r" "10,0" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "table_hline" "0,21" "[()void]") ())))
    ;; {
      ;; (ExprStmt ("f(x)" "[void]" (Var "table_vpadding" "0,20" "[(integer r)void]") ( (Var "r" "10,0" "[integer]"))))
      (get_global $fp)
      (i32.const 4)
      (i32.add)
      (i32.load)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $table_vpadding)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
      ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))
      (i32.const 0)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $print)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (+ "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 1)))) (Block 12 (Block (ExprStmt (= "[integer]" (Var "v" "12,0" "[integer]") (v[x] "[integer]" (Var "c" "10,1" "[integer]") (v[x] "[[4]integer]" (Var "r" "10,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfElseStmt (Var "v" "12,0" "[integer]") (Block 13 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "v" "12,0" "[integer]") (Integer "[integer]" 4)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))) (Block 14 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))))))
      ;; (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk1
      (loop $loopaux1
      (block $loop1
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk1)
      ;; (Block 12 (Block (ExprStmt (= "[integer]" (Var "v" "12,0" "[integer]") (v[x] "[integer]" (Var "c" "10,1" "[integer]") (v[x] "[[4]integer]" (Var "r" "10,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfElseStmt (Var "v" "12,0" "[integer]") (Block 13 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "v" "12,0" "[integer]") (Integer "[integer]" 4)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))) (Block 14 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))))))
      ;; {
        ;; (Block (ExprStmt (= "[integer]" (Var "v" "12,0" "[integer]") (v[x] "[integer]" (Var "c" "10,1" "[integer]") (v[x] "[[4]integer]" (Var "r" "10,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "v" "12,0" "[integer]") (v[x] "[integer]" (Var "c" "10,1" "[integer]") (v[x] "[[4]integer]" (Var "r" "10,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 4)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 8)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        ;; (IfElseStmt (Var "v" "12,0" "[integer]") (Block 13 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "v" "12,0" "[integer]") (Integer "[integer]" 4)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))) (Block 14 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))))
        (block $b0
        (block $b1
        (get_global $fp)
        (i32.const 12)
        (i32.add)
        (i32.load)
        (i32.eqz)
        (br_if $b1)
        ;; (Block 13 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "v" "12,0" "[integer]") (Integer "[integer]" 4)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))))
        ;; {
          ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4"))))
          (i32.const 32)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $print)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          ;; (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "v" "12,0" "[integer]") (Integer "[integer]" 4))))
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.const 4)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $print_int_pad)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "4"))))
          (i32.const 32)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $print)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))
          (i32.const 0)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $print)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
        ;; }
        (br $b0)
        )
        ;; (Block 14 (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8)))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0")))))
        ;; {
          ;; (ExprStmt ("f(x)" "[void]" (Var "repeatPrint" "0,19" "[(*char c, integer n)void]") ( (String "[*char]" "1") (Integer "[integer]" 8))))
          (i32.const 8)
          (i32.const 8)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $repeatPrint)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "0"))))
          (i32.const 0)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $print)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
        ;; }
        )
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "c" "10,1" "[integer]") (+ "[integer]" (Var "c" "10,1" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux1)
      )
      )
      ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "2"))))
      (i32.const 16)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $print)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
      ;; (ExprStmt ("f(x)" "[void]" (Var "table_vpadding" "0,20" "[(integer r)void]") ( (Var "r" "10,0" "[integer]"))))
      (get_global $fp)
      (i32.const 4)
      (i32.add)
      (i32.load)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $table_vpadding)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
      ;; (ExprStmt ("f(x)" "[void]" (Var "table_hline" "0,21" "[()void]") ()))
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $table_hline)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
    ;; }
    )
    ;; (ExprStmt (= "[integer]" (Var "r" "10,0" "[integer]") (+ "[integer]" (Var "r" "10,0" "[integer]") (Integer "[integer]" 1))))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.const 1)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (br $loopaux0)
    )
    )
  ;; }
  (get_global $sp)
  (i32.const 16)
  (i32.sub)
  (set_global $sp)
  )

  (func $render_info
  (get_global $sp)
  (i32.const 4)
  (i32.add)
  (set_global $sp)
  ;; (Block 15 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "5")))) (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "score" "0,15" "[integer]") (- "[integer]" (Integer "[integer]" 8))))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "6")))) (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "record" "0,16" "[integer]") (- "[integer]" (Integer "[integer]" 8))))) (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ())))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "5"))))
    (i32.const 40)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $print)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "score" "0,15" "[integer]") (- "[integer]" (Integer "[integer]" 8)))))
    (i32.const 236)
    (i32.load)
    (i32.const 0)
    (i32.const 8)
    (i32.sub)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $print_int_pad)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "6"))))
    (i32.const 48)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $print)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "print_int_pad" "0,8" "[(integer, integer)void]") ( (Var "record" "0,16" "[integer]") (- "[integer]" (Integer "[integer]" 8)))))
    (i32.const 240)
    (i32.load)
    (i32.const 0)
    (i32.const 8)
    (i32.sub)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $print_int_pad)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $_ln)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
  ;; }
  (get_global $sp)
  (i32.const 4)
  (i32.sub)
  (set_global $sp)
  )

  (func $render_info_2
  (get_global $sp)
  (i32.const 4)
  (i32.add)
  (set_global $sp)
  ;; (Block 16 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "7")))))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "7"))))
    (i32.const 64)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
  ;; }
  (get_global $sp)
  (i32.const 4)
  (i32.sub)
  (set_global $sp)
  )

  (func $render_game
  (get_global $sp)
  (i32.const 4)
  (i32.add)
  (set_global $sp)
  ;; (Block 17 (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_info_2" "0,24" "[()void]") ())))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $render_info)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $_ln)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $render_table)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "_ln" "0,1" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $_ln)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "render_info_2" "0,24" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $render_info_2)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
  ;; }
  (get_global $sp)
  (i32.const 4)
  (i32.sub)
  (set_global $sp)
  )

  (func $count_empty_tiles
  (result i32)
  (get_global $sp)
  (i32.const 16)
  (i32.add)
  (set_global $sp)
  ;; (Block 18 (Block (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "i" "18,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "18,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "18,0" "[integer]") (+ "[integer]" (Var "i" "18,0" "[integer]") (Integer "[integer]" 1)))) (Block 19 (ForStmt (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (+ "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 1)))) (Block 20 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "18,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "18,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 21 (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (+ "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 1)))))))))) (return (Var "c" "18,2" "[integer]")))
  ;; {
    ;; (Block (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 0))))
    ;; {
      ;; (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 12)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
    ;; }
    ;; (ForStmt (ExprStmt (= "[integer]" (Var "i" "18,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "18,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "18,0" "[integer]") (+ "[integer]" (Var "i" "18,0" "[integer]") (Integer "[integer]" 1)))) (Block 19 (ForStmt (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (+ "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 1)))) (Block 20 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "18,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "18,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 21 (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (+ "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 1))))))))))
    ;; (ExprStmt (= "[integer]" (Var "i" "18,0" "[integer]") (Integer "[integer]" 0)))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (block $loopbrk0
    (loop $loopaux0
    (block $loop0
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.const 4)
    (i32.lt_s)
    (i32.eqz)
    (br_if $loopbrk0)
    ;; (Block 19 (ForStmt (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (+ "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 1)))) (Block 20 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "18,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "18,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 21 (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (+ "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 1)))))))))
    ;; {
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (+ "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 1)))) (Block 20 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "18,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "18,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 21 (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (+ "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 1))))))))
      ;; (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk1
      (loop $loopaux1
      (block $loop1
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk1)
      ;; (Block 20 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "18,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "18,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 21 (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (+ "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 1)))))))
      ;; {
        ;; (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "18,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "18,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 21 (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (+ "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 1))))))
        (block $b0
        (i32.const 244)
        (i32.const 16)
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 8)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.load)
        (i32.const 0)
        (i32.eq)
        (i32.eqz)
        (br_if $b0)
        ;; (Block 21 (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (+ "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 1)))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "c" "18,2" "[integer]") (+ "[integer]" (Var "c" "18,2" "[integer]") (Integer "[integer]" 1))))
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.const 1)
          (i32.add)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        )
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "j" "18,1" "[integer]") (+ "[integer]" (Var "j" "18,1" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux1)
      )
      )
    ;; }
    )
    ;; (ExprStmt (= "[integer]" (Var "i" "18,0" "[integer]") (+ "[integer]" (Var "i" "18,0" "[integer]") (Integer "[integer]" 1))))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.const 1)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (br $loopaux0)
    )
    )
    ;; (return (Var "c" "18,2" "[integer]"))
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.load)
    (return)
  ;; }
  (get_global $sp)
  (i32.const 16)
  (i32.sub)
  (set_global $sp)
  )

  (func $insert_random_tile
  (get_global $sp)
  (i32.const 28)
  (i32.add)
  (set_global $sp)
  ;; (Block 22 (ExprStmt (= "[integer]" (Var "empt" "22,0" "[integer]") ("f(x)" "[integer]" (Var "count_empty_tiles" "0,26" "[()integer]") ()))) (IfStmt (Var "empt" "22,0" "[integer]") (Block 23 (ExprStmt (= "[integer]" (Var "n" "22,1" "[integer]") (% "[integer]" ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ()) (Var "empt" "22,0" "[integer]")))) (Block (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (+ "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 1)))) (Block 24 (ForStmt (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (+ "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 1)))) (Block 25 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 26 (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))) (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1)))))))))))))
  ;; {
    ;; (ExprStmt (= "[integer]" (Var "empt" "22,0" "[integer]") ("f(x)" "[integer]" (Var "count_empty_tiles" "0,26" "[()integer]") ())))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $count_empty_tiles)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    ;; (IfStmt (Var "empt" "22,0" "[integer]") (Block 23 (ExprStmt (= "[integer]" (Var "n" "22,1" "[integer]") (% "[integer]" ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ()) (Var "empt" "22,0" "[integer]")))) (Block (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (+ "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 1)))) (Block 24 (ForStmt (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (+ "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 1)))) (Block 25 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 26 (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))) (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1))))))))))))
    (block $b0
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.eqz)
    (br_if $b0)
    ;; (Block 23 (ExprStmt (= "[integer]" (Var "n" "22,1" "[integer]") (% "[integer]" ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ()) (Var "empt" "22,0" "[integer]")))) (Block (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (+ "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 1)))) (Block 24 (ForStmt (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (+ "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 1)))) (Block 25 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 26 (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))) (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1)))))))))))
    ;; {
      ;; (ExprStmt (= "[integer]" (Var "n" "22,1" "[integer]") (% "[integer]" ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ()) (Var "empt" "22,0" "[integer]"))))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $rand)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
      (get_global $fp)
      (i32.const 4)
      (i32.add)
      (i32.load)
      (i32.rem_s)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      ;; (Block (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 0))))
      ;; {
        ;; (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 0)))
        (get_global $fp)
        (i32.const 20)
        (i32.add)
        (i32.const 0)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (+ "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 1)))) (Block 24 (ForStmt (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (+ "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 1)))) (Block 25 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 26 (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))) (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1))))))))))
      ;; (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 12)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk0
      (loop $loopaux0
      (block $loop0
      (get_global $fp)
      (i32.const 12)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk0)
      ;; (Block 24 (ForStmt (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (+ "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 1)))) (Block 25 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 26 (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))) (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1)))))))))
      ;; {
        ;; (ForStmt (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (+ "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 1)))) (Block 25 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 26 (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))) (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1))))))))
        ;; (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 0)))
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (i32.const 0)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        (block $loopbrk1
        (loop $loopaux1
        (block $loop1
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (i32.load)
        (i32.const 4)
        (i32.lt_s)
        (i32.eqz)
        (br_if $loopbrk1)
        ;; (Block 25 (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 26 (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))) (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1)))))))
        ;; {
          ;; (IfStmt (== "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)) (Block 26 (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))) (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1))))))
          (block $b1
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 16)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (i32.const 0)
          (i32.eq)
          (i32.eqz)
          (br_if $b1)
          ;; (Block 26 (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))) (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1)))))
          ;; {
            ;; (IfStmt (== "[integer]" (Var "c" "23,2" "[integer]") (Var "n" "22,1" "[integer]")) (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2)))))))
            (block $b2
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.load)
            (get_global $fp)
            (i32.const 8)
            (i32.add)
            (i32.load)
            (i32.eq)
            (i32.eqz)
            (br_if $b2)
            ;; (Block 27 (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))) (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))))
            ;; {
              ;; (Block (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ()))))
              ;; {
                ;; (ExprStmt (= "[integer]" (Var "r" "27,0" "[integer]") ("f(x)" "[integer]" (Var "rand" "0,11" "[()integer]") ())))
                (get_global $fp)
                (i32.const 24)
                (i32.add)
                (get_global $sp)
                (get_global $fp)
                (i32.store)
                (get_global $sp)
                (set_global $fp)
                (call $rand)
                (get_global $fp)
                (i32.load)
                (set_global $fp)
                (set_global $temp_i32)
                (get_global $temp_i32)
                (i32.store)
                (get_global $temp_i32)
                (drop)
              ;; }
              ;; (IfElseStmt (== "[integer]" (% "[integer]" (Var "r" "27,0" "[integer]") (Integer "[integer]" 10)) (Integer "[integer]" 0)) (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))) (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2)))))
              (block $b3
              (block $b4
              (get_global $fp)
              (i32.const 24)
              (i32.add)
              (i32.load)
              (i32.const 10)
              (i32.rem_s)
              (i32.const 0)
              (i32.eq)
              (i32.eqz)
              (br_if $b4)
              ;; (Block 28 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4))))
              ;; {
                ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 4)))
                (i32.const 244)
                (i32.const 16)
                (get_global $fp)
                (i32.const 12)
                (i32.add)
                (i32.load)
                (i32.mul)
                (i32.add)
                (i32.const 4)
                (get_global $fp)
                (i32.const 16)
                (i32.add)
                (i32.load)
                (i32.mul)
                (i32.add)
                (i32.const 4)
                (set_global $temp_i32)
                (get_global $temp_i32)
                (i32.store)
                (get_global $temp_i32)
                (drop)
              ;; }
              (br $b3)
              )
              ;; (Block 29 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2))))
              ;; {
                ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "23,1" "[integer]") (v[x] "[[4]integer]" (Var "i" "23,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 2)))
                (i32.const 244)
                (i32.const 16)
                (get_global $fp)
                (i32.const 12)
                (i32.add)
                (i32.load)
                (i32.mul)
                (i32.add)
                (i32.const 4)
                (get_global $fp)
                (i32.const 16)
                (i32.add)
                (i32.load)
                (i32.mul)
                (i32.add)
                (i32.const 2)
                (set_global $temp_i32)
                (get_global $temp_i32)
                (i32.store)
                (get_global $temp_i32)
                (drop)
              ;; }
              )
            ;; }
            )
            ;; (ExprStmt (= "[integer]" (Var "c" "23,2" "[integer]") (+ "[integer]" (Var "c" "23,2" "[integer]") (Integer "[integer]" 1))))
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.load)
            (i32.const 1)
            (i32.add)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
          ;; }
          )
        ;; }
        )
        ;; (ExprStmt (= "[integer]" (Var "j" "23,1" "[integer]") (+ "[integer]" (Var "j" "23,1" "[integer]") (Integer "[integer]" 1))))
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (i32.load)
        (i32.const 1)
        (i32.add)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        (br $loopaux1)
        )
        )
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "i" "23,0" "[integer]") (+ "[integer]" (Var "i" "23,0" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 12)
      (i32.add)
      (get_global $fp)
      (i32.const 12)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux0)
      )
      )
    ;; }
    )
  ;; }
  (get_global $sp)
  (i32.const 28)
  (i32.sub)
  (set_global $sp)
  )

  (func $init_table
  (get_global $sp)
  (i32.const 4)
  (i32.add)
  (set_global $sp)
  ;; (Block 30 (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ())))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $insert_random_tile)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $insert_random_tile)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
  ;; }
  (get_global $sp)
  (i32.const 4)
  (i32.sub)
  (set_global $sp)
  )

  (func $clean_table
  (get_global $sp)
  (i32.const 12)
  (i32.add)
  (set_global $sp)
  ;; (Block 31 (ForStmt (ExprStmt (= "[integer]" (Var "i" "31,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "31,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "31,0" "[integer]") (+ "[integer]" (Var "i" "31,0" "[integer]") (Integer "[integer]" 1)))) (Block 32 (ForStmt (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (+ "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 1)))) (Block 33 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "32,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "31,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0))))))))
  ;; {
    ;; (ForStmt (ExprStmt (= "[integer]" (Var "i" "31,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "31,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "31,0" "[integer]") (+ "[integer]" (Var "i" "31,0" "[integer]") (Integer "[integer]" 1)))) (Block 32 (ForStmt (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (+ "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 1)))) (Block 33 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "32,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "31,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)))))))
    ;; (ExprStmt (= "[integer]" (Var "i" "31,0" "[integer]") (Integer "[integer]" 0)))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (block $loopbrk0
    (loop $loopaux0
    (block $loop0
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.const 4)
    (i32.lt_s)
    (i32.eqz)
    (br_if $loopbrk0)
    ;; (Block 32 (ForStmt (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (+ "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 1)))) (Block 33 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "32,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "31,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0))))))
    ;; {
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (+ "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 1)))) (Block 33 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "32,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "31,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)))))
      ;; (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk1
      (loop $loopaux1
      (block $loop1
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk1)
      ;; (Block 33 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "32,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "31,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0))))
      ;; {
        ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "32,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "31,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Integer "[integer]" 0)))
        (i32.const 244)
        (i32.const 16)
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 8)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.const 0)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "j" "32,0" "[integer]") (+ "[integer]" (Var "j" "32,0" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux1)
      )
      )
    ;; }
    )
    ;; (ExprStmt (= "[integer]" (Var "i" "31,0" "[integer]") (+ "[integer]" (Var "i" "31,0" "[integer]") (Integer "[integer]" 1))))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.const 1)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (br $loopaux0)
    )
    )
  ;; }
  (get_global $sp)
  (i32.const 12)
  (i32.sub)
  (set_global $sp)
  )

  (func $update_record
  (param i32)
  (get_global $sp)
  (i32.const 8)
  (i32.add)
  (set_global $sp)
  ;; n
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; (Block 34 (ExprStmt (= "[integer]" (Var "record" "0,16" "[integer]") (Var "n" "34,0" "[integer]"))))
  ;; {
    ;; (ExprStmt (= "[integer]" (Var "record" "0,16" "[integer]") (Var "n" "34,0" "[integer]")))
    (i32.const 240)
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
  ;; }
  (get_global $sp)
  (i32.const 8)
  (i32.sub)
  (set_global $sp)
  )

  (func $add_score
  (param i32)
  (get_global $sp)
  (i32.const 8)
  (i32.add)
  (set_global $sp)
  ;; n
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; (Block 35 (ExprStmt (= "[integer]" (Var "score" "0,15" "[integer]") (+ "[integer]" (Var "score" "0,15" "[integer]") (Var "n" "35,0" "[integer]")))) (IfStmt (> "[integer]" (Var "score" "0,15" "[integer]") (Var "record" "0,16" "[integer]")) (Block 36 (ExprStmt ("f(x)" "[void]" (Var "update_record" "0,30" "[(integer n)void]") ( (Var "score" "0,15" "[integer]")))))))
  ;; {
    ;; (ExprStmt (= "[integer]" (Var "score" "0,15" "[integer]") (+ "[integer]" (Var "score" "0,15" "[integer]") (Var "n" "35,0" "[integer]"))))
    (i32.const 236)
    (i32.const 236)
    (i32.load)
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    ;; (IfStmt (> "[integer]" (Var "score" "0,15" "[integer]") (Var "record" "0,16" "[integer]")) (Block 36 (ExprStmt ("f(x)" "[void]" (Var "update_record" "0,30" "[(integer n)void]") ( (Var "score" "0,15" "[integer]"))))))
    (block $b0
    (i32.const 236)
    (i32.load)
    (i32.const 240)
    (i32.load)
    (i32.gt_s)
    (i32.eqz)
    (br_if $b0)
    ;; (Block 36 (ExprStmt ("f(x)" "[void]" (Var "update_record" "0,30" "[(integer n)void]") ( (Var "score" "0,15" "[integer]")))))
    ;; {
      ;; (ExprStmt ("f(x)" "[void]" (Var "update_record" "0,30" "[(integer n)void]") ( (Var "score" "0,15" "[integer]"))))
      (i32.const 236)
      (i32.load)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $update_record)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
    ;; }
    )
  ;; }
  (get_global $sp)
  (i32.const 8)
  (i32.sub)
  (set_global $sp)
  )

  (func $move_table_hor
  (param i32)
  (result i32)
  (get_global $sp)
  (i32.const 48)
  (i32.add)
  (set_global $sp)
  ;; dir
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; (Block 37 (Block (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "i" "37,2" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "37,2" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "37,2" "[integer]") (+ "[integer]" (Var "i" "37,2" "[integer]") (Integer "[integer]" 1)))) (Block 38 (Block (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 0))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 39 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Integer "[integer]" 0))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 40 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (Block 41 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]"))))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 42 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (Var "j" "38,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "38,1" "[integer]")) (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 43 (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 44 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))))) (IfStmt (Var "cur_tile" "38,1" "[integer]") (Block 47 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 48 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (Var "j" "38,3" "[integer]"))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "37,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")))))))) (return (Var "moved" "37,1" "[integer]")))
  ;; {
    ;; (Block (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 0))))
    ;; {
      ;; (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
    ;; }
    ;; (ForStmt (ExprStmt (= "[integer]" (Var "i" "37,2" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "37,2" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "37,2" "[integer]") (+ "[integer]" (Var "i" "37,2" "[integer]") (Integer "[integer]" 1)))) (Block 38 (Block (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 0))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 39 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Integer "[integer]" 0))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 40 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (Block 41 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]"))))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 42 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (Var "j" "38,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "38,1" "[integer]")) (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 43 (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 44 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))))) (IfStmt (Var "cur_tile" "38,1" "[integer]") (Block 47 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 48 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (Var "j" "38,3" "[integer]"))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "37,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]"))))))))
    ;; (ExprStmt (= "[integer]" (Var "i" "37,2" "[integer]") (Integer "[integer]" 0)))
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (block $loopbrk0
    (loop $loopaux0
    (block $loop0
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.load)
    (i32.const 4)
    (i32.lt_s)
    (i32.eqz)
    (br_if $loopbrk0)
    ;; (Block 38 (Block (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 0))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 39 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Integer "[integer]" 0))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 40 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (Block 41 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]"))))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 42 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (Var "j" "38,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "38,1" "[integer]")) (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 43 (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 44 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))))) (IfStmt (Var "cur_tile" "38,1" "[integer]") (Block 47 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 48 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (Var "j" "38,3" "[integer]"))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "37,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")))))))
    ;; {
      ;; (Block (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 0))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0))))
      ;; {
        ;; (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 0)))
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (i32.const 0)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        ;; (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))
        (get_global $fp)
        (i32.const 20)
        (i32.add)
        (i32.const 0)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 39 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Integer "[integer]" 0)))))
      ;; (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk1
      (loop $loopaux1
      (block $loop1
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk1)
      ;; (Block 39 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Integer "[integer]" 0))))
      ;; {
        ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Integer "[integer]" 0)))
        (get_global $fp)
        (i32.const 24)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 40)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.const 0)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux1)
      )
      )
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 40 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (Block 41 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]"))))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 42 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (Var "j" "38,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "38,1" "[integer]")) (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 43 (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 44 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))))))))))
      ;; (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk1
      (loop $loopaux1
      (block $loop1
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk1)
      ;; (Block 40 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (Block 41 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]"))))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 42 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (Var "j" "38,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "38,1" "[integer]")) (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 43 (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 44 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))))
      ;; {
        ;; (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (Block 41 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]"))))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 42 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (Var "j" "38,3" "[integer]"))))))
        (block $b0
        (block $b1
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.const 1)
        (i32.eq)
        (i32.eqz)
        (br_if $b1)
        ;; (Block 41 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]")))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]"))))
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.const 3)
          (get_global $fp)
          (i32.const 40)
          (i32.add)
          (i32.load)
          (i32.sub)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        (br $b0)
        )
        ;; (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 42 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (Var "j" "38,3" "[integer]")))))
        (block $b2
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.const 0)
        (i32.const 1)
        (i32.sub)
        (i32.eq)
        (i32.eqz)
        (br_if $b2)
        ;; (Block 42 (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (Var "j" "38,3" "[integer]"))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "c" "40,0" "[integer]") (Var "j" "38,3" "[integer]")))
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (get_global $fp)
          (i32.const 40)
          (i32.add)
          (i32.load)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        )
        )
        ;; (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "38,1" "[integer]")) (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 43 (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 44 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))))))))
        (block $b3
        (block $b4
        (block $v0 (result i32)
        (i32.const 0)
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.load)
          (i32.eqz)
        (i32.eqz)
        (br_if $v0)
        (drop)
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
        )
        (i32.eqz)
        (br_if $b4)
        ;; (Block 43 (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        (br $b3)
        )
        ;; (IfStmt (&& "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 44 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))
        (block $b5
        (block $v1 (result i32)
        (i32.const 0)
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.load)
        (i32.eqz)
        (br_if $v1)
        (drop)
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
        )
        (i32.eqz)
        (br_if $b5)
        ;; (Block 44 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))))))
        ;; {
          ;; (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))
          (block $b6
          (block $b7
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.load)
          (i32.eq)
          (i32.eqz)
          (br_if $b7)
          ;; (Block 45 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0))))
          ;; {
            ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2))))
            (get_global $fp)
            (i32.const 24)
            (i32.add)
            (i32.const 4)
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (i32.load)
            (i32.mul)
            (i32.add)
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.load)
            (i32.const 2)
            (i32.mul)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
            ;; (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1))))
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (i32.load)
            (i32.const 1)
            (i32.add)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
            ;; (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 2)))))
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.load)
            (i32.const 2)
            (i32.mul)
            (get_global $sp)
            (get_global $fp)
            (i32.store)
            (get_global $sp)
            (set_global $fp)
            (call $add_score)
            (get_global $fp)
            (i32.load)
            (set_global $fp)
            ;; (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (Integer "[integer]" 0)))
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.const 0)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
          ;; }
          (br $b6)
          )
          ;; (IfStmt (== "[integer]" (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "38,1" "[integer]")) (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))))
          (block $b8
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.load)
          (i32.ne)
          (i32.eqz)
          (br_if $b8)
          ;; (Block 46 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))
          ;; {
            ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]")))
            (get_global $fp)
            (i32.const 24)
            (i32.add)
            (i32.const 4)
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (i32.load)
            (i32.mul)
            (i32.add)
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.load)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
            ;; (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1))))
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (i32.load)
            (i32.const 1)
            (i32.add)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
            ;; (ExprStmt (= "[integer]" (Var "cur_tile" "38,1" "[integer]") (v[x] "[integer]" (Var "c" "40,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.const 244)
            (i32.const 16)
            (get_global $fp)
            (i32.const 12)
            (i32.add)
            (i32.load)
            (i32.mul)
            (i32.add)
            (i32.const 4)
            (get_global $fp)
            (i32.const 44)
            (i32.add)
            (i32.load)
            (i32.mul)
            (i32.add)
            (i32.load)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
          ;; }
          )
          )
        ;; }
        )
        )
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux1)
      )
      )
      ;; (IfStmt (Var "cur_tile" "38,1" "[integer]") (Block 47 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1))))))
      (block $b9
      (get_global $fp)
      (i32.const 20)
      (i32.add)
      (i32.load)
      (i32.eqz)
      (br_if $b9)
      ;; (Block 47 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1)))))
      ;; {
        ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "38,0" "[integer]") (Var "new_row" "38,2" "[[4]integer]")) (Var "cur_tile" "38,1" "[integer]")))
        (get_global $fp)
        (i32.const 24)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (get_global $fp)
        (i32.const 20)
        (i32.add)
        (i32.load)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        ;; (ExprStmt (= "[integer]" (Var "n" "38,0" "[integer]") (+ "[integer]" (Var "n" "38,0" "[integer]") (Integer "[integer]" 1))))
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (i32.load)
        (i32.const 1)
        (i32.add)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      )
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1)))) (Block 48 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (Var "j" "38,3" "[integer]"))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "37,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]"))))))
      ;; (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk1
      (loop $loopaux1
      (block $loop1
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk1)
      ;; (Block 48 (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (Var "j" "38,3" "[integer]"))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "37,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")))))
      ;; {
        ;; (IfElseStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (Var "j" "38,3" "[integer]")))))
        (block $b10
        (block $b11
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.const 1)
        (i32.eq)
        (i32.eqz)
        (br_if $b11)
        ;; (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "38,3" "[integer]"))))
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (i32.const 3)
        (get_global $fp)
        (i32.const 40)
        (i32.add)
        (i32.load)
        (i32.sub)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        (br $b10)
        )
        ;; (IfStmt (== "[integer]" (Var "dir" "37,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (Var "j" "38,3" "[integer]"))))
        (block $b12
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.const 0)
        (i32.const 1)
        (i32.sub)
        (i32.eq)
        (i32.eqz)
        (br_if $b12)
        ;; (ExprStmt (= "[integer]" (Var "c" "48,0" "[integer]") (Var "j" "38,3" "[integer]")))
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (get_global $fp)
        (i32.const 40)
        (i32.add)
        (i32.load)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        )
        )
        ;; (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "37,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 1))))
        (block $b13
        (block $v2 (result i32)
        (i32.const 0)
          (get_global $fp)
          (i32.const 8)
          (i32.add)
          (i32.load)
          (i32.eqz)
        (i32.eqz)
        (br_if $v2)
        (drop)
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (get_global $fp)
          (i32.const 24)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 40)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (i32.ne)
        )
        (i32.eqz)
        (br_if $b13)
        ;; (ExprStmt (= "[integer]" (Var "moved" "37,1" "[integer]") (Integer "[integer]" 1)))
        (get_global $fp)
        (i32.const 8)
        (i32.add)
        (i32.const 1)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        )
        ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "c" "48,0" "[integer]") (v[x] "[[4]integer]" (Var "i" "37,2" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "38,3" "[integer]") (Var "new_row" "38,2" "[[4]integer]"))))
        (i32.const 244)
        (i32.const 16)
        (get_global $fp)
        (i32.const 12)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (get_global $fp)
        (i32.const 24)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 40)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.load)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "j" "38,3" "[integer]") (+ "[integer]" (Var "j" "38,3" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux1)
      )
      )
    ;; }
    )
    ;; (ExprStmt (= "[integer]" (Var "i" "37,2" "[integer]") (+ "[integer]" (Var "i" "37,2" "[integer]") (Integer "[integer]" 1))))
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.load)
    (i32.const 1)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (br $loopaux0)
    )
    )
    ;; (return (Var "moved" "37,1" "[integer]"))
    (get_global $fp)
    (i32.const 8)
    (i32.add)
    (i32.load)
    (return)
  ;; }
  (get_global $sp)
  (i32.const 48)
  (i32.sub)
  (set_global $sp)
  )

  (func $move_table_vert
  (param i32)
  (result i32)
  (get_global $sp)
  (i32.const 48)
  (i32.add)
  (set_global $sp)
  ;; dir
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; (Block 49 (Block (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "i" "49,2" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "49,2" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "49,2" "[integer]") (+ "[integer]" (Var "i" "49,2" "[integer]") (Integer "[integer]" 1)))) (Block 50 (Block (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 0))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 51 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Integer "[integer]" 0))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 52 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (Var "j" "50,3" "[integer]"))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "50,1" "[integer]")) (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 53 (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 54 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))))) (IfStmt (Var "cur_tile" "50,1" "[integer]") (Block 57 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 58 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (Block 59 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (Var "j" "50,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 60 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]"))))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "49,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")))))))) (return (Var "moved" "49,1" "[integer]")))
  ;; {
    ;; (Block (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 0))))
    ;; {
      ;; (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
    ;; }
    ;; (ForStmt (ExprStmt (= "[integer]" (Var "i" "49,2" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "i" "49,2" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "i" "49,2" "[integer]") (+ "[integer]" (Var "i" "49,2" "[integer]") (Integer "[integer]" 1)))) (Block 50 (Block (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 0))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 51 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Integer "[integer]" 0))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 52 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (Var "j" "50,3" "[integer]"))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "50,1" "[integer]")) (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 53 (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 54 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))))) (IfStmt (Var "cur_tile" "50,1" "[integer]") (Block 57 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 58 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (Block 59 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (Var "j" "50,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 60 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]"))))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "49,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]"))))))))
    ;; (ExprStmt (= "[integer]" (Var "i" "49,2" "[integer]") (Integer "[integer]" 0)))
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (block $loopbrk0
    (loop $loopaux0
    (block $loop0
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.load)
    (i32.const 4)
    (i32.lt_s)
    (i32.eqz)
    (br_if $loopbrk0)
    ;; (Block 50 (Block (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 0))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 51 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Integer "[integer]" 0))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 52 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (Var "j" "50,3" "[integer]"))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "50,1" "[integer]")) (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 53 (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 54 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))))) (IfStmt (Var "cur_tile" "50,1" "[integer]") (Block 57 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))))) (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 58 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (Block 59 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (Var "j" "50,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 60 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]"))))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "49,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")))))))
    ;; {
      ;; (Block (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 0))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0))))
      ;; {
        ;; (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 0)))
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (i32.const 0)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        ;; (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))
        (get_global $fp)
        (i32.const 20)
        (i32.add)
        (i32.const 0)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 51 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Integer "[integer]" 0)))))
      ;; (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk1
      (loop $loopaux1
      (block $loop1
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk1)
      ;; (Block 51 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Integer "[integer]" 0))))
      ;; {
        ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Integer "[integer]" 0)))
        (get_global $fp)
        (i32.const 24)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 40)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.const 0)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux1)
      )
      )
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 52 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (Var "j" "50,3" "[integer]"))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "50,1" "[integer]")) (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 53 (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 54 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))))))))))
      ;; (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk1
      (loop $loopaux1
      (block $loop1
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk1)
      ;; (Block 52 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (Var "j" "50,3" "[integer]"))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]")))))) (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "50,1" "[integer]")) (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 53 (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 54 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))))
      ;; {
        ;; (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (Var "j" "50,3" "[integer]"))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]"))))))
        (block $b0
        (block $b1
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.const 1)
        (i32.eq)
        (i32.eqz)
        (br_if $b1)
        ;; (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (Var "j" "50,3" "[integer]")))
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (get_global $fp)
        (i32.const 40)
        (i32.add)
        (i32.load)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        (br $b0)
        )
        ;; (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]")))))
        (block $b2
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.const 0)
        (i32.const 1)
        (i32.sub)
        (i32.eq)
        (i32.eqz)
        (br_if $b2)
        ;; (ExprStmt (= "[integer]" (Var "r" "52,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]"))))
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (i32.const 3)
        (get_global $fp)
        (i32.const 40)
        (i32.add)
        (i32.load)
        (i32.sub)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        )
        )
        ;; (IfElseStmt (&& "[integer]" (! "[integer]" (Var "cur_tile" "50,1" "[integer]")) (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 53 (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))) (IfStmt (&& "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 54 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))))))))
        (block $b3
        (block $b4
        (block $v0 (result i32)
        (i32.const 0)
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.load)
          (i32.eqz)
        (i32.eqz)
        (br_if $v0)
        (drop)
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
        )
        (i32.eqz)
        (br_if $b4)
        ;; (Block 53 (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        (br $b3)
        )
        ;; (IfStmt (&& "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))) (Block 54 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))))
        (block $b5
        (block $v1 (result i32)
        (i32.const 0)
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.load)
        (i32.eqz)
        (br_if $v1)
        (drop)
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
        )
        (i32.eqz)
        (br_if $b5)
        ;; (Block 54 (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))))))
        ;; {
          ;; (IfElseStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))) (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))))
          (block $b6
          (block $b7
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.load)
          (i32.eq)
          (i32.eqz)
          (br_if $b7)
          ;; (Block 55 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0))))
          ;; {
            ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2))))
            (get_global $fp)
            (i32.const 24)
            (i32.add)
            (i32.const 4)
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (i32.load)
            (i32.mul)
            (i32.add)
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.load)
            (i32.const 2)
            (i32.mul)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
            ;; (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1))))
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (i32.load)
            (i32.const 1)
            (i32.add)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
            ;; (ExprStmt ("f(x)" "[void]" (Var "add_score" "0,31" "[(integer n)void]") ( (* "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 2)))))
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.load)
            (i32.const 2)
            (i32.mul)
            (get_global $sp)
            (get_global $fp)
            (i32.store)
            (get_global $sp)
            (set_global $fp)
            (call $add_score)
            (get_global $fp)
            (i32.load)
            (set_global $fp)
            ;; (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (Integer "[integer]" 0)))
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.const 0)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
          ;; }
          (br $b6)
          )
          ;; (IfStmt (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (Var "cur_tile" "50,1" "[integer]")) (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))))
          (block $b8
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (get_global $fp)
          (i32.const 20)
          (i32.add)
          (i32.load)
          (i32.ne)
          (i32.eqz)
          (br_if $b8)
          ;; (Block 56 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))))))
          ;; {
            ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]")))
            (get_global $fp)
            (i32.const 24)
            (i32.add)
            (i32.const 4)
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (i32.load)
            (i32.mul)
            (i32.add)
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.load)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
            ;; (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1))))
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (get_global $fp)
            (i32.const 16)
            (i32.add)
            (i32.load)
            (i32.const 1)
            (i32.add)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
            ;; (ExprStmt (= "[integer]" (Var "cur_tile" "50,1" "[integer]") (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "52,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]")))))
            (get_global $fp)
            (i32.const 20)
            (i32.add)
            (i32.const 244)
            (i32.const 16)
            (get_global $fp)
            (i32.const 44)
            (i32.add)
            (i32.load)
            (i32.mul)
            (i32.add)
            (i32.const 4)
            (get_global $fp)
            (i32.const 12)
            (i32.add)
            (i32.load)
            (i32.mul)
            (i32.add)
            (i32.load)
            (set_global $temp_i32)
            (get_global $temp_i32)
            (i32.store)
            (get_global $temp_i32)
            (drop)
          ;; }
          )
          )
        ;; }
        )
        )
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux1)
      )
      )
      ;; (IfStmt (Var "cur_tile" "50,1" "[integer]") (Block 57 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1))))))
      (block $b9
      (get_global $fp)
      (i32.const 20)
      (i32.add)
      (i32.load)
      (i32.eqz)
      (br_if $b9)
      ;; (Block 57 (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]"))) (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1)))))
      ;; {
        ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "n" "50,0" "[integer]") (Var "new_col" "50,2" "[[4]integer]")) (Var "cur_tile" "50,1" "[integer]")))
        (get_global $fp)
        (i32.const 24)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (get_global $fp)
        (i32.const 20)
        (i32.add)
        (i32.load)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        ;; (ExprStmt (= "[integer]" (Var "n" "50,0" "[integer]") (+ "[integer]" (Var "n" "50,0" "[integer]") (Integer "[integer]" 1))))
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (get_global $fp)
        (i32.const 16)
        (i32.add)
        (i32.load)
        (i32.const 1)
        (i32.add)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      )
      ;; (ForStmt (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0))) (< "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 4)) (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1)))) (Block 58 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (Block 59 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (Var "j" "50,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 60 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]"))))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "49,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]"))))))
      ;; (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 0)))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.const 0)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (block $loopbrk1
      (loop $loopaux1
      (block $loop1
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 4)
      (i32.lt_s)
      (i32.eqz)
      (br_if $loopbrk1)
      ;; (Block 58 (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (Block 59 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (Var "j" "50,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 60 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]"))))))) (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "49,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 1)))) (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")))))
      ;; {
        ;; (IfElseStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (Integer "[integer]" 1)) (Block 59 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (Var "j" "50,3" "[integer]")))) (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 60 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]")))))))
        (block $b10
        (block $b11
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.const 1)
        (i32.eq)
        (i32.eqz)
        (br_if $b11)
        ;; (Block 59 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (Var "j" "50,3" "[integer]"))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (Var "j" "50,3" "[integer]")))
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (get_global $fp)
          (i32.const 40)
          (i32.add)
          (i32.load)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        (br $b10)
        )
        ;; (IfStmt (== "[integer]" (Var "dir" "49,0" "[integer]") (- "[integer]" (Integer "[integer]" 1))) (Block 60 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]"))))))
        (block $b12
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.load)
        (i32.const 0)
        (i32.const 1)
        (i32.sub)
        (i32.eq)
        (i32.eqz)
        (br_if $b12)
        ;; (Block 60 (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]")))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "r" "58,0" "[integer]") (- "[integer]" (Integer "[integer]" 3) (Var "j" "50,3" "[integer]"))))
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.const 3)
          (get_global $fp)
          (i32.const 40)
          (i32.add)
          (i32.load)
          (i32.sub)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        )
        )
        ;; (IfStmt (&& "[integer]" (! "[integer]" (Var "moved" "49,1" "[integer]")) (== "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]")))) (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 1))))
        (block $b13
        (block $v2 (result i32)
        (i32.const 0)
          (get_global $fp)
          (i32.const 8)
          (i32.add)
          (i32.load)
          (i32.eqz)
        (i32.eqz)
        (br_if $v2)
        (drop)
          (i32.const 244)
          (i32.const 16)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 12)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (get_global $fp)
          (i32.const 24)
          (i32.add)
          (i32.const 4)
          (get_global $fp)
          (i32.const 40)
          (i32.add)
          (i32.load)
          (i32.mul)
          (i32.add)
          (i32.load)
          (i32.ne)
        )
        (i32.eqz)
        (br_if $b13)
        ;; (ExprStmt (= "[integer]" (Var "moved" "49,1" "[integer]") (Integer "[integer]" 1)))
        (get_global $fp)
        (i32.const 8)
        (i32.add)
        (i32.const 1)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
        )
        ;; (ExprStmt (= "[integer]" (v[x] "[integer]" (Var "i" "49,2" "[integer]") (v[x] "[[4]integer]" (Var "r" "58,0" "[integer]") (Var "table" "0,17" "[[4][4]integer]"))) (v[x] "[integer]" (Var "j" "50,3" "[integer]") (Var "new_col" "50,2" "[[4]integer]"))))
        (i32.const 244)
        (i32.const 16)
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 12)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (get_global $fp)
        (i32.const 24)
        (i32.add)
        (i32.const 4)
        (get_global $fp)
        (i32.const 40)
        (i32.add)
        (i32.load)
        (i32.mul)
        (i32.add)
        (i32.load)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      )
      ;; (ExprStmt (= "[integer]" (Var "j" "50,3" "[integer]") (+ "[integer]" (Var "j" "50,3" "[integer]") (Integer "[integer]" 1))))
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.add)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      (br $loopaux1)
      )
      )
    ;; }
    )
    ;; (ExprStmt (= "[integer]" (Var "i" "49,2" "[integer]") (+ "[integer]" (Var "i" "49,2" "[integer]") (Integer "[integer]" 1))))
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.load)
    (i32.const 1)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    (br $loopaux0)
    )
    )
    ;; (return (Var "moved" "49,1" "[integer]"))
    (get_global $fp)
    (i32.const 8)
    (i32.add)
    (i32.load)
    (return)
  ;; }
  (get_global $sp)
  (i32.const 48)
  (i32.sub)
  (set_global $sp)
  )

  (func $reset_game
  (get_global $sp)
  (i32.const 4)
  (i32.add)
  (set_global $sp)
  ;; (Block 61 (ExprStmt (= "[integer]" (Var "score" "0,15" "[integer]") (Integer "[integer]" 0))) (ExprStmt ("f(x)" "[void]" (Var "clean_table" "0,29" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "init_table" "0,28" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ())))
  ;; {
    ;; (ExprStmt (= "[integer]" (Var "score" "0,15" "[integer]") (Integer "[integer]" 0)))
    (i32.const 236)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    ;; (ExprStmt ("f(x)" "[void]" (Var "clean_table" "0,29" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $clean_table)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "init_table" "0,28" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $init_table)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $clear_screen)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $render_game)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
  ;; }
  (get_global $sp)
  (i32.const 4)
  (i32.sub)
  (set_global $sp)
  )

  (func $main
  (result i32)
  (get_global $sp)
  (i32.const 54)
  (i32.add)
  (set_global $sp)
  ;; (Block 62 (ExprStmt (= "[*char]" (Var "EMPTY_CELL" "0,13" "[*char]") (String "[*char]" "8"))) (ExprStmt (= "[integer]" (Var "TABLE_WIDTH" "0,14" "[integer]") (+ "[integer]" (Integer "[integer]" 5) (* "[integer]" (Integer "[integer]" 4) (Integer "[integer]" 8))))) (ExprStmt (= "[integer]" (Var "score" "0,15" "[integer]") (Integer "[integer]" 0))) (ExprStmt (= "[integer]" (Var "record" "0,16" "[integer]") (Integer "[integer]" 0))) (ExprStmt ("f(x)" "[void]" (Var "srand" "0,12" "[(integer s)void]") ( (Integer "[integer]" 3)))) (ExprStmt ("f(x)" "[void]" (Var "clean_table" "0,29" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "init_table" "0,28" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ())) (WhileStmt (Integer "[integer]" 1) (Block 63 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "9")))) (Block (ExprStmt (= "[integer]" (Var "linesize" "63,0" "[integer]") ("f(x)" "[integer]" (Var "readln" "0,0" "[(*char, integer)integer]") ( (V2P "[*char]" (Var "buffer" "62,0" "[[32]char]")) (Integer "[integer]" 1024)))))) (IfStmt (>= "[integer]" (Var "linesize" "63,0" "[integer]") (Integer "[integer]" 1024)) (Block 64 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "10")))) (return (Integer "[integer]" 1)))) (Block (ExprStmt (= "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 65 (continue))) (ExprStmt (= "[char]" (Var "ch" "63,2" "[char]") (v[x] "[char]" (Integer "[integer]" 0) (Var "buffer" "62,0" "[[32]char]")))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 66 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "11")))) (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ()))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 81)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 113))) (Block 67 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "12")))) (break)) (Block 68 (Block (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") (Integer "[integer]" 0)))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 119)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 87))) (Block 69 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 115)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 83))) (Block 70 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 100)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 68))) (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))))))) (IfStmt (Var "moved" "68,0" "[integer]") (Block 73 (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ())))) (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ())) (IfStmt (== "[integer]" ("f(x)" "[integer]" (Var "count_empty_tiles" "0,26" "[()integer]") ()) (Integer "[integer]" 0)) (Block 74 (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "13")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "14")))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 75 (break))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue)) (Block 77 (break)))))))))) (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (return (Integer "[integer]" 0)))
  ;; {
    ;; (ExprStmt (= "[*char]" (Var "EMPTY_CELL" "0,13" "[*char]") (String "[*char]" "8")))
    (i32.const 228)
    (i32.const 96)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    ;; (ExprStmt (= "[integer]" (Var "TABLE_WIDTH" "0,14" "[integer]") (+ "[integer]" (Integer "[integer]" 5) (* "[integer]" (Integer "[integer]" 4) (Integer "[integer]" 8)))))
    (i32.const 232)
    (i32.const 5)
    (i32.const 4)
    (i32.const 8)
    (i32.mul)
    (i32.add)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    ;; (ExprStmt (= "[integer]" (Var "score" "0,15" "[integer]") (Integer "[integer]" 0)))
    (i32.const 236)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    ;; (ExprStmt (= "[integer]" (Var "record" "0,16" "[integer]") (Integer "[integer]" 0)))
    (i32.const 240)
    (i32.const 0)
    (set_global $temp_i32)
    (get_global $temp_i32)
    (i32.store)
    (get_global $temp_i32)
    (drop)
    ;; (ExprStmt ("f(x)" "[void]" (Var "srand" "0,12" "[(integer s)void]") ( (Integer "[integer]" 3))))
    (i32.const 3)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $srand)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "clean_table" "0,29" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $clean_table)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "init_table" "0,28" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $init_table)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $clear_screen)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $render_game)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (WhileStmt (Integer "[integer]" 1) (Block 63 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "9")))) (Block (ExprStmt (= "[integer]" (Var "linesize" "63,0" "[integer]") ("f(x)" "[integer]" (Var "readln" "0,0" "[(*char, integer)integer]") ( (V2P "[*char]" (Var "buffer" "62,0" "[[32]char]")) (Integer "[integer]" 1024)))))) (IfStmt (>= "[integer]" (Var "linesize" "63,0" "[integer]") (Integer "[integer]" 1024)) (Block 64 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "10")))) (return (Integer "[integer]" 1)))) (Block (ExprStmt (= "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 65 (continue))) (ExprStmt (= "[char]" (Var "ch" "63,2" "[char]") (v[x] "[char]" (Integer "[integer]" 0) (Var "buffer" "62,0" "[[32]char]")))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 66 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "11")))) (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ()))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 81)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 113))) (Block 67 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "12")))) (break)) (Block 68 (Block (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") (Integer "[integer]" 0)))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 119)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 87))) (Block 69 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 115)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 83))) (Block 70 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 100)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 68))) (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))))))) (IfStmt (Var "moved" "68,0" "[integer]") (Block 73 (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ())))) (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ())) (IfStmt (== "[integer]" ("f(x)" "[integer]" (Var "count_empty_tiles" "0,26" "[()integer]") ()) (Integer "[integer]" 0)) (Block 74 (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "13")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "14")))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 75 (break))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue)) (Block 77 (break))))))))))
    (block $loopbrk0
    (loop $loop0
    (i32.const 1)
    (i32.eqz)
    (br_if $loopbrk0)
    ;; (Block 63 (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "9")))) (Block (ExprStmt (= "[integer]" (Var "linesize" "63,0" "[integer]") ("f(x)" "[integer]" (Var "readln" "0,0" "[(*char, integer)integer]") ( (V2P "[*char]" (Var "buffer" "62,0" "[[32]char]")) (Integer "[integer]" 1024)))))) (IfStmt (>= "[integer]" (Var "linesize" "63,0" "[integer]") (Integer "[integer]" 1024)) (Block 64 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "10")))) (return (Integer "[integer]" 1)))) (Block (ExprStmt (= "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 65 (continue))) (ExprStmt (= "[char]" (Var "ch" "63,2" "[char]") (v[x] "[char]" (Integer "[integer]" 0) (Var "buffer" "62,0" "[[32]char]")))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 66 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "11")))) (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ()))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 81)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 113))) (Block 67 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "12")))) (break)) (Block 68 (Block (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") (Integer "[integer]" 0)))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 119)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 87))) (Block 69 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 115)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 83))) (Block 70 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 100)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 68))) (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))))))) (IfStmt (Var "moved" "68,0" "[integer]") (Block 73 (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ())))) (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ())) (IfStmt (== "[integer]" ("f(x)" "[integer]" (Var "count_empty_tiles" "0,26" "[()integer]") ()) (Integer "[integer]" 0)) (Block 74 (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "13")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "14")))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 75 (break))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue)) (Block 77 (break)))))))))
    ;; {
      ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "9"))))
      (i32.const 112)
      (get_global $sp)
      (get_global $fp)
      (i32.store)
      (get_global $sp)
      (set_global $fp)
      (call $print)
      (get_global $fp)
      (i32.load)
      (set_global $fp)
      ;; (Block (ExprStmt (= "[integer]" (Var "linesize" "63,0" "[integer]") ("f(x)" "[integer]" (Var "readln" "0,0" "[(*char, integer)integer]") ( (V2P "[*char]" (Var "buffer" "62,0" "[[32]char]")) (Integer "[integer]" 1024))))))
      ;; {
        ;; (ExprStmt (= "[integer]" (Var "linesize" "63,0" "[integer]") ("f(x)" "[integer]" (Var "readln" "0,0" "[(*char, integer)integer]") ( (V2P "[*char]" (Var "buffer" "62,0" "[[32]char]")) (Integer "[integer]" 1024)))))
        (get_global $fp)
        (i32.const 36)
        (i32.add)
        (get_global $fp)
        (i32.const 4)
        (i32.add)
        (i32.const 1024)
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $readln)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      ;; (IfStmt (>= "[integer]" (Var "linesize" "63,0" "[integer]") (Integer "[integer]" 1024)) (Block 64 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "10")))) (return (Integer "[integer]" 1))))
      (block $b0
      (get_global $fp)
      (i32.const 36)
      (i32.add)
      (i32.load)
      (i32.const 1024)
      (i32.ge_s)
      (i32.eqz)
      (br_if $b0)
      ;; (Block 64 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "10")))) (return (Integer "[integer]" 1)))
      ;; {
        ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "10"))))
        (i32.const 120)
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $println)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        ;; (return (Integer "[integer]" 1))
        (i32.const 1)
        (return)
      ;; }
      )
      ;; (Block (ExprStmt (= "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1))))
      ;; {
        ;; (ExprStmt (= "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)))
        (get_global $fp)
        (i32.const 40)
        (i32.add)
        (i32.const 1)
        (set_global $temp_i32)
        (get_global $temp_i32)
        (i32.store)
        (get_global $temp_i32)
        (drop)
      ;; }
      ;; (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 65 (continue)))
      (block $b1
      (get_global $fp)
      (i32.const 40)
      (i32.add)
      (i32.load)
      (i32.const 1)
      (i32.ne)
      (i32.eqz)
      (br_if $b1)
      ;; (Block 65 (continue))
      ;; {
        ;; (continue)
        (br $loop0)
      ;; }
      )
      ;; (ExprStmt (= "[char]" (Var "ch" "63,2" "[char]") (v[x] "[char]" (Integer "[integer]" 0) (Var "buffer" "62,0" "[[32]char]"))))
      (get_global $fp)
      (i32.const 44)
      (i32.add)
      (get_global $fp)
      (i32.const 4)
      (i32.add)
      (i32.const 1)
      (i32.const 0)
      (i32.mul)
      (i32.add)
      (i32.load8_s)
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
      ;; (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 66 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "11")))) (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ()))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 81)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 113))) (Block 67 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "12")))) (break)) (Block 68 (Block (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") (Integer "[integer]" 0)))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 119)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 87))) (Block 69 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 115)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 83))) (Block 70 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 100)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 68))) (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))))))) (IfStmt (Var "moved" "68,0" "[integer]") (Block 73 (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ())))) (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ())) (IfStmt (== "[integer]" ("f(x)" "[integer]" (Var "count_empty_tiles" "0,26" "[()integer]") ()) (Integer "[integer]" 0)) (Block 74 (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "13")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "14")))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 75 (break))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue)) (Block 77 (break))))))))
      (block $b2
      (block $b3
      (block $v0 (result i32)
      (i32.const 1)
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (i32.load8_s)
        (i32.const 82)
        (i32.eq)
      (br_if $v0)
      (drop)
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (i32.load8_s)
        (i32.const 114)
        (i32.eq)
      )
      (i32.eqz)
      (br_if $b3)
      ;; (Block 66 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "11")))) (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())))
      ;; {
        ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "11"))))
        (i32.const 144)
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $println)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        ;; (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ()))
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $reset_game)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
      ;; }
      (br $b2)
      )
      ;; (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 81)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 113))) (Block 67 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "12")))) (break)) (Block 68 (Block (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") (Integer "[integer]" 0)))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 119)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 87))) (Block 69 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 115)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 83))) (Block 70 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 100)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 68))) (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))))))) (IfStmt (Var "moved" "68,0" "[integer]") (Block 73 (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ())))) (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ())) (IfStmt (== "[integer]" ("f(x)" "[integer]" (Var "count_empty_tiles" "0,26" "[()integer]") ()) (Integer "[integer]" 0)) (Block 74 (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "13")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "14")))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 75 (break))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue)) (Block 77 (break)))))))
      (block $b4
      (block $b5
      (block $v1 (result i32)
      (i32.const 1)
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (i32.load8_s)
        (i32.const 81)
        (i32.eq)
      (br_if $v1)
      (drop)
        (get_global $fp)
        (i32.const 44)
        (i32.add)
        (i32.load8_s)
        (i32.const 113)
        (i32.eq)
      )
      (i32.eqz)
      (br_if $b5)
      ;; (Block 67 (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "12")))) (break))
      ;; {
        ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,3" "[(*char)void]") ( (String "[*char]" "12"))))
        (i32.const 160)
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $println)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        ;; (break)
        (br $loopbrk0)
      ;; }
      (br $b4)
      )
      ;; (Block 68 (Block (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") (Integer "[integer]" 0)))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 119)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 87))) (Block 69 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 115)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 83))) (Block 70 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 100)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 68))) (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))))))) (IfStmt (Var "moved" "68,0" "[integer]") (Block 73 (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ())))) (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ())) (IfStmt (== "[integer]" ("f(x)" "[integer]" (Var "count_empty_tiles" "0,26" "[()integer]") ()) (Integer "[integer]" 0)) (Block 74 (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "13")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "14")))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 75 (break))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue)) (Block 77 (break))))))
      ;; {
        ;; (Block (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") (Integer "[integer]" 0))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") (Integer "[integer]" 0)))
          (get_global $fp)
          (i32.const 45)
          (i32.add)
          (i32.const 0)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        ;; (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 119)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 87))) (Block 69 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 115)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 83))) (Block 70 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 100)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 68))) (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1)))))))))))
        (block $b6
        (block $b7
        (block $v2 (result i32)
        (i32.const 1)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load8_s)
          (i32.const 119)
          (i32.eq)
        (br_if $v2)
        (drop)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load8_s)
          (i32.const 87)
          (i32.eq)
        )
        (i32.eqz)
        (br_if $b7)
        ;; (Block 69 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (Integer "[integer]" 1))))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))
          (get_global $fp)
          (i32.const 45)
          (i32.add)
          (i32.const 1)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $move_table_vert)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        (br $b6)
        )
        ;; (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 115)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 83))) (Block 70 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 100)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 68))) (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))))))
        (block $b8
        (block $b9
        (block $v3 (result i32)
        (i32.const 1)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load8_s)
          (i32.const 115)
          (i32.eq)
        (br_if $v3)
        (drop)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load8_s)
          (i32.const 83)
          (i32.eq)
        )
        (i32.eqz)
        (br_if $b9)
        ;; (Block 70 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1)))))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_vert" "0,33" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))
          (get_global $fp)
          (i32.const 45)
          (i32.add)
          (i32.const 0)
          (i32.const 1)
          (i32.sub)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $move_table_vert)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        (br $b8)
        )
        ;; (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 100)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 68))) (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))) (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1)))))))))
        (block $b10
        (block $b11
        (block $v4 (result i32)
        (i32.const 1)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load8_s)
          (i32.const 100)
          (i32.eq)
        (br_if $v4)
        (drop)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load8_s)
          (i32.const 68)
          (i32.eq)
        )
        (i32.eqz)
        (br_if $b11)
        ;; (Block 71 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1))))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (Integer "[integer]" 1)))))
          (get_global $fp)
          (i32.const 45)
          (i32.add)
          (i32.const 1)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $move_table_hor)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        (br $b10)
        )
        ;; (IfStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 97)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 65))) (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))))
        (block $b12
        (block $v5 (result i32)
        (i32.const 1)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load8_s)
          (i32.const 97)
          (i32.eq)
        (br_if $v5)
        (drop)
          (get_global $fp)
          (i32.const 44)
          (i32.add)
          (i32.load8_s)
          (i32.const 65)
          (i32.eq)
        )
        (i32.eqz)
        (br_if $b12)
        ;; (Block 72 (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1)))))))
        ;; {
          ;; (ExprStmt (= "[integer]" (Var "moved" "68,0" "[integer]") ("f(x)" "[integer]" (Var "move_table_hor" "0,32" "[(integer dir)integer]") ( (- "[integer]" (Integer "[integer]" 1))))))
          (get_global $fp)
          (i32.const 45)
          (i32.add)
          (i32.const 0)
          (i32.const 1)
          (i32.sub)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $move_table_hor)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $temp_i32)
          (get_global $temp_i32)
          (i32.store)
          (get_global $temp_i32)
          (drop)
        ;; }
        )
        )
        )
        )
        ;; (IfStmt (Var "moved" "68,0" "[integer]") (Block 73 (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ()))))
        (block $b13
        (get_global $fp)
        (i32.const 45)
        (i32.add)
        (i32.load)
        (i32.eqz)
        (br_if $b13)
        ;; (Block 73 (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ())))
        ;; {
          ;; (ExprStmt ("f(x)" "[void]" (Var "insert_random_tile" "0,27" "[()void]") ()))
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $insert_random_tile)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
        ;; }
        )
        ;; (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ()))
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $clear_screen)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        ;; (ExprStmt ("f(x)" "[void]" (Var "render_game" "0,25" "[()void]") ()))
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $render_game)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        ;; (IfStmt (== "[integer]" ("f(x)" "[integer]" (Var "count_empty_tiles" "0,26" "[()integer]") ()) (Integer "[integer]" 0)) (Block 74 (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "13")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "14")))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 75 (break))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue)) (Block 77 (break)))))
        (block $b14
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $count_empty_tiles)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        (i32.const 0)
        (i32.eq)
        (i32.eqz)
        (br_if $b14)
        ;; (Block 74 (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ())) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "13")))) (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "14")))) (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 75 (break))) (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue)) (Block 77 (break))))
        ;; {
          ;; (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ()))
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $clear_screen)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          ;; (ExprStmt ("f(x)" "[void]" (Var "render_info" "0,23" "[()void]") ()))
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $render_info)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          ;; (ExprStmt ("f(x)" "[void]" (Var "render_table" "0,22" "[()void]") ()))
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $render_table)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "13"))))
          (i32.const 176)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $print)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          ;; (ExprStmt ("f(x)" "[void]" (Var "print" "0,2" "[(*char)void]") ( (String "[*char]" "14"))))
          (i32.const 192)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $print)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          ;; (IfStmt (== "[integer]" (Var "ret" "63,1" "[integer]") (Integer "[integer]" 1)) (Block 75 (break)))
          (block $b15
          (get_global $fp)
          (i32.const 40)
          (i32.add)
          (i32.load)
          (i32.const 1)
          (i32.ne)
          (i32.eqz)
          (br_if $b15)
          ;; (Block 75 (break))
          ;; {
            ;; (break)
            (br $loopbrk0)
          ;; }
          )
          ;; (IfElseStmt (|| "[integer]" (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 82)) (== "[integer]" (Var "ch" "63,2" "[char]") (Char "[char]" 114))) (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue)) (Block 77 (break)))
          (block $b16
          (block $b17
          (block $v6 (result i32)
          (i32.const 1)
            (get_global $fp)
            (i32.const 44)
            (i32.add)
            (i32.load8_s)
            (i32.const 82)
            (i32.eq)
          (br_if $v6)
          (drop)
            (get_global $fp)
            (i32.const 44)
            (i32.add)
            (i32.load8_s)
            (i32.const 114)
            (i32.eq)
          )
          (i32.eqz)
          (br_if $b17)
          ;; (Block 76 (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ())) (continue))
          ;; {
            ;; (ExprStmt ("f(x)" "[void]" (Var "reset_game" "0,34" "[()void]") ()))
            (get_global $sp)
            (get_global $fp)
            (i32.store)
            (get_global $sp)
            (set_global $fp)
            (call $reset_game)
            (get_global $fp)
            (i32.load)
            (set_global $fp)
            ;; (continue)
            (br $loop0)
          ;; }
          (br $b16)
          )
          ;; (Block 77 (break))
          ;; {
            ;; (break)
            (br $loopbrk0)
          ;; }
          )
        ;; }
        )
      ;; }
      )
      )
    ;; }
    (br $loop0)
    )
    )
    ;; (ExprStmt ("f(x)" "[void]" (Var "clear_screen" "0,18" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $clear_screen)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    ;; (return (Integer "[integer]" 0))
    (i32.const 0)
    (return)
  ;; }
  (get_global $sp)
  (i32.const 54)
  (i32.sub)
  (set_global $sp)
  )

)
