
(module
    (import "std" "sleep" (func $sleep (param i32)))
    (import "std" "readln" (func $readln (param i32) (param i32) (result i32)))
    (import "std" "_ln" (func $_ln))
    (import "std" "_print" (func $_print (param i32) (param i32)))
    (import "std" "_println" (func $_println (param i32) (param i32)))
    (import "std" "print_int" (func $print_int (param i32)))
    (import "std" "print_real" (func $print_real (param f32)))
    (import "std" "println_int" (func $println_int (param i32)))
    (import "std" "println_real" (func $println_real (param f32)))
    (import "std" "print_int_pad" (func $print_int_pad (param i32) (param i32)))
    (import "std" "print_real_pad" (func $print_real_pad (param f32) (param i32)))

    (export "memory" (memory $mem))
    (export "str_len" (func $str_len))
    (export "str_copy" (func $str_copy))
    (export "str_end" (func $str_end))
    (export "str_cat" (func $str_cat))
    (export "main" (func $main))

    (func $str_len (param $po i32) (result i32)
        (local $idx i32)
        (block $out
            (loop $loop
                local.get $po
                local.get $idx
                i32.add
                i32.load8_u
                i32.eqz
                br_if $out
                local.get $idx
                i32.const 1
                i32.add
                local.set $idx
                br $loop
            )
        )
        local.get $idx
    )
    (func $str_copy (param $dest i32) (param $src i32)
        (local $c i32)
        (block $out
            (loop $loop
                local.get $src
                i32.load8_u
                local.tee $c
                i32.eqz
                br_if $out
                local.get $dest
                local.get $c
                i32.store8
                local.get $src
                i32.const 1
                i32.add
                local.set $src
                local.get $dest
                i32.const 1
                i32.add
                local.set $dest
                br $loop
            )
        )
    )
    (func $str_end (param $po i32) (result i32)
        (block $out
            (loop $loop
                local.get $po
                i32.load8_u
                i32.eqz
                br_if $out
                local.get $po
                i32.const 1
                i32.add
                local.set $po
                br $loop
            )
        )
        local.get $po
    )
    (func $print (param $po i32)
        local.get $po
        local.get $po
        call $str_len
        call $_print
    )
    (func $println (param $po i32)
        local.get $po
        call $print
        call $_ln
    )
    (func $str_cat (param $dest i32) (param $src i32)
        local.get $dest
        call $str_end
        local.get $src
        call $str_copy
    )

(memory $mem 16)
(global $fp (mut i32) (i32.const 56))
(global $sp (mut i32) (i32.const 56))

(global $temp_i32 (mut i32) (i32.const 0))
(global $temp_f32 (mut f32) (f32.const 0))

(data (i32.const 0) "f1")
(data (i32.const 8) "f2")
(data (i32.const 16) "f3")
(data (i32.const 24) "AND 1")
(data (i32.const 32) "AND 2")
(data (i32.const 40) "OR 1")
(data (i32.const 48) "OR 2")
  (func $f1
  (param i32)
  (result i32)
  (get_global $sp)
  (i32.const 8)
  (i32.add)
  (set_global $sp)
  ;; x
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; (Block 1 (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "0")))) (return (Var "x" "1,0" "[integer]")))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "0"))))
    (i32.const 0)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (return (Var "x" "1,0" "[integer]"))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (return)
  ;; }
  (get_global $sp)
  (i32.const 8)
  (i32.sub)
  (set_global $sp)
  )

  (func $f2
  (param i32)
  (result i32)
  (get_global $sp)
  (i32.const 8)
  (i32.add)
  (set_global $sp)
  ;; x
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; (Block 2 (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "1")))) (return (Var "x" "2,0" "[integer]")))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "1"))))
    (i32.const 8)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (return (Var "x" "2,0" "[integer]"))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (return)
  ;; }
  (get_global $sp)
  (i32.const 8)
  (i32.sub)
  (set_global $sp)
  )

  (func $f3
  (param i32)
  (result i32)
  (get_global $sp)
  (i32.const 8)
  (i32.add)
  (set_global $sp)
  ;; x
  (get_global $fp)
  (i32.const 4)
  (i32.add)
  (get_local 0)
  (i32.store)
  ;; (Block 3 (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "2")))) (return (Var "x" "3,0" "[integer]")))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "2"))))
    (i32.const 16)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (return (Var "x" "3,0" "[integer]"))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (return)
  ;; }
  (get_global $sp)
  (i32.const 8)
  (i32.sub)
  (set_global $sp)
  )

  (func $test
  (get_global $sp)
  (i32.const 20)
  (i32.add)
  (set_global $sp)
  ;; (Block 4 (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "3")))) (Block (ExprStmt (= "[integer]" (Var "r1" "4,0" "[integer]") (&& "[integer]" (&& "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 1))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 0)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 0))))))) (ExprStmt ("f(x)" "[void]" (Var "println_int" "0,1" "[(integer)void]") ( (Var "r1" "4,0" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "4")))) (Block (ExprStmt (= "[integer]" (Var "r2" "4,1" "[integer]") (&& "[integer]" (&& "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 1))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 1)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 1))))))) (ExprStmt ("f(x)" "[void]" (Var "println_int" "0,1" "[(integer)void]") ( (Var "r2" "4,1" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "5")))) (Block (ExprStmt (= "[integer]" (Var "r3" "4,2" "[integer]") (|| "[integer]" (|| "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 0))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 1)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 1))))))) (ExprStmt ("f(x)" "[void]" (Var "println_int" "0,1" "[(integer)void]") ( (Var "r3" "4,2" "[integer]")))) (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "6")))) (Block (ExprStmt (= "[integer]" (Var "r4" "4,3" "[integer]") (|| "[integer]" (|| "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 0))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 0)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 0))))))) (ExprStmt ("f(x)" "[void]" (Var "println_int" "0,1" "[(integer)void]") ( (Var "r4" "4,3" "[integer]")))))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "3"))))
    (i32.const 24)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (Block (ExprStmt (= "[integer]" (Var "r1" "4,0" "[integer]") (&& "[integer]" (&& "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 1))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 0)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 0)))))))
    ;; {
      ;; (ExprStmt (= "[integer]" (Var "r1" "4,0" "[integer]") (&& "[integer]" (&& "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 1))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 0)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 0))))))
      (get_global $fp)
      (i32.const 4)
      (i32.add)
      (block $v0 (result i32)
      (i32.const 0)
        (block $v1 (result i32)
        (i32.const 0)
          (i32.const 1)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $f1)
          (get_global $fp)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $sp)
        (i32.eqz)
        (br_if $v1)
        (drop)
          (i32.const 0)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $f2)
          (get_global $fp)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $sp)
        )
      (i32.eqz)
      (br_if $v0)
      (drop)
        (i32.const 0)
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $f3)
        (get_global $fp)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        (set_global $sp)
      )
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
    ;; }
    ;; (ExprStmt ("f(x)" "[void]" (Var "println_int" "0,1" "[(integer)void]") ( (Var "r1" "4,0" "[integer]"))))
    (get_global $fp)
    (i32.const 4)
    (i32.add)
    (i32.load)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println_int)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "4"))))
    (i32.const 32)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (Block (ExprStmt (= "[integer]" (Var "r2" "4,1" "[integer]") (&& "[integer]" (&& "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 1))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 1)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 1)))))))
    ;; {
      ;; (ExprStmt (= "[integer]" (Var "r2" "4,1" "[integer]") (&& "[integer]" (&& "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 1))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 1)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 1))))))
      (get_global $fp)
      (i32.const 8)
      (i32.add)
      (block $v2 (result i32)
      (i32.const 0)
        (block $v3 (result i32)
        (i32.const 0)
          (i32.const 1)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $f1)
          (get_global $fp)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $sp)
        (i32.eqz)
        (br_if $v3)
        (drop)
          (i32.const 1)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $f2)
          (get_global $fp)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $sp)
        )
      (i32.eqz)
      (br_if $v2)
      (drop)
        (i32.const 1)
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $f3)
        (get_global $fp)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        (set_global $sp)
      )
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
    ;; }
    ;; (ExprStmt ("f(x)" "[void]" (Var "println_int" "0,1" "[(integer)void]") ( (Var "r2" "4,1" "[integer]"))))
    (get_global $fp)
    (i32.const 8)
    (i32.add)
    (i32.load)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println_int)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "5"))))
    (i32.const 40)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (Block (ExprStmt (= "[integer]" (Var "r3" "4,2" "[integer]") (|| "[integer]" (|| "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 0))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 1)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 1)))))))
    ;; {
      ;; (ExprStmt (= "[integer]" (Var "r3" "4,2" "[integer]") (|| "[integer]" (|| "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 0))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 1)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 1))))))
      (get_global $fp)
      (i32.const 12)
      (i32.add)
      (block $v4 (result i32)
      (i32.const 1)
        (block $v5 (result i32)
        (i32.const 1)
          (i32.const 0)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $f1)
          (get_global $fp)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $sp)
        (br_if $v5)
        (drop)
          (i32.const 1)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $f2)
          (get_global $fp)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $sp)
        )
      (br_if $v4)
      (drop)
        (i32.const 1)
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $f3)
        (get_global $fp)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        (set_global $sp)
      )
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
    ;; }
    ;; (ExprStmt ("f(x)" "[void]" (Var "println_int" "0,1" "[(integer)void]") ( (Var "r3" "4,2" "[integer]"))))
    (get_global $fp)
    (i32.const 12)
    (i32.add)
    (i32.load)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println_int)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (ExprStmt ("f(x)" "[void]" (Var "println" "0,0" "[(*char)void]") ( (String "[*char]" "6"))))
    (i32.const 48)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (Block (ExprStmt (= "[integer]" (Var "r4" "4,3" "[integer]") (|| "[integer]" (|| "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 0))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 0)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 0)))))))
    ;; {
      ;; (ExprStmt (= "[integer]" (Var "r4" "4,3" "[integer]") (|| "[integer]" (|| "[integer]" ("f(x)" "[integer]" (Var "f1" "0,2" "[(integer x)integer]") ( (Integer "[integer]" 0))) ("f(x)" "[integer]" (Var "f2" "0,3" "[(integer x)integer]") ( (Integer "[integer]" 0)))) ("f(x)" "[integer]" (Var "f3" "0,4" "[(integer x)integer]") ( (Integer "[integer]" 0))))))
      (get_global $fp)
      (i32.const 16)
      (i32.add)
      (block $v6 (result i32)
      (i32.const 1)
        (block $v7 (result i32)
        (i32.const 1)
          (i32.const 0)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $f1)
          (get_global $fp)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $sp)
        (br_if $v7)
        (drop)
          (i32.const 0)
          (get_global $sp)
          (get_global $fp)
          (i32.store)
          (get_global $sp)
          (set_global $fp)
          (call $f2)
          (get_global $fp)
          (get_global $fp)
          (i32.load)
          (set_global $fp)
          (set_global $sp)
        )
      (br_if $v6)
      (drop)
        (i32.const 0)
        (get_global $sp)
        (get_global $fp)
        (i32.store)
        (get_global $sp)
        (set_global $fp)
        (call $f3)
        (get_global $fp)
        (get_global $fp)
        (i32.load)
        (set_global $fp)
        (set_global $sp)
      )
      (set_global $temp_i32)
      (get_global $temp_i32)
      (i32.store)
      (get_global $temp_i32)
      (drop)
    ;; }
    ;; (ExprStmt ("f(x)" "[void]" (Var "println_int" "0,1" "[(integer)void]") ( (Var "r4" "4,3" "[integer]"))))
    (get_global $fp)
    (i32.const 16)
    (i32.add)
    (i32.load)
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $println_int)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
  ;; }
  (get_global $sp)
  (i32.const 20)
  (i32.sub)
  (set_global $sp)
  )

  (func $main
  (result i32)
  (get_global $sp)
  (i32.const 4)
  (i32.add)
  (set_global $sp)
  ;; (Block 5 (ExprStmt ("f(x)" "[void]" (Var "test" "0,5" "[()void]") ())) (return (Integer "[integer]" 0)))
  ;; {
    ;; (ExprStmt ("f(x)" "[void]" (Var "test" "0,5" "[()void]") ()))
    (get_global $sp)
    (get_global $fp)
    (i32.store)
    (get_global $sp)
    (set_global $fp)
    (call $test)
    (get_global $fp)
    (get_global $fp)
    (i32.load)
    (set_global $fp)
    (set_global $sp)
    ;; (return (Integer "[integer]" 0))
    (i32.const 0)
    (return)
  ;; }
  (get_global $sp)
  (i32.const 4)
  (i32.sub)
  (set_global $sp)
  )

)
