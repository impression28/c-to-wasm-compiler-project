Terminals unused in grammar

    AUTO
    CONST
    VOLATILE
    STATIC
    EXTERN
    LONG
    REGISTER
    SIGNED
    UNSIGNED
    TYPEDEF
    SIZEOF
    ENUM
    STRUCT
    UNION
    GOTO


Grammar

    0 $accept: all $end

    1 all: program

    2 program: program program-part
    3        | %empty

    4 program-part: function-definition
    5             | declaration

    6 declaration: function-declaration
    7            | var-declaration-stmt

    8 function-declaration: type-spec ID LPAR param-list RPAR SEMI

    9 function-definition: type-spec ID LPAR param-list RPAR compound-stmt

   10 param-list: param-list COMMA param-spec
   11           | param-spec
   12           | %empty

   13 param-spec: type-spec
   14           | type-spec ID

   15 type-spec: VOID
   16          | CHAR
   17          | SHORT
   18          | INT
   19          | FLOAT
   20          | DOUBLE
   21          | ID

   22 stmt: empty-stmt
   23     | compound-stmt
   24     | var-declaration-stmt
   25     | assign-stmt
   26     | if-stmt
   27     | return-stmt
   28     | break-stmt
   29     | case-stmt
   30     | default-stmt
   31     | continue-stmt
   32     | while-stmt
   33     | do-while-stmt
   34     | for-stmt
   35     | switch-stmt
   36     | expr-stmt

   37 empty-stmt: SEMI

   38 compound-stmt: LCB stmt-list RCB

   39 stmt-list: stmt-list stmt
   40          | %empty

   41 var-declaration-stmt: type-spec var-list SEMI

   42 var-list: var-list COMMA var-item
   43         | var-item

   44 var-item: ID
   45         | ID ASSIGN expr

   46 assign-stmt: expr ASSIGN expr SEMI

   47 if-stmt: IF LPAR expr RPAR stmt
   48        | IF LPAR expr RPAR stmt ELSE stmt

   49 return-stmt: RETURN return-value SEMI

   50 return-value: expr
   51             | %empty

   52 continue-stmt: CONTINUE SEMI

   53 break-stmt: BREAK SEMI

   54 case-stmt: CASE expr COLON stmt

   55 default-stmt: DEFAULT COLON stmt

   56 while-stmt: WHILE LPAR expr RPAR stmt

   57 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI

   58 for-stmt: FOR LPAR stmt stmt expr RPAR stmt
   59         | FOR LPAR stmt stmt RPAR stmt

   60 switch-stmt: SWITCH LPAR expr RPAR stmt

   61 expr-stmt: expr SEMI

   62 expr: expr LT expr
   63     | expr BT expr
   64     | expr LET expr
   65     | expr BET expr
   66     | expr EQ expr
   67     | expr PLUS expr
   68     | expr MINUS expr
   69     | expr STAR expr
   70     | expr OVER expr
   71     | MINUS expr
   72     | expr PLUSPLUS
   73     | expr MINUSMINUS
   74     | LPAR expr RPAR
   75     | function-call
   76     | expr LB expr RB
   77     | STAR expr
   78     | INT_VAL
   79     | REAL_VAL
   80     | STR_VAL
   81     | ID

   82 function-call: expr LPAR expr-list RPAR

   83 expr-list: expr-list COMMA expr
   84          | expr
   85          | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    AUTO (258)
    CONST (259)
    VOLATILE (260)
    STATIC (261)
    EXTERN (262)
    LONG (263)
    REGISTER (264)
    SIGNED (265)
    UNSIGNED (266)
    VOID (267) 15
    CHAR (268) 16
    SHORT (269) 17
    INT (270) 18
    FLOAT (271) 19
    DOUBLE (272) 20
    TYPEDEF (273)
    SIZEOF (274)
    ENUM (275)
    STRUCT (276)
    UNION (277)
    BREAK (278) 53
    CASE (279) 54
    CONTINUE (280) 52
    DEFAULT (281) 55
    DO (282) 57
    ELSE (283) 48
    FOR (284) 58 59
    GOTO (285)
    IF (286) 47 48
    RETURN (287) 49
    SWITCH (288) 60
    WHILE (289) 56 57
    ASSIGN (290) 45 46
    EQ (291) 66
    LT (292) 62
    BT (293) 63
    LET (294) 64
    BET (295) 65
    LPAR (296) 8 9 47 48 56 57 58 59 60 74 82
    RPAR (297) 8 9 47 48 56 57 58 59 60 74 82
    SEMI (298) 8 37 41 46 49 52 53 57 61
    LCB (299) 38
    RCB (300) 38
    COLON (301) 54 55
    LB (302) 76
    RB (303) 76
    PLUS (304) 67
    MINUS (305) 68 71
    STAR (306) 69 77
    OVER (307) 70
    PLUSPLUS (308) 72
    MINUSMINUS (309) 73
    INT_VAL (310) 78
    REAL_VAL (311) 79
    ID (312) 8 9 14 21 44 45 81
    STR_VAL (313) 80
    COMMA (314) 10 42 83
    UMINUS (315)
    POINTER (316)


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    all (63)
        on left: 1
        on right: 0
    program (64)
        on left: 2 3
        on right: 1 2
    program-part (65)
        on left: 4 5
        on right: 2
    declaration (66)
        on left: 6 7
        on right: 5
    function-declaration (67)
        on left: 8
        on right: 6
    function-definition (68)
        on left: 9
        on right: 4
    param-list (69)
        on left: 10 11 12
        on right: 8 9 10
    param-spec (70)
        on left: 13 14
        on right: 10 11
    type-spec (71)
        on left: 15 16 17 18 19 20 21
        on right: 8 9 13 14 41
    stmt (72)
        on left: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
        on right: 39 47 48 54 55 56 57 58 59 60
    empty-stmt (73)
        on left: 37
        on right: 22
    compound-stmt (74)
        on left: 38
        on right: 9 23
    stmt-list (75)
        on left: 39 40
        on right: 38 39
    var-declaration-stmt (76)
        on left: 41
        on right: 7 24
    var-list (77)
        on left: 42 43
        on right: 41 42
    var-item (78)
        on left: 44 45
        on right: 42 43
    assign-stmt (79)
        on left: 46
        on right: 25
    if-stmt (80)
        on left: 47 48
        on right: 26
    return-stmt (81)
        on left: 49
        on right: 27
    return-value (82)
        on left: 50 51
        on right: 49
    continue-stmt (83)
        on left: 52
        on right: 31
    break-stmt (84)
        on left: 53
        on right: 28
    case-stmt (85)
        on left: 54
        on right: 29
    default-stmt (86)
        on left: 55
        on right: 30
    while-stmt (87)
        on left: 56
        on right: 32
    do-while-stmt (88)
        on left: 57
        on right: 33
    for-stmt (89)
        on left: 58 59
        on right: 34
    switch-stmt (90)
        on left: 60
        on right: 35
    expr-stmt (91)
        on left: 61
        on right: 36
    expr (92)
        on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 45 46 47 48 50 54 56 57 58 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 76 77 82 83 84
    function-call (93)
        on left: 82
        on right: 75
    expr-list (94)
        on left: 83 84 85
        on right: 82 83


State 0

    0 $accept: . all $end

    $default  reduce using rule 3 (program)

    all      go to state 1
    program  go to state 2


State 1

    0 $accept: all . $end

    $end  shift, and go to state 3


State 2

    1 all: program .
    2 program: program . program-part

    VOID    shift, and go to state 4
    CHAR    shift, and go to state 5
    SHORT   shift, and go to state 6
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    DOUBLE  shift, and go to state 9
    ID      shift, and go to state 10

    $default  reduce using rule 1 (all)

    program-part          go to state 11
    declaration           go to state 12
    function-declaration  go to state 13
    function-definition   go to state 14
    type-spec             go to state 15
    var-declaration-stmt  go to state 16


State 3

    0 $accept: all $end .

    $default  accept


State 4

   15 type-spec: VOID .

    $default  reduce using rule 15 (type-spec)


State 5

   16 type-spec: CHAR .

    $default  reduce using rule 16 (type-spec)


State 6

   17 type-spec: SHORT .

    $default  reduce using rule 17 (type-spec)


State 7

   18 type-spec: INT .

    $default  reduce using rule 18 (type-spec)


State 8

   19 type-spec: FLOAT .

    $default  reduce using rule 19 (type-spec)


State 9

   20 type-spec: DOUBLE .

    $default  reduce using rule 20 (type-spec)


State 10

   21 type-spec: ID .

    $default  reduce using rule 21 (type-spec)


State 11

    2 program: program program-part .

    $default  reduce using rule 2 (program)


State 12

    5 program-part: declaration .

    $default  reduce using rule 5 (program-part)


State 13

    6 declaration: function-declaration .

    $default  reduce using rule 6 (declaration)


State 14

    4 program-part: function-definition .

    $default  reduce using rule 4 (program-part)


State 15

    8 function-declaration: type-spec . ID LPAR param-list RPAR SEMI
    9 function-definition: type-spec . ID LPAR param-list RPAR compound-stmt
   41 var-declaration-stmt: type-spec . var-list SEMI

    ID  shift, and go to state 17

    var-list  go to state 18
    var-item  go to state 19


State 16

    7 declaration: var-declaration-stmt .

    $default  reduce using rule 7 (declaration)


State 17

    8 function-declaration: type-spec ID . LPAR param-list RPAR SEMI
    9 function-definition: type-spec ID . LPAR param-list RPAR compound-stmt
   44 var-item: ID .
   45         | ID . ASSIGN expr

    ASSIGN  shift, and go to state 20
    LPAR    shift, and go to state 21

    $default  reduce using rule 44 (var-item)


State 18

   41 var-declaration-stmt: type-spec var-list . SEMI
   42 var-list: var-list . COMMA var-item

    SEMI   shift, and go to state 22
    COMMA  shift, and go to state 23


State 19

   43 var-list: var-item .

    $default  reduce using rule 43 (var-list)


State 20

   45 var-item: ID ASSIGN . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 31
    function-call  go to state 32


State 21

    8 function-declaration: type-spec ID LPAR . param-list RPAR SEMI
    9 function-definition: type-spec ID LPAR . param-list RPAR compound-stmt

    VOID    shift, and go to state 4
    CHAR    shift, and go to state 5
    SHORT   shift, and go to state 6
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    DOUBLE  shift, and go to state 9
    ID      shift, and go to state 10

    $default  reduce using rule 12 (param-list)

    param-list  go to state 33
    param-spec  go to state 34
    type-spec   go to state 35


State 22

   41 var-declaration-stmt: type-spec var-list SEMI .

    $default  reduce using rule 41 (var-declaration-stmt)


State 23

   42 var-list: var-list COMMA . var-item

    ID  shift, and go to state 36

    var-item  go to state 37


State 24

   74 expr: LPAR . expr RPAR

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 38
    function-call  go to state 32


State 25

   71 expr: MINUS . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 39
    function-call  go to state 32


State 26

   77 expr: STAR . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 40
    function-call  go to state 32


State 27

   78 expr: INT_VAL .

    $default  reduce using rule 78 (expr)


State 28

   79 expr: REAL_VAL .

    $default  reduce using rule 79 (expr)


State 29

   81 expr: ID .

    $default  reduce using rule 81 (expr)


State 30

   80 expr: STR_VAL .

    $default  reduce using rule 80 (expr)


State 31

   45 var-item: ID ASSIGN expr .
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 45 (var-item)


State 32

   75 expr: function-call .

    $default  reduce using rule 75 (expr)


State 33

    8 function-declaration: type-spec ID LPAR param-list . RPAR SEMI
    9 function-definition: type-spec ID LPAR param-list . RPAR compound-stmt
   10 param-list: param-list . COMMA param-spec

    RPAR   shift, and go to state 54
    COMMA  shift, and go to state 55


State 34

   11 param-list: param-spec .

    $default  reduce using rule 11 (param-list)


State 35

   13 param-spec: type-spec .
   14           | type-spec . ID

    ID  shift, and go to state 56

    $default  reduce using rule 13 (param-spec)


State 36

   44 var-item: ID .
   45         | ID . ASSIGN expr

    ASSIGN  shift, and go to state 20

    $default  reduce using rule 44 (var-item)


State 37

   42 var-list: var-list COMMA var-item .

    $default  reduce using rule 42 (var-list)


State 38

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   74     | LPAR expr . RPAR
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    RPAR        shift, and go to state 57
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 39

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   71     | MINUS expr .
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR  shift, and go to state 46
    LB    shift, and go to state 47

    $default  reduce using rule 71 (expr)


State 40

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   77     | STAR expr .
   82 function-call: expr . LPAR expr-list RPAR

    LPAR  shift, and go to state 46
    LB    shift, and go to state 47

    $default  reduce using rule 77 (expr)


State 41

   66 expr: expr EQ . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 58
    function-call  go to state 32


State 42

   62 expr: expr LT . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 59
    function-call  go to state 32


State 43

   63 expr: expr BT . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 60
    function-call  go to state 32


State 44

   64 expr: expr LET . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 61
    function-call  go to state 32


State 45

   65 expr: expr BET . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 62
    function-call  go to state 32


State 46

   82 function-call: expr LPAR . expr-list RPAR

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    $default  reduce using rule 85 (expr-list)

    expr           go to state 63
    function-call  go to state 32
    expr-list      go to state 64


State 47

   76 expr: expr LB . expr RB

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 65
    function-call  go to state 32


State 48

   67 expr: expr PLUS . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 66
    function-call  go to state 32


State 49

   68 expr: expr MINUS . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 67
    function-call  go to state 32


State 50

   69 expr: expr STAR . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 68
    function-call  go to state 32


State 51

   70 expr: expr OVER . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 69
    function-call  go to state 32


State 52

   72 expr: expr PLUSPLUS .

    $default  reduce using rule 72 (expr)


State 53

   73 expr: expr MINUSMINUS .

    $default  reduce using rule 73 (expr)


State 54

    8 function-declaration: type-spec ID LPAR param-list RPAR . SEMI
    9 function-definition: type-spec ID LPAR param-list RPAR . compound-stmt

    SEMI  shift, and go to state 70
    LCB   shift, and go to state 71

    compound-stmt  go to state 72


State 55

   10 param-list: param-list COMMA . param-spec

    VOID    shift, and go to state 4
    CHAR    shift, and go to state 5
    SHORT   shift, and go to state 6
    INT     shift, and go to state 7
    FLOAT   shift, and go to state 8
    DOUBLE  shift, and go to state 9
    ID      shift, and go to state 10

    param-spec  go to state 73
    type-spec   go to state 35


State 56

   14 param-spec: type-spec ID .

    $default  reduce using rule 14 (param-spec)


State 57

   74 expr: LPAR expr RPAR .

    $default  reduce using rule 74 (expr)


State 58

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   66     | expr EQ expr .
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 66 (expr)


State 59

   62 expr: expr . LT expr
   62     | expr LT expr .
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 62 (expr)


State 60

   62 expr: expr . LT expr
   63     | expr . BT expr
   63     | expr BT expr .
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 63 (expr)


State 61

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   64     | expr LET expr .
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 64 (expr)


State 62

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   65     | expr BET expr .
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 65 (expr)


State 63

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR
   84 expr-list: expr .

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 84 (expr-list)


State 64

   82 function-call: expr LPAR expr-list . RPAR
   83 expr-list: expr-list . COMMA expr

    RPAR   shift, and go to state 74
    COMMA  shift, and go to state 75


State 65

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   76     | expr LB expr . RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    RB          shift, and go to state 76
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 66

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   67     | expr PLUS expr .
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 67 (expr)


State 67

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   68     | expr MINUS expr .
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 68 (expr)


State 68

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   69     | expr STAR expr .
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 69 (expr)


State 69

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   70     | expr OVER expr .
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 70 (expr)


State 70

    8 function-declaration: type-spec ID LPAR param-list RPAR SEMI .

    $default  reduce using rule 8 (function-declaration)


State 71

   38 compound-stmt: LCB . stmt-list RCB

    $default  reduce using rule 40 (stmt-list)

    stmt-list  go to state 77


State 72

    9 function-definition: type-spec ID LPAR param-list RPAR compound-stmt .

    $default  reduce using rule 9 (function-definition)


State 73

   10 param-list: param-list COMMA param-spec .

    $default  reduce using rule 10 (param-list)


State 74

   82 function-call: expr LPAR expr-list RPAR .

    $default  reduce using rule 82 (function-call)


State 75

   83 expr-list: expr-list COMMA . expr

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 78
    function-call  go to state 32


State 76

   76 expr: expr LB expr RB .

    $default  reduce using rule 76 (expr)


State 77

   38 compound-stmt: LCB stmt-list . RCB
   39 stmt-list: stmt-list . stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    RCB       shift, and go to state 90
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 93
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 78

   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR
   83 expr-list: expr-list COMMA expr .

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 83 (expr-list)


State 79

   53 break-stmt: BREAK . SEMI

    SEMI  shift, and go to state 110


State 80

   54 case-stmt: CASE . expr COLON stmt

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 111
    function-call  go to state 32


State 81

   52 continue-stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 112


State 82

   55 default-stmt: DEFAULT . COLON stmt

    COLON  shift, and go to state 113


State 83

   57 do-while-stmt: DO . stmt WHILE LPAR expr RPAR SEMI

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 114
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 84

   58 for-stmt: FOR . LPAR stmt stmt expr RPAR stmt
   59         | FOR . LPAR stmt stmt RPAR stmt

    LPAR  shift, and go to state 115


State 85

   47 if-stmt: IF . LPAR expr RPAR stmt
   48        | IF . LPAR expr RPAR stmt ELSE stmt

    LPAR  shift, and go to state 116


State 86

   49 return-stmt: RETURN . return-value SEMI

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    $default  reduce using rule 51 (return-value)

    return-value   go to state 117
    expr           go to state 118
    function-call  go to state 32


State 87

   60 switch-stmt: SWITCH . LPAR expr RPAR stmt

    LPAR  shift, and go to state 119


State 88

   56 while-stmt: WHILE . LPAR expr RPAR stmt

    LPAR  shift, and go to state 120


State 89

   37 empty-stmt: SEMI .

    $default  reduce using rule 37 (empty-stmt)


State 90

   38 compound-stmt: LCB stmt-list RCB .

    $default  reduce using rule 38 (compound-stmt)


State 91

   21 type-spec: ID .
   81 expr: ID .

    ID        reduce using rule 21 (type-spec)
    $default  reduce using rule 81 (expr)


State 92

   41 var-declaration-stmt: type-spec . var-list SEMI

    ID  shift, and go to state 36

    var-list  go to state 18
    var-item  go to state 19


State 93

   39 stmt-list: stmt-list stmt .

    $default  reduce using rule 39 (stmt-list)


State 94

   22 stmt: empty-stmt .

    $default  reduce using rule 22 (stmt)


State 95

   23 stmt: compound-stmt .

    $default  reduce using rule 23 (stmt)


State 96

   24 stmt: var-declaration-stmt .

    $default  reduce using rule 24 (stmt)


State 97

   25 stmt: assign-stmt .

    $default  reduce using rule 25 (stmt)


State 98

   26 stmt: if-stmt .

    $default  reduce using rule 26 (stmt)


State 99

   27 stmt: return-stmt .

    $default  reduce using rule 27 (stmt)


State 100

   31 stmt: continue-stmt .

    $default  reduce using rule 31 (stmt)


State 101

   28 stmt: break-stmt .

    $default  reduce using rule 28 (stmt)


State 102

   29 stmt: case-stmt .

    $default  reduce using rule 29 (stmt)


State 103

   30 stmt: default-stmt .

    $default  reduce using rule 30 (stmt)


State 104

   32 stmt: while-stmt .

    $default  reduce using rule 32 (stmt)


State 105

   33 stmt: do-while-stmt .

    $default  reduce using rule 33 (stmt)


State 106

   34 stmt: for-stmt .

    $default  reduce using rule 34 (stmt)


State 107

   35 stmt: switch-stmt .

    $default  reduce using rule 35 (stmt)


State 108

   36 stmt: expr-stmt .

    $default  reduce using rule 36 (stmt)


State 109

   46 assign-stmt: expr . ASSIGN expr SEMI
   61 expr-stmt: expr . SEMI
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    ASSIGN      shift, and go to state 121
    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    SEMI        shift, and go to state 122
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 110

   53 break-stmt: BREAK SEMI .

    $default  reduce using rule 53 (break-stmt)


State 111

   54 case-stmt: CASE expr . COLON stmt
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    COLON       shift, and go to state 123
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 112

   52 continue-stmt: CONTINUE SEMI .

    $default  reduce using rule 52 (continue-stmt)


State 113

   55 default-stmt: DEFAULT COLON . stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 124
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 114

   57 do-while-stmt: DO stmt . WHILE LPAR expr RPAR SEMI

    WHILE  shift, and go to state 125


State 115

   58 for-stmt: FOR LPAR . stmt stmt expr RPAR stmt
   59         | FOR LPAR . stmt stmt RPAR stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 126
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 116

   47 if-stmt: IF LPAR . expr RPAR stmt
   48        | IF LPAR . expr RPAR stmt ELSE stmt

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 127
    function-call  go to state 32


State 117

   49 return-stmt: RETURN return-value . SEMI

    SEMI  shift, and go to state 128


State 118

   50 return-value: expr .
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53

    $default  reduce using rule 50 (return-value)


State 119

   60 switch-stmt: SWITCH LPAR . expr RPAR stmt

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 129
    function-call  go to state 32


State 120

   56 while-stmt: WHILE LPAR . expr RPAR stmt

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 130
    function-call  go to state 32


State 121

   46 assign-stmt: expr ASSIGN . expr SEMI

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 131
    function-call  go to state 32


State 122

   61 expr-stmt: expr SEMI .

    $default  reduce using rule 61 (expr-stmt)


State 123

   54 case-stmt: CASE expr COLON . stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 132
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 124

   55 default-stmt: DEFAULT COLON stmt .

    $default  reduce using rule 55 (default-stmt)


State 125

   57 do-while-stmt: DO stmt WHILE . LPAR expr RPAR SEMI

    LPAR  shift, and go to state 133


State 126

   58 for-stmt: FOR LPAR stmt . stmt expr RPAR stmt
   59         | FOR LPAR stmt . stmt RPAR stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 134
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 127

   47 if-stmt: IF LPAR expr . RPAR stmt
   48        | IF LPAR expr . RPAR stmt ELSE stmt
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    RPAR        shift, and go to state 135
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 128

   49 return-stmt: RETURN return-value SEMI .

    $default  reduce using rule 49 (return-stmt)


State 129

   60 switch-stmt: SWITCH LPAR expr . RPAR stmt
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    RPAR        shift, and go to state 136
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 130

   56 while-stmt: WHILE LPAR expr . RPAR stmt
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    RPAR        shift, and go to state 137
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 131

   46 assign-stmt: expr ASSIGN expr . SEMI
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    SEMI        shift, and go to state 138
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 132

   54 case-stmt: CASE expr COLON stmt .

    $default  reduce using rule 54 (case-stmt)


State 133

   57 do-while-stmt: DO stmt WHILE LPAR . expr RPAR SEMI

    LPAR      shift, and go to state 24
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 139
    function-call  go to state 32


State 134

   58 for-stmt: FOR LPAR stmt stmt . expr RPAR stmt
   59         | FOR LPAR stmt stmt . RPAR stmt

    LPAR      shift, and go to state 24
    RPAR      shift, and go to state 140
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 29
    STR_VAL   shift, and go to state 30

    expr           go to state 141
    function-call  go to state 32


State 135

   47 if-stmt: IF LPAR expr RPAR . stmt
   48        | IF LPAR expr RPAR . stmt ELSE stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 142
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 136

   60 switch-stmt: SWITCH LPAR expr RPAR . stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 143
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 137

   56 while-stmt: WHILE LPAR expr RPAR . stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 144
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 138

   46 assign-stmt: expr ASSIGN expr SEMI .

    $default  reduce using rule 46 (assign-stmt)


State 139

   57 do-while-stmt: DO stmt WHILE LPAR expr . RPAR SEMI
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    RPAR        shift, and go to state 145
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 140

   59 for-stmt: FOR LPAR stmt stmt RPAR . stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 146
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 141

   58 for-stmt: FOR LPAR stmt stmt expr . RPAR stmt
   62 expr: expr . LT expr
   63     | expr . BT expr
   64     | expr . LET expr
   65     | expr . BET expr
   66     | expr . EQ expr
   67     | expr . PLUS expr
   68     | expr . MINUS expr
   69     | expr . STAR expr
   70     | expr . OVER expr
   72     | expr . PLUSPLUS
   73     | expr . MINUSMINUS
   76     | expr . LB expr RB
   82 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 41
    LT          shift, and go to state 42
    BT          shift, and go to state 43
    LET         shift, and go to state 44
    BET         shift, and go to state 45
    LPAR        shift, and go to state 46
    RPAR        shift, and go to state 147
    LB          shift, and go to state 47
    PLUS        shift, and go to state 48
    MINUS       shift, and go to state 49
    STAR        shift, and go to state 50
    OVER        shift, and go to state 51
    PLUSPLUS    shift, and go to state 52
    MINUSMINUS  shift, and go to state 53


State 142

   47 if-stmt: IF LPAR expr RPAR stmt .
   48        | IF LPAR expr RPAR stmt . ELSE stmt

    ELSE  shift, and go to state 148

    $default  reduce using rule 47 (if-stmt)


State 143

   60 switch-stmt: SWITCH LPAR expr RPAR stmt .

    $default  reduce using rule 60 (switch-stmt)


State 144

   56 while-stmt: WHILE LPAR expr RPAR stmt .

    $default  reduce using rule 56 (while-stmt)


State 145

   57 do-while-stmt: DO stmt WHILE LPAR expr RPAR . SEMI

    SEMI  shift, and go to state 149


State 146

   59 for-stmt: FOR LPAR stmt stmt RPAR stmt .

    $default  reduce using rule 59 (for-stmt)


State 147

   58 for-stmt: FOR LPAR stmt stmt expr RPAR . stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 150
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 148

   48 if-stmt: IF LPAR expr RPAR stmt ELSE . stmt

    VOID      shift, and go to state 4
    CHAR      shift, and go to state 5
    SHORT     shift, and go to state 6
    INT       shift, and go to state 7
    FLOAT     shift, and go to state 8
    DOUBLE    shift, and go to state 9
    BREAK     shift, and go to state 79
    CASE      shift, and go to state 80
    CONTINUE  shift, and go to state 81
    DEFAULT   shift, and go to state 82
    DO        shift, and go to state 83
    FOR       shift, and go to state 84
    IF        shift, and go to state 85
    RETURN    shift, and go to state 86
    SWITCH    shift, and go to state 87
    WHILE     shift, and go to state 88
    LPAR      shift, and go to state 24
    SEMI      shift, and go to state 89
    LCB       shift, and go to state 71
    MINUS     shift, and go to state 25
    STAR      shift, and go to state 26
    INT_VAL   shift, and go to state 27
    REAL_VAL  shift, and go to state 28
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 30

    type-spec             go to state 92
    stmt                  go to state 151
    empty-stmt            go to state 94
    compound-stmt         go to state 95
    var-declaration-stmt  go to state 96
    assign-stmt           go to state 97
    if-stmt               go to state 98
    return-stmt           go to state 99
    continue-stmt         go to state 100
    break-stmt            go to state 101
    case-stmt             go to state 102
    default-stmt          go to state 103
    while-stmt            go to state 104
    do-while-stmt         go to state 105
    for-stmt              go to state 106
    switch-stmt           go to state 107
    expr-stmt             go to state 108
    expr                  go to state 109
    function-call         go to state 32


State 149

   57 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI .

    $default  reduce using rule 57 (do-while-stmt)


State 150

   58 for-stmt: FOR LPAR stmt stmt expr RPAR stmt .

    $default  reduce using rule 58 (for-stmt)


State 151

   48 if-stmt: IF LPAR expr RPAR stmt ELSE stmt .

    $default  reduce using rule 48 (if-stmt)
