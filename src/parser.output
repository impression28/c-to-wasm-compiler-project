Nonterminals useless in grammar

    typedef-name


Terminals unused in grammar

    SIZEOF
    GOTO


Rules useless in grammar

  149 typedef-name: ID


Grammar

    0 $accept: all $end

    1 all: program

    2 program: program program-part
    3        | %empty

    4 program-part: function-definition
    5             | declaration

    6 declaration: declaration-specifiers SEMI
    7            | declaration-specifiers init-declarator-list SEMI

    8 declaration-specifiers: declaration-specifiers declaration-specifier
    9                       | declaration-specifier

   10 declaration-specifier: storage-class-specifier
   11                      | type-specifier
   12                      | type-qualifier
   13                      | function-specifier

   14 storage-class-specifier: TYPEDEF
   15                        | EXTERN
   16                        | STATIC
   17                        | AUTO
   18                        | REGISTER

   19 type-specifier: VOID
   20               | CHAR
   21               | SHORT
   22               | INT
   23               | LONG
   24               | FLOAT
   25               | DOUBLE
   26               | SIGNED
   27               | UNSIGNED
   28               | struct-or-union-spec
   29               | enum-specifier

   30 struct-or-union-spec: struct-or-union ID
   31                     | struct-or-union ID LCB struct-declaration-list RCB
   32                     | struct-or-union LCB struct-declaration-list RCB

   33 struct-declaration-list: struct-declaration
   34                        | struct-declaration-list struct-declaration

   35 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI specifier-qualifier-list SEMI

   36 specifier-qualifier-list: specifier-qualifier-list type-specifier
   37                         | specifier-qualifier-list type-qualifier
   38                         | type-specifier
   39                         | type-qualifier

   40 struct-declarator-list: struct-declarator
   41                       | struct-declarator-list COMMA struct-declarator

   42 struct-declarator: declarator

   43 struct-or-union: STRUCT
   44                | UNION

   45 enum-specifier: ENUM ID
   46               | ENUM ID LCB enumerator-list traling-comma RCB
   47               | ENUM LCB enumerator-list traling-comma RCB

   48 traling-comma: COMMA
   49              | %empty

   50 enumerator-list: enumerator-list COMMA enumerator
   51                | enumerator

   52 enumerator: ID ASSIGN expr
   53           | ID

   54 type-qualifier: CONST
   55               | RESTRICT
   56               | VOLATILE

   57 function-specifier: INLINE

   58 init-declarator-list: init-declarator-list COMMA init-declarator
   59                     | init-declarator

   60 init-declarator: declarator ASSIGN initializer
   61                | declarator

   62 declarator: pointer direct-declarator
   63           | direct-declarator

   64 pointer: pointer STAR type-qualifier-list-opt
   65        | STAR type-qualifier-list-opt

   66 direct-declarator: ID
   67                  | LPAR declarator RPAR
   68                  | direct-declarator LB type-qualifier-list-opt expr RB
   69                  | direct-declarator LB type-qualifier-list-opt RB
   70                  | direct-declarator LB type-qualifier-list-opt STAR RB
   71                  | direct-declarator LPAR parameter-type-list RPAR
   72                  | direct-declarator LPAR identifier-list-opt RPAR

   73 identifier-list-opt: %empty

   74 type-qualifier-list: type-qualifier-list type-qualifier
   75                    | type-qualifier

   76 type-qualifier-list-opt: type-qualifier-list
   77                        | %empty

   78 parameter-type-list: parameter-list

   79 parameter-list: parameter-declaration
   80               | parameter-list COMMA parameter-declaration

   81 parameter-declaration: declaration-specifiers declarator
   82                      | declaration-specifiers abstract-declarator-opt

   83 abstract-declarator-opt: %empty

   84 initializer: expr
   85            | array-init-expr

   86 array-init-expr: LCB expr-list RCB

   87 function-definition: declaration-specifiers declarator declaration-list-opt compound-stmt

   88 declaration-list-opt: declaration-list-opt declaration
   89                     | %empty

   90 stmt: declaration
   91     | empty-stmt
   92     | compound-stmt
   93     | assign-stmt
   94     | if-stmt
   95     | return-stmt
   96     | break-stmt
   97     | case-stmt
   98     | default-stmt
   99     | continue-stmt
  100     | while-stmt
  101     | do-while-stmt
  102     | for-stmt
  103     | switch-stmt
  104     | expr-stmt

  105 empty-stmt: SEMI

  106 compound-stmt: LCB stmt-list RCB

  107 stmt-list: stmt-list stmt
  108          | %empty

  109 assign-stmt: expr ASSIGN expr SEMI

  110 if-stmt: IF LPAR expr RPAR stmt
  111        | IF LPAR expr RPAR stmt ELSE stmt

  112 return-stmt: RETURN return-value SEMI

  113 return-value: expr
  114             | %empty

  115 continue-stmt: CONTINUE SEMI

  116 break-stmt: BREAK SEMI

  117 case-stmt: CASE expr COLON stmt

  118 default-stmt: DEFAULT COLON stmt

  119 while-stmt: WHILE LPAR expr RPAR stmt

  120 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI

  121 for-stmt: FOR LPAR stmt stmt expr RPAR stmt
  122         | FOR LPAR stmt stmt RPAR stmt

  123 switch-stmt: SWITCH LPAR expr RPAR stmt

  124 expr-stmt: expr SEMI

  125 expr: expr LT expr
  126     | expr BT expr
  127     | expr LET expr
  128     | expr BET expr
  129     | expr EQ expr
  130     | expr PLUS expr
  131     | expr MINUS expr
  132     | expr STAR expr
  133     | expr OVER expr
  134     | MINUS expr
  135     | expr PLUSPLUS
  136     | expr MINUSMINUS
  137     | LPAR expr RPAR
  138     | function-call
  139     | expr LB expr RB
  140     | STAR expr
  141     | INT_VAL
  142     | REAL_VAL
  143     | STR_VAL
  144     | ID

  145 function-call: expr LPAR expr-list RPAR

  146 expr-list: expr-list COMMA expr
  147          | expr
  148          | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPEDEF (258) 14
    EXTERN (259) 15
    STATIC (260) 16
    AUTO (261) 17
    REGISTER (262) 18
    VOID (263) 19
    CHAR (264) 20
    SHORT (265) 21
    INT (266) 22
    LONG (267) 23
    FLOAT (268) 24
    DOUBLE (269) 25
    SIGNED (270) 26
    UNSIGNED (271) 27
    CONST (272) 54
    RESTRICT (273) 55
    VOLATILE (274) 56
    INLINE (275) 57
    SIZEOF (276)
    ENUM (277) 45 46 47
    STRUCT (278) 43
    UNION (279) 44
    BREAK (280) 116
    CASE (281) 117
    CONTINUE (282) 115
    DEFAULT (283) 118
    DO (284) 120
    ELSE (285) 111
    FOR (286) 121 122
    GOTO (287)
    IF (288) 110 111
    RETURN (289) 112
    SWITCH (290) 123
    WHILE (291) 119 120
    ASSIGN (292) 52 60 109
    EQ (293) 129
    LT (294) 125
    BT (295) 126
    LET (296) 127
    BET (297) 128
    LPAR (298) 67 71 72 110 111 119 120 121 122 123 137 145
    RPAR (299) 67 71 72 110 111 119 120 121 122 123 137 145
    SEMI (300) 6 7 35 105 109 112 115 116 120 124
    LCB (301) 31 32 46 47 86 106
    RCB (302) 31 32 46 47 86 106
    COLON (303) 117 118
    LB (304) 68 69 70 139
    RB (305) 68 69 70 139
    PLUS (306) 130
    MINUS (307) 131 134
    STAR (308) 64 65 70 132 140
    OVER (309) 133
    PLUSPLUS (310) 135
    MINUSMINUS (311) 136
    INT_VAL (312) 141
    REAL_VAL (313) 142
    ID (314) 30 31 45 46 52 53 66 144
    STR_VAL (315) 143
    COMMA (316) 41 48 50 58 80 146
    UMINUS (317)
    POINTER (318)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    all (65)
        on left: 1
        on right: 0
    program (66)
        on left: 2 3
        on right: 1 2
    program-part (67)
        on left: 4 5
        on right: 2
    declaration (68)
        on left: 6 7
        on right: 5 88 90
    declaration-specifiers (69)
        on left: 8 9
        on right: 6 7 8 81 82 87
    declaration-specifier (70)
        on left: 10 11 12 13
        on right: 8 9
    storage-class-specifier (71)
        on left: 14 15 16 17 18
        on right: 10
    type-specifier (72)
        on left: 19 20 21 22 23 24 25 26 27 28 29
        on right: 11 36 38
    struct-or-union-spec (73)
        on left: 30 31 32
        on right: 28
    struct-declaration-list (74)
        on left: 33 34
        on right: 31 32 34
    struct-declaration (75)
        on left: 35
        on right: 33 34
    specifier-qualifier-list (76)
        on left: 36 37 38 39
        on right: 35 36 37
    struct-declarator-list (77)
        on left: 40 41
        on right: 35 41
    struct-declarator (78)
        on left: 42
        on right: 40 41
    struct-or-union (79)
        on left: 43 44
        on right: 30 31 32
    enum-specifier (80)
        on left: 45 46 47
        on right: 29
    traling-comma (81)
        on left: 48 49
        on right: 46 47
    enumerator-list (82)
        on left: 50 51
        on right: 46 47 50
    enumerator (83)
        on left: 52 53
        on right: 50 51
    type-qualifier (84)
        on left: 54 55 56
        on right: 12 37 39 74 75
    function-specifier (85)
        on left: 57
        on right: 13
    init-declarator-list (86)
        on left: 58 59
        on right: 7 58
    init-declarator (87)
        on left: 60 61
        on right: 58 59
    declarator (88)
        on left: 62 63
        on right: 42 60 61 67 81 87
    pointer (89)
        on left: 64 65
        on right: 62 64
    direct-declarator (90)
        on left: 66 67 68 69 70 71 72
        on right: 62 63 68 69 70 71 72
    identifier-list-opt (91)
        on left: 73
        on right: 72
    type-qualifier-list (92)
        on left: 74 75
        on right: 74 76
    type-qualifier-list-opt (93)
        on left: 76 77
        on right: 64 65 68 69 70
    parameter-type-list (94)
        on left: 78
        on right: 71
    parameter-list (95)
        on left: 79 80
        on right: 78 80
    parameter-declaration (96)
        on left: 81 82
        on right: 79 80
    abstract-declarator-opt (97)
        on left: 83
        on right: 82
    initializer (98)
        on left: 84 85
        on right: 60
    array-init-expr (99)
        on left: 86
        on right: 85
    function-definition (100)
        on left: 87
        on right: 4
    declaration-list-opt (101)
        on left: 88 89
        on right: 87 88
    stmt (102)
        on left: 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
        on right: 107 110 111 117 118 119 120 121 122 123
    empty-stmt (103)
        on left: 105
        on right: 91
    compound-stmt (104)
        on left: 106
        on right: 87 92
    stmt-list (105)
        on left: 107 108
        on right: 106 107
    assign-stmt (106)
        on left: 109
        on right: 93
    if-stmt (107)
        on left: 110 111
        on right: 94
    return-stmt (108)
        on left: 112
        on right: 95
    return-value (109)
        on left: 113 114
        on right: 112
    continue-stmt (110)
        on left: 115
        on right: 99
    break-stmt (111)
        on left: 116
        on right: 96
    case-stmt (112)
        on left: 117
        on right: 97
    default-stmt (113)
        on left: 118
        on right: 98
    while-stmt (114)
        on left: 119
        on right: 100
    do-while-stmt (115)
        on left: 120
        on right: 101
    for-stmt (116)
        on left: 121 122
        on right: 102
    switch-stmt (117)
        on left: 123
        on right: 103
    expr-stmt (118)
        on left: 124
        on right: 104
    expr (119)
        on left: 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144
        on right: 52 68 84 109 110 111 113 117 119 120 121 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 139 140 145 146 147
    function-call (120)
        on left: 145
        on right: 138
    expr-list (121)
        on left: 146 147 148
        on right: 86 145 146


State 0

    0 $accept: . all $end

    $default  reduce using rule 3 (program)

    all      go to state 1
    program  go to state 2


State 1

    0 $accept: all . $end

    $end  shift, and go to state 3


State 2

    1 all: program .
    2 program: program . program-part

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24

    $default  reduce using rule 1 (all)

    program-part             go to state 25
    declaration              go to state 26
    declaration-specifiers   go to state 27
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    function-definition      go to state 36


State 3

    0 $accept: all $end .

    $default  accept


State 4

   14 storage-class-specifier: TYPEDEF .

    $default  reduce using rule 14 (storage-class-specifier)


State 5

   15 storage-class-specifier: EXTERN .

    $default  reduce using rule 15 (storage-class-specifier)


State 6

   16 storage-class-specifier: STATIC .

    $default  reduce using rule 16 (storage-class-specifier)


State 7

   17 storage-class-specifier: AUTO .

    $default  reduce using rule 17 (storage-class-specifier)


State 8

   18 storage-class-specifier: REGISTER .

    $default  reduce using rule 18 (storage-class-specifier)


State 9

   19 type-specifier: VOID .

    $default  reduce using rule 19 (type-specifier)


State 10

   20 type-specifier: CHAR .

    $default  reduce using rule 20 (type-specifier)


State 11

   21 type-specifier: SHORT .

    $default  reduce using rule 21 (type-specifier)


State 12

   22 type-specifier: INT .

    $default  reduce using rule 22 (type-specifier)


State 13

   23 type-specifier: LONG .

    $default  reduce using rule 23 (type-specifier)


State 14

   24 type-specifier: FLOAT .

    $default  reduce using rule 24 (type-specifier)


State 15

   25 type-specifier: DOUBLE .

    $default  reduce using rule 25 (type-specifier)


State 16

   26 type-specifier: SIGNED .

    $default  reduce using rule 26 (type-specifier)


State 17

   27 type-specifier: UNSIGNED .

    $default  reduce using rule 27 (type-specifier)


State 18

   54 type-qualifier: CONST .

    $default  reduce using rule 54 (type-qualifier)


State 19

   55 type-qualifier: RESTRICT .

    $default  reduce using rule 55 (type-qualifier)


State 20

   56 type-qualifier: VOLATILE .

    $default  reduce using rule 56 (type-qualifier)


State 21

   57 function-specifier: INLINE .

    $default  reduce using rule 57 (function-specifier)


State 22

   45 enum-specifier: ENUM . ID
   46               | ENUM . ID LCB enumerator-list traling-comma RCB
   47               | ENUM . LCB enumerator-list traling-comma RCB

    LCB  shift, and go to state 37
    ID   shift, and go to state 38


State 23

   43 struct-or-union: STRUCT .

    $default  reduce using rule 43 (struct-or-union)


State 24

   44 struct-or-union: UNION .

    $default  reduce using rule 44 (struct-or-union)


State 25

    2 program: program program-part .

    $default  reduce using rule 2 (program)


State 26

    5 program-part: declaration .

    $default  reduce using rule 5 (program-part)


State 27

    6 declaration: declaration-specifiers . SEMI
    7            | declaration-specifiers . init-declarator-list SEMI
    8 declaration-specifiers: declaration-specifiers . declaration-specifier
   87 function-definition: declaration-specifiers . declarator declaration-list-opt compound-stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 39
    SEMI      shift, and go to state 40
    STAR      shift, and go to state 41
    ID        shift, and go to state 42

    declaration-specifier    go to state 43
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    init-declarator-list     go to state 44
    init-declarator          go to state 45
    declarator               go to state 46
    pointer                  go to state 47
    direct-declarator        go to state 48


State 28

    9 declaration-specifiers: declaration-specifier .

    $default  reduce using rule 9 (declaration-specifiers)


State 29

   10 declaration-specifier: storage-class-specifier .

    $default  reduce using rule 10 (declaration-specifier)


State 30

   11 declaration-specifier: type-specifier .

    $default  reduce using rule 11 (declaration-specifier)


State 31

   28 type-specifier: struct-or-union-spec .

    $default  reduce using rule 28 (type-specifier)


State 32

   30 struct-or-union-spec: struct-or-union . ID
   31                     | struct-or-union . ID LCB struct-declaration-list RCB
   32                     | struct-or-union . LCB struct-declaration-list RCB

    LCB  shift, and go to state 49
    ID   shift, and go to state 50


State 33

   29 type-specifier: enum-specifier .

    $default  reduce using rule 29 (type-specifier)


State 34

   12 declaration-specifier: type-qualifier .

    $default  reduce using rule 12 (declaration-specifier)


State 35

   13 declaration-specifier: function-specifier .

    $default  reduce using rule 13 (declaration-specifier)


State 36

    4 program-part: function-definition .

    $default  reduce using rule 4 (program-part)


State 37

   47 enum-specifier: ENUM LCB . enumerator-list traling-comma RCB

    ID  shift, and go to state 51

    enumerator-list  go to state 52
    enumerator       go to state 53


State 38

   45 enum-specifier: ENUM ID .
   46               | ENUM ID . LCB enumerator-list traling-comma RCB

    LCB  shift, and go to state 54

    $default  reduce using rule 45 (enum-specifier)


State 39

   67 direct-declarator: LPAR . declarator RPAR

    LPAR  shift, and go to state 39
    STAR  shift, and go to state 41
    ID    shift, and go to state 42

    declarator         go to state 55
    pointer            go to state 47
    direct-declarator  go to state 48


State 40

    6 declaration: declaration-specifiers SEMI .

    $default  reduce using rule 6 (declaration)


State 41

   65 pointer: STAR . type-qualifier-list-opt

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 77 (type-qualifier-list-opt)

    type-qualifier           go to state 56
    type-qualifier-list      go to state 57
    type-qualifier-list-opt  go to state 58


State 42

   66 direct-declarator: ID .

    $default  reduce using rule 66 (direct-declarator)


State 43

    8 declaration-specifiers: declaration-specifiers declaration-specifier .

    $default  reduce using rule 8 (declaration-specifiers)


State 44

    7 declaration: declaration-specifiers init-declarator-list . SEMI
   58 init-declarator-list: init-declarator-list . COMMA init-declarator

    SEMI   shift, and go to state 59
    COMMA  shift, and go to state 60


State 45

   59 init-declarator-list: init-declarator .

    $default  reduce using rule 59 (init-declarator-list)


State 46

   60 init-declarator: declarator . ASSIGN initializer
   61                | declarator .
   87 function-definition: declaration-specifiers declarator . declaration-list-opt compound-stmt

    ASSIGN  shift, and go to state 61

    SEMI      reduce using rule 61 (init-declarator)
    COMMA     reduce using rule 61 (init-declarator)
    $default  reduce using rule 89 (declaration-list-opt)

    declaration-list-opt  go to state 62


State 47

   62 declarator: pointer . direct-declarator
   64 pointer: pointer . STAR type-qualifier-list-opt

    LPAR  shift, and go to state 39
    STAR  shift, and go to state 63
    ID    shift, and go to state 42

    direct-declarator  go to state 64


State 48

   63 declarator: direct-declarator .
   68 direct-declarator: direct-declarator . LB type-qualifier-list-opt expr RB
   69                  | direct-declarator . LB type-qualifier-list-opt RB
   70                  | direct-declarator . LB type-qualifier-list-opt STAR RB
   71                  | direct-declarator . LPAR parameter-type-list RPAR
   72                  | direct-declarator . LPAR identifier-list-opt RPAR

    LPAR  shift, and go to state 65
    LB    shift, and go to state 66

    $default  reduce using rule 63 (declarator)


State 49

   32 struct-or-union-spec: struct-or-union LCB . struct-declaration-list RCB

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24

    type-specifier            go to state 67
    struct-or-union-spec      go to state 31
    struct-declaration-list   go to state 68
    struct-declaration        go to state 69
    specifier-qualifier-list  go to state 70
    struct-or-union           go to state 32
    enum-specifier            go to state 33
    type-qualifier            go to state 71


State 50

   30 struct-or-union-spec: struct-or-union ID .
   31                     | struct-or-union ID . LCB struct-declaration-list RCB

    LCB  shift, and go to state 72

    $default  reduce using rule 30 (struct-or-union-spec)


State 51

   52 enumerator: ID . ASSIGN expr
   53           | ID .

    ASSIGN  shift, and go to state 73

    $default  reduce using rule 53 (enumerator)


State 52

   47 enum-specifier: ENUM LCB enumerator-list . traling-comma RCB
   50 enumerator-list: enumerator-list . COMMA enumerator

    COMMA  shift, and go to state 74

    $default  reduce using rule 49 (traling-comma)

    traling-comma  go to state 75


State 53

   51 enumerator-list: enumerator .

    $default  reduce using rule 51 (enumerator-list)


State 54

   46 enum-specifier: ENUM ID LCB . enumerator-list traling-comma RCB

    ID  shift, and go to state 51

    enumerator-list  go to state 76
    enumerator       go to state 53


State 55

   67 direct-declarator: LPAR declarator . RPAR

    RPAR  shift, and go to state 77


State 56

   75 type-qualifier-list: type-qualifier .

    $default  reduce using rule 75 (type-qualifier-list)


State 57

   74 type-qualifier-list: type-qualifier-list . type-qualifier
   76 type-qualifier-list-opt: type-qualifier-list .

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 76 (type-qualifier-list-opt)

    type-qualifier  go to state 78


State 58

   65 pointer: STAR type-qualifier-list-opt .

    $default  reduce using rule 65 (pointer)


State 59

    7 declaration: declaration-specifiers init-declarator-list SEMI .

    $default  reduce using rule 7 (declaration)


State 60

   58 init-declarator-list: init-declarator-list COMMA . init-declarator

    LPAR  shift, and go to state 39
    STAR  shift, and go to state 41
    ID    shift, and go to state 42

    init-declarator    go to state 79
    declarator         go to state 80
    pointer            go to state 47
    direct-declarator  go to state 48


State 61

   60 init-declarator: declarator ASSIGN . initializer

    LPAR      shift, and go to state 81
    LCB       shift, and go to state 82
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    initializer      go to state 89
    array-init-expr  go to state 90
    expr             go to state 91
    function-call    go to state 92


State 62

   87 function-definition: declaration-specifiers declarator declaration-list-opt . compound-stmt
   88 declaration-list-opt: declaration-list-opt . declaration

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LCB       shift, and go to state 93

    declaration              go to state 94
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    compound-stmt            go to state 96


State 63

   64 pointer: pointer STAR . type-qualifier-list-opt

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 77 (type-qualifier-list-opt)

    type-qualifier           go to state 56
    type-qualifier-list      go to state 57
    type-qualifier-list-opt  go to state 97


State 64

   62 declarator: pointer direct-declarator .
   68 direct-declarator: direct-declarator . LB type-qualifier-list-opt expr RB
   69                  | direct-declarator . LB type-qualifier-list-opt RB
   70                  | direct-declarator . LB type-qualifier-list-opt STAR RB
   71                  | direct-declarator . LPAR parameter-type-list RPAR
   72                  | direct-declarator . LPAR identifier-list-opt RPAR

    LPAR  shift, and go to state 65
    LB    shift, and go to state 66

    $default  reduce using rule 62 (declarator)


State 65

   71 direct-declarator: direct-declarator LPAR . parameter-type-list RPAR
   72                  | direct-declarator LPAR . identifier-list-opt RPAR

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24

    $default  reduce using rule 73 (identifier-list-opt)

    declaration-specifiers   go to state 98
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    identifier-list-opt      go to state 99
    parameter-type-list      go to state 100
    parameter-list           go to state 101
    parameter-declaration    go to state 102


State 66

   68 direct-declarator: direct-declarator LB . type-qualifier-list-opt expr RB
   69                  | direct-declarator LB . type-qualifier-list-opt RB
   70                  | direct-declarator LB . type-qualifier-list-opt STAR RB

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 77 (type-qualifier-list-opt)

    type-qualifier           go to state 56
    type-qualifier-list      go to state 57
    type-qualifier-list-opt  go to state 103


State 67

   38 specifier-qualifier-list: type-specifier .

    $default  reduce using rule 38 (specifier-qualifier-list)


State 68

   32 struct-or-union-spec: struct-or-union LCB struct-declaration-list . RCB
   34 struct-declaration-list: struct-declaration-list . struct-declaration

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    RCB       shift, and go to state 104

    type-specifier            go to state 67
    struct-or-union-spec      go to state 31
    struct-declaration        go to state 105
    specifier-qualifier-list  go to state 70
    struct-or-union           go to state 32
    enum-specifier            go to state 33
    type-qualifier            go to state 71


State 69

   33 struct-declaration-list: struct-declaration .

    $default  reduce using rule 33 (struct-declaration-list)


State 70

   35 struct-declaration: specifier-qualifier-list . struct-declarator-list SEMI specifier-qualifier-list SEMI
   36 specifier-qualifier-list: specifier-qualifier-list . type-specifier
   37                         | specifier-qualifier-list . type-qualifier

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 39
    STAR      shift, and go to state 41
    ID        shift, and go to state 42

    type-specifier          go to state 106
    struct-or-union-spec    go to state 31
    struct-declarator-list  go to state 107
    struct-declarator       go to state 108
    struct-or-union         go to state 32
    enum-specifier          go to state 33
    type-qualifier          go to state 109
    declarator              go to state 110
    pointer                 go to state 47
    direct-declarator       go to state 48


State 71

   39 specifier-qualifier-list: type-qualifier .

    $default  reduce using rule 39 (specifier-qualifier-list)


State 72

   31 struct-or-union-spec: struct-or-union ID LCB . struct-declaration-list RCB

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24

    type-specifier            go to state 67
    struct-or-union-spec      go to state 31
    struct-declaration-list   go to state 111
    struct-declaration        go to state 69
    specifier-qualifier-list  go to state 70
    struct-or-union           go to state 32
    enum-specifier            go to state 33
    type-qualifier            go to state 71


State 73

   52 enumerator: ID ASSIGN . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 112
    function-call  go to state 92


State 74

   48 traling-comma: COMMA .
   50 enumerator-list: enumerator-list COMMA . enumerator

    ID  shift, and go to state 51

    $default  reduce using rule 48 (traling-comma)

    enumerator  go to state 113


State 75

   47 enum-specifier: ENUM LCB enumerator-list traling-comma . RCB

    RCB  shift, and go to state 114


State 76

   46 enum-specifier: ENUM ID LCB enumerator-list . traling-comma RCB
   50 enumerator-list: enumerator-list . COMMA enumerator

    COMMA  shift, and go to state 74

    $default  reduce using rule 49 (traling-comma)

    traling-comma  go to state 115


State 77

   67 direct-declarator: LPAR declarator RPAR .

    $default  reduce using rule 67 (direct-declarator)


State 78

   74 type-qualifier-list: type-qualifier-list type-qualifier .

    $default  reduce using rule 74 (type-qualifier-list)


State 79

   58 init-declarator-list: init-declarator-list COMMA init-declarator .

    $default  reduce using rule 58 (init-declarator-list)


State 80

   60 init-declarator: declarator . ASSIGN initializer
   61                | declarator .

    ASSIGN  shift, and go to state 61

    $default  reduce using rule 61 (init-declarator)


State 81

  137 expr: LPAR . expr RPAR

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 116
    function-call  go to state 92


State 82

   86 array-init-expr: LCB . expr-list RCB

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    $default  reduce using rule 148 (expr-list)

    expr           go to state 117
    function-call  go to state 92
    expr-list      go to state 118


State 83

  134 expr: MINUS . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 119
    function-call  go to state 92


State 84

  140 expr: STAR . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 120
    function-call  go to state 92


State 85

  141 expr: INT_VAL .

    $default  reduce using rule 141 (expr)


State 86

  142 expr: REAL_VAL .

    $default  reduce using rule 142 (expr)


State 87

  144 expr: ID .

    $default  reduce using rule 144 (expr)


State 88

  143 expr: STR_VAL .

    $default  reduce using rule 143 (expr)


State 89

   60 init-declarator: declarator ASSIGN initializer .

    $default  reduce using rule 60 (init-declarator)


State 90

   85 initializer: array-init-expr .

    $default  reduce using rule 85 (initializer)


State 91

   84 initializer: expr .
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 84 (initializer)


State 92

  138 expr: function-call .

    $default  reduce using rule 138 (expr)


State 93

  106 compound-stmt: LCB . stmt-list RCB

    $default  reduce using rule 108 (stmt-list)

    stmt-list  go to state 134


State 94

   88 declaration-list-opt: declaration-list-opt declaration .

    $default  reduce using rule 88 (declaration-list-opt)


State 95

    6 declaration: declaration-specifiers . SEMI
    7            | declaration-specifiers . init-declarator-list SEMI
    8 declaration-specifiers: declaration-specifiers . declaration-specifier

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 39
    SEMI      shift, and go to state 40
    STAR      shift, and go to state 41
    ID        shift, and go to state 42

    declaration-specifier    go to state 43
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    init-declarator-list     go to state 44
    init-declarator          go to state 45
    declarator               go to state 80
    pointer                  go to state 47
    direct-declarator        go to state 48


State 96

   87 function-definition: declaration-specifiers declarator declaration-list-opt compound-stmt .

    $default  reduce using rule 87 (function-definition)


State 97

   64 pointer: pointer STAR type-qualifier-list-opt .

    $default  reduce using rule 64 (pointer)


State 98

    8 declaration-specifiers: declaration-specifiers . declaration-specifier
   81 parameter-declaration: declaration-specifiers . declarator
   82                      | declaration-specifiers . abstract-declarator-opt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 39
    STAR      shift, and go to state 41
    ID        shift, and go to state 42

    $default  reduce using rule 83 (abstract-declarator-opt)

    declaration-specifier    go to state 43
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    declarator               go to state 135
    pointer                  go to state 47
    direct-declarator        go to state 48
    abstract-declarator-opt  go to state 136


State 99

   72 direct-declarator: direct-declarator LPAR identifier-list-opt . RPAR

    RPAR  shift, and go to state 137


State 100

   71 direct-declarator: direct-declarator LPAR parameter-type-list . RPAR

    RPAR  shift, and go to state 138


State 101

   78 parameter-type-list: parameter-list .
   80 parameter-list: parameter-list . COMMA parameter-declaration

    COMMA  shift, and go to state 139

    $default  reduce using rule 78 (parameter-type-list)


State 102

   79 parameter-list: parameter-declaration .

    $default  reduce using rule 79 (parameter-list)


State 103

   68 direct-declarator: direct-declarator LB type-qualifier-list-opt . expr RB
   69                  | direct-declarator LB type-qualifier-list-opt . RB
   70                  | direct-declarator LB type-qualifier-list-opt . STAR RB

    LPAR      shift, and go to state 81
    RB        shift, and go to state 140
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 141
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 142
    function-call  go to state 92


State 104

   32 struct-or-union-spec: struct-or-union LCB struct-declaration-list RCB .

    $default  reduce using rule 32 (struct-or-union-spec)


State 105

   34 struct-declaration-list: struct-declaration-list struct-declaration .

    $default  reduce using rule 34 (struct-declaration-list)


State 106

   36 specifier-qualifier-list: specifier-qualifier-list type-specifier .

    $default  reduce using rule 36 (specifier-qualifier-list)


State 107

   35 struct-declaration: specifier-qualifier-list struct-declarator-list . SEMI specifier-qualifier-list SEMI
   41 struct-declarator-list: struct-declarator-list . COMMA struct-declarator

    SEMI   shift, and go to state 143
    COMMA  shift, and go to state 144


State 108

   40 struct-declarator-list: struct-declarator .

    $default  reduce using rule 40 (struct-declarator-list)


State 109

   37 specifier-qualifier-list: specifier-qualifier-list type-qualifier .

    $default  reduce using rule 37 (specifier-qualifier-list)


State 110

   42 struct-declarator: declarator .

    $default  reduce using rule 42 (struct-declarator)


State 111

   31 struct-or-union-spec: struct-or-union ID LCB struct-declaration-list . RCB
   34 struct-declaration-list: struct-declaration-list . struct-declaration

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    RCB       shift, and go to state 145

    type-specifier            go to state 67
    struct-or-union-spec      go to state 31
    struct-declaration        go to state 105
    specifier-qualifier-list  go to state 70
    struct-or-union           go to state 32
    enum-specifier            go to state 33
    type-qualifier            go to state 71


State 112

   52 enumerator: ID ASSIGN expr .
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 52 (enumerator)


State 113

   50 enumerator-list: enumerator-list COMMA enumerator .

    $default  reduce using rule 50 (enumerator-list)


State 114

   47 enum-specifier: ENUM LCB enumerator-list traling-comma RCB .

    $default  reduce using rule 47 (enum-specifier)


State 115

   46 enum-specifier: ENUM ID LCB enumerator-list traling-comma . RCB

    RCB  shift, and go to state 146


State 116

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  137     | LPAR expr . RPAR
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    RPAR        shift, and go to state 147
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 117

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR
  147 expr-list: expr .

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 147 (expr-list)


State 118

   86 array-init-expr: LCB expr-list . RCB
  146 expr-list: expr-list . COMMA expr

    RCB    shift, and go to state 148
    COMMA  shift, and go to state 149


State 119

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  134     | MINUS expr .
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR  shift, and go to state 126
    LB    shift, and go to state 127

    $default  reduce using rule 134 (expr)


State 120

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  140     | STAR expr .
  145 function-call: expr . LPAR expr-list RPAR

    LPAR  shift, and go to state 126
    LB    shift, and go to state 127

    $default  reduce using rule 140 (expr)


State 121

  129 expr: expr EQ . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 150
    function-call  go to state 92


State 122

  125 expr: expr LT . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 151
    function-call  go to state 92


State 123

  126 expr: expr BT . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 152
    function-call  go to state 92


State 124

  127 expr: expr LET . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 153
    function-call  go to state 92


State 125

  128 expr: expr BET . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 154
    function-call  go to state 92


State 126

  145 function-call: expr LPAR . expr-list RPAR

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    $default  reduce using rule 148 (expr-list)

    expr           go to state 117
    function-call  go to state 92
    expr-list      go to state 155


State 127

  139 expr: expr LB . expr RB

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 156
    function-call  go to state 92


State 128

  130 expr: expr PLUS . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 157
    function-call  go to state 92


State 129

  131 expr: expr MINUS . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 158
    function-call  go to state 92


State 130

  132 expr: expr STAR . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 159
    function-call  go to state 92


State 131

  133 expr: expr OVER . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 160
    function-call  go to state 92


State 132

  135 expr: expr PLUSPLUS .

    $default  reduce using rule 135 (expr)


State 133

  136 expr: expr MINUSMINUS .

    $default  reduce using rule 136 (expr)


State 134

  106 compound-stmt: LCB stmt-list . RCB
  107 stmt-list: stmt-list . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    RCB       shift, and go to state 172
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 174
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 135

   81 parameter-declaration: declaration-specifiers declarator .

    $default  reduce using rule 81 (parameter-declaration)


State 136

   82 parameter-declaration: declaration-specifiers abstract-declarator-opt .

    $default  reduce using rule 82 (parameter-declaration)


State 137

   72 direct-declarator: direct-declarator LPAR identifier-list-opt RPAR .

    $default  reduce using rule 72 (direct-declarator)


State 138

   71 direct-declarator: direct-declarator LPAR parameter-type-list RPAR .

    $default  reduce using rule 71 (direct-declarator)


State 139

   80 parameter-list: parameter-list COMMA . parameter-declaration

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24

    declaration-specifiers   go to state 98
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    parameter-declaration    go to state 190


State 140

   69 direct-declarator: direct-declarator LB type-qualifier-list-opt RB .

    $default  reduce using rule 69 (direct-declarator)


State 141

   70 direct-declarator: direct-declarator LB type-qualifier-list-opt STAR . RB
  140 expr: STAR . expr

    LPAR      shift, and go to state 81
    RB        shift, and go to state 191
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 120
    function-call  go to state 92


State 142

   68 direct-declarator: direct-declarator LB type-qualifier-list-opt expr . RB
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    RB          shift, and go to state 192
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 143

   35 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI . specifier-qualifier-list SEMI

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24

    type-specifier            go to state 67
    struct-or-union-spec      go to state 31
    specifier-qualifier-list  go to state 193
    struct-or-union           go to state 32
    enum-specifier            go to state 33
    type-qualifier            go to state 71


State 144

   41 struct-declarator-list: struct-declarator-list COMMA . struct-declarator

    LPAR  shift, and go to state 39
    STAR  shift, and go to state 41
    ID    shift, and go to state 42

    struct-declarator  go to state 194
    declarator         go to state 110
    pointer            go to state 47
    direct-declarator  go to state 48


State 145

   31 struct-or-union-spec: struct-or-union ID LCB struct-declaration-list RCB .

    $default  reduce using rule 31 (struct-or-union-spec)


State 146

   46 enum-specifier: ENUM ID LCB enumerator-list traling-comma RCB .

    $default  reduce using rule 46 (enum-specifier)


State 147

  137 expr: LPAR expr RPAR .

    $default  reduce using rule 137 (expr)


State 148

   86 array-init-expr: LCB expr-list RCB .

    $default  reduce using rule 86 (array-init-expr)


State 149

  146 expr-list: expr-list COMMA . expr

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 195
    function-call  go to state 92


State 150

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  129     | expr EQ expr .
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 129 (expr)


State 151

  125 expr: expr . LT expr
  125     | expr LT expr .
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 125 (expr)


State 152

  125 expr: expr . LT expr
  126     | expr . BT expr
  126     | expr BT expr .
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 126 (expr)


State 153

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  127     | expr LET expr .
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 127 (expr)


State 154

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  128     | expr BET expr .
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 128 (expr)


State 155

  145 function-call: expr LPAR expr-list . RPAR
  146 expr-list: expr-list . COMMA expr

    RPAR   shift, and go to state 196
    COMMA  shift, and go to state 149


State 156

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  139     | expr LB expr . RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    RB          shift, and go to state 197
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 157

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  130     | expr PLUS expr .
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 130 (expr)


State 158

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  131     | expr MINUS expr .
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 131 (expr)


State 159

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  132     | expr STAR expr .
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 132 (expr)


State 160

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  133     | expr OVER expr .
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 133 (expr)


State 161

  116 break-stmt: BREAK . SEMI

    SEMI  shift, and go to state 198


State 162

  117 case-stmt: CASE . expr COLON stmt

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 199
    function-call  go to state 92


State 163

  115 continue-stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 200


State 164

  118 default-stmt: DEFAULT . COLON stmt

    COLON  shift, and go to state 201


State 165

  120 do-while-stmt: DO . stmt WHILE LPAR expr RPAR SEMI

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 202
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 166

  121 for-stmt: FOR . LPAR stmt stmt expr RPAR stmt
  122         | FOR . LPAR stmt stmt RPAR stmt

    LPAR  shift, and go to state 203


State 167

  110 if-stmt: IF . LPAR expr RPAR stmt
  111        | IF . LPAR expr RPAR stmt ELSE stmt

    LPAR  shift, and go to state 204


State 168

  112 return-stmt: RETURN . return-value SEMI

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    $default  reduce using rule 114 (return-value)

    return-value   go to state 205
    expr           go to state 206
    function-call  go to state 92


State 169

  123 switch-stmt: SWITCH . LPAR expr RPAR stmt

    LPAR  shift, and go to state 207


State 170

  119 while-stmt: WHILE . LPAR expr RPAR stmt

    LPAR  shift, and go to state 208


State 171

  105 empty-stmt: SEMI .

    $default  reduce using rule 105 (empty-stmt)


State 172

  106 compound-stmt: LCB stmt-list RCB .

    $default  reduce using rule 106 (compound-stmt)


State 173

   90 stmt: declaration .

    $default  reduce using rule 90 (stmt)


State 174

  107 stmt-list: stmt-list stmt .

    $default  reduce using rule 107 (stmt-list)


State 175

   91 stmt: empty-stmt .

    $default  reduce using rule 91 (stmt)


State 176

   92 stmt: compound-stmt .

    $default  reduce using rule 92 (stmt)


State 177

   93 stmt: assign-stmt .

    $default  reduce using rule 93 (stmt)


State 178

   94 stmt: if-stmt .

    $default  reduce using rule 94 (stmt)


State 179

   95 stmt: return-stmt .

    $default  reduce using rule 95 (stmt)


State 180

   99 stmt: continue-stmt .

    $default  reduce using rule 99 (stmt)


State 181

   96 stmt: break-stmt .

    $default  reduce using rule 96 (stmt)


State 182

   97 stmt: case-stmt .

    $default  reduce using rule 97 (stmt)


State 183

   98 stmt: default-stmt .

    $default  reduce using rule 98 (stmt)


State 184

  100 stmt: while-stmt .

    $default  reduce using rule 100 (stmt)


State 185

  101 stmt: do-while-stmt .

    $default  reduce using rule 101 (stmt)


State 186

  102 stmt: for-stmt .

    $default  reduce using rule 102 (stmt)


State 187

  103 stmt: switch-stmt .

    $default  reduce using rule 103 (stmt)


State 188

  104 stmt: expr-stmt .

    $default  reduce using rule 104 (stmt)


State 189

  109 assign-stmt: expr . ASSIGN expr SEMI
  124 expr-stmt: expr . SEMI
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    ASSIGN      shift, and go to state 209
    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    SEMI        shift, and go to state 210
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 190

   80 parameter-list: parameter-list COMMA parameter-declaration .

    $default  reduce using rule 80 (parameter-list)


State 191

   70 direct-declarator: direct-declarator LB type-qualifier-list-opt STAR RB .

    $default  reduce using rule 70 (direct-declarator)


State 192

   68 direct-declarator: direct-declarator LB type-qualifier-list-opt expr RB .

    $default  reduce using rule 68 (direct-declarator)


State 193

   35 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI specifier-qualifier-list . SEMI
   36 specifier-qualifier-list: specifier-qualifier-list . type-specifier
   37                         | specifier-qualifier-list . type-qualifier

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    SEMI      shift, and go to state 211

    type-specifier        go to state 106
    struct-or-union-spec  go to state 31
    struct-or-union       go to state 32
    enum-specifier        go to state 33
    type-qualifier        go to state 109


State 194

   41 struct-declarator-list: struct-declarator-list COMMA struct-declarator .

    $default  reduce using rule 41 (struct-declarator-list)


State 195

  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR
  146 expr-list: expr-list COMMA expr .

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 146 (expr-list)


State 196

  145 function-call: expr LPAR expr-list RPAR .

    $default  reduce using rule 145 (function-call)


State 197

  139 expr: expr LB expr RB .

    $default  reduce using rule 139 (expr)


State 198

  116 break-stmt: BREAK SEMI .

    $default  reduce using rule 116 (break-stmt)


State 199

  117 case-stmt: CASE expr . COLON stmt
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    COLON       shift, and go to state 212
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 200

  115 continue-stmt: CONTINUE SEMI .

    $default  reduce using rule 115 (continue-stmt)


State 201

  118 default-stmt: DEFAULT COLON . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 213
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 202

  120 do-while-stmt: DO stmt . WHILE LPAR expr RPAR SEMI

    WHILE  shift, and go to state 214


State 203

  121 for-stmt: FOR LPAR . stmt stmt expr RPAR stmt
  122         | FOR LPAR . stmt stmt RPAR stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 215
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 204

  110 if-stmt: IF LPAR . expr RPAR stmt
  111        | IF LPAR . expr RPAR stmt ELSE stmt

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 216
    function-call  go to state 92


State 205

  112 return-stmt: RETURN return-value . SEMI

    SEMI  shift, and go to state 217


State 206

  113 return-value: expr .
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133

    $default  reduce using rule 113 (return-value)


State 207

  123 switch-stmt: SWITCH LPAR . expr RPAR stmt

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 218
    function-call  go to state 92


State 208

  119 while-stmt: WHILE LPAR . expr RPAR stmt

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 219
    function-call  go to state 92


State 209

  109 assign-stmt: expr ASSIGN . expr SEMI

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 220
    function-call  go to state 92


State 210

  124 expr-stmt: expr SEMI .

    $default  reduce using rule 124 (expr-stmt)


State 211

   35 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI specifier-qualifier-list SEMI .

    $default  reduce using rule 35 (struct-declaration)


State 212

  117 case-stmt: CASE expr COLON . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 221
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 213

  118 default-stmt: DEFAULT COLON stmt .

    $default  reduce using rule 118 (default-stmt)


State 214

  120 do-while-stmt: DO stmt WHILE . LPAR expr RPAR SEMI

    LPAR  shift, and go to state 222


State 215

  121 for-stmt: FOR LPAR stmt . stmt expr RPAR stmt
  122         | FOR LPAR stmt . stmt RPAR stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 223
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 216

  110 if-stmt: IF LPAR expr . RPAR stmt
  111        | IF LPAR expr . RPAR stmt ELSE stmt
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    RPAR        shift, and go to state 224
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 217

  112 return-stmt: RETURN return-value SEMI .

    $default  reduce using rule 112 (return-stmt)


State 218

  123 switch-stmt: SWITCH LPAR expr . RPAR stmt
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    RPAR        shift, and go to state 225
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 219

  119 while-stmt: WHILE LPAR expr . RPAR stmt
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    RPAR        shift, and go to state 226
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 220

  109 assign-stmt: expr ASSIGN expr . SEMI
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    SEMI        shift, and go to state 227
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 221

  117 case-stmt: CASE expr COLON stmt .

    $default  reduce using rule 117 (case-stmt)


State 222

  120 do-while-stmt: DO stmt WHILE LPAR . expr RPAR SEMI

    LPAR      shift, and go to state 81
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 228
    function-call  go to state 92


State 223

  121 for-stmt: FOR LPAR stmt stmt . expr RPAR stmt
  122         | FOR LPAR stmt stmt . RPAR stmt

    LPAR      shift, and go to state 81
    RPAR      shift, and go to state 229
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    expr           go to state 230
    function-call  go to state 92


State 224

  110 if-stmt: IF LPAR expr RPAR . stmt
  111        | IF LPAR expr RPAR . stmt ELSE stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 231
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 225

  123 switch-stmt: SWITCH LPAR expr RPAR . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 232
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 226

  119 while-stmt: WHILE LPAR expr RPAR . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 233
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 227

  109 assign-stmt: expr ASSIGN expr SEMI .

    $default  reduce using rule 109 (assign-stmt)


State 228

  120 do-while-stmt: DO stmt WHILE LPAR expr . RPAR SEMI
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    RPAR        shift, and go to state 234
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 229

  122 for-stmt: FOR LPAR stmt stmt RPAR . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 235
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 230

  121 for-stmt: FOR LPAR stmt stmt expr . RPAR stmt
  125 expr: expr . LT expr
  126     | expr . BT expr
  127     | expr . LET expr
  128     | expr . BET expr
  129     | expr . EQ expr
  130     | expr . PLUS expr
  131     | expr . MINUS expr
  132     | expr . STAR expr
  133     | expr . OVER expr
  135     | expr . PLUSPLUS
  136     | expr . MINUSMINUS
  139     | expr . LB expr RB
  145 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 121
    LT          shift, and go to state 122
    BT          shift, and go to state 123
    LET         shift, and go to state 124
    BET         shift, and go to state 125
    LPAR        shift, and go to state 126
    RPAR        shift, and go to state 236
    LB          shift, and go to state 127
    PLUS        shift, and go to state 128
    MINUS       shift, and go to state 129
    STAR        shift, and go to state 130
    OVER        shift, and go to state 131
    PLUSPLUS    shift, and go to state 132
    MINUSMINUS  shift, and go to state 133


State 231

  110 if-stmt: IF LPAR expr RPAR stmt .
  111        | IF LPAR expr RPAR stmt . ELSE stmt

    ELSE  shift, and go to state 237

    $default  reduce using rule 110 (if-stmt)


State 232

  123 switch-stmt: SWITCH LPAR expr RPAR stmt .

    $default  reduce using rule 123 (switch-stmt)


State 233

  119 while-stmt: WHILE LPAR expr RPAR stmt .

    $default  reduce using rule 119 (while-stmt)


State 234

  120 do-while-stmt: DO stmt WHILE LPAR expr RPAR . SEMI

    SEMI  shift, and go to state 238


State 235

  122 for-stmt: FOR LPAR stmt stmt RPAR stmt .

    $default  reduce using rule 122 (for-stmt)


State 236

  121 for-stmt: FOR LPAR stmt stmt expr RPAR . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 239
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 237

  111 if-stmt: IF LPAR expr RPAR stmt ELSE . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 161
    CASE      shift, and go to state 162
    CONTINUE  shift, and go to state 163
    DEFAULT   shift, and go to state 164
    DO        shift, and go to state 165
    FOR       shift, and go to state 166
    IF        shift, and go to state 167
    RETURN    shift, and go to state 168
    SWITCH    shift, and go to state 169
    WHILE     shift, and go to state 170
    LPAR      shift, and go to state 81
    SEMI      shift, and go to state 171
    LCB       shift, and go to state 93
    MINUS     shift, and go to state 83
    STAR      shift, and go to state 84
    INT_VAL   shift, and go to state 85
    REAL_VAL  shift, and go to state 86
    ID        shift, and go to state 87
    STR_VAL   shift, and go to state 88

    declaration              go to state 173
    declaration-specifiers   go to state 95
    declaration-specifier    go to state 28
    storage-class-specifier  go to state 29
    type-specifier           go to state 30
    struct-or-union-spec     go to state 31
    struct-or-union          go to state 32
    enum-specifier           go to state 33
    type-qualifier           go to state 34
    function-specifier       go to state 35
    stmt                     go to state 240
    empty-stmt               go to state 175
    compound-stmt            go to state 176
    assign-stmt              go to state 177
    if-stmt                  go to state 178
    return-stmt              go to state 179
    continue-stmt            go to state 180
    break-stmt               go to state 181
    case-stmt                go to state 182
    default-stmt             go to state 183
    while-stmt               go to state 184
    do-while-stmt            go to state 185
    for-stmt                 go to state 186
    switch-stmt              go to state 187
    expr-stmt                go to state 188
    expr                     go to state 189
    function-call            go to state 92


State 238

  120 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI .

    $default  reduce using rule 120 (do-while-stmt)


State 239

  121 for-stmt: FOR LPAR stmt stmt expr RPAR stmt .

    $default  reduce using rule 121 (for-stmt)


State 240

  111 if-stmt: IF LPAR expr RPAR stmt ELSE stmt .

    $default  reduce using rule 111 (if-stmt)
