Terminals unused in grammar

    SIZEOF
    GOTO


Grammar

    0 $accept: all $end

    1 all: program

    2 program: program program-part
    3        | %empty

    4 program-part: function-definition
    5             | declaration

    6 declaration: declaration-specifiers SEMI

    7 $@1: %empty

    8 declaration: declaration-specifiers init-declarator-list $@1 SEMI

    9 declaration-specifiers: declaration-specifiers declaration-specifier
   10                       | declaration-specifier

   11 declaration-specifier: storage-class-specifier
   12                      | type-specifier
   13                      | type-qualifier
   14                      | function-specifier

   15 storage-class-specifier: TYPEDEF
   16                        | EXTERN
   17                        | STATIC
   18                        | AUTO
   19                        | REGISTER

   20 type-specifier: VOID
   21               | CHAR
   22               | SHORT
   23               | INT
   24               | LONG
   25               | FLOAT
   26               | DOUBLE
   27               | SIGNED
   28               | UNSIGNED
   29               | struct-or-union-spec
   30               | enum-specifier
   31               | typedef-name

   32 typedef-name: TYPENAME

   33 struct-or-union-spec: struct-or-union ID
   34                     | struct-or-union ID LCB struct-declaration-list RCB
   35                     | struct-or-union LCB struct-declaration-list RCB

   36 struct-declaration-list: struct-declaration
   37                        | struct-declaration-list struct-declaration

   38 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI specifier-qualifier-list SEMI

   39 specifier-qualifier-list: specifier-qualifier-list type-specifier
   40                         | specifier-qualifier-list type-qualifier
   41                         | type-specifier
   42                         | type-qualifier

   43 struct-declarator-list: struct-declarator
   44                       | struct-declarator-list COMMA struct-declarator

   45 struct-declarator: declarator

   46 struct-or-union: STRUCT
   47                | UNION

   48 enum-specifier: ENUM ID
   49               | ENUM ID LCB enumerator-list traling-comma RCB
   50               | ENUM LCB enumerator-list traling-comma RCB

   51 traling-comma: COMMA
   52              | %empty

   53 enumerator-list: enumerator-list COMMA enumerator
   54                | enumerator

   55 enumerator: ID ASSIGN expr
   56           | ID

   57 type-qualifier: CONST
   58               | RESTRICT
   59               | VOLATILE

   60 function-specifier: INLINE

   61 init-declarator-list: init-declarator-list COMMA init-declarator
   62                     | init-declarator

   63 init-declarator: declarator ASSIGN initializer
   64                | declarator

   65 declarator: pointer direct-declarator
   66           | direct-declarator

   67 pointer: pointer STAR type-qualifier-list-opt
   68        | STAR type-qualifier-list-opt

   69 direct-declarator: ID
   70                  | LPAR declarator RPAR
   71                  | direct-declarator LB type-qualifier-list-opt expr RB
   72                  | direct-declarator LB type-qualifier-list-opt RB
   73                  | direct-declarator LB type-qualifier-list-opt STAR RB
   74                  | direct-declarator LPAR parameter-type-list RPAR
   75                  | direct-declarator LPAR identifier-list-opt RPAR

   76 identifier-list-opt: %empty

   77 type-qualifier-list: type-qualifier-list type-qualifier
   78                    | type-qualifier

   79 type-qualifier-list-opt: type-qualifier-list
   80                        | %empty

   81 parameter-type-list: parameter-list

   82 parameter-list: parameter-declaration
   83               | parameter-list COMMA parameter-declaration

   84 parameter-declaration: declaration-specifiers declarator
   85                      | declaration-specifiers abstract-declarator-opt

   86 abstract-declarator-opt: %empty

   87 initializer: expr
   88            | array-init-expr

   89 array-init-expr: LCB expr-list RCB

   90 function-definition: declaration-specifiers declarator declaration-list-opt compound-stmt

   91 declaration-list-opt: declaration-list-opt declaration
   92                     | %empty

   93 stmt: declaration
   94     | empty-stmt
   95     | compound-stmt
   96     | assign-stmt
   97     | if-stmt
   98     | return-stmt
   99     | break-stmt
  100     | case-stmt
  101     | default-stmt
  102     | continue-stmt
  103     | while-stmt
  104     | do-while-stmt
  105     | for-stmt
  106     | switch-stmt
  107     | expr-stmt

  108 empty-stmt: SEMI

  109 $@2: %empty

  110 $@3: %empty

  111 compound-stmt: LCB $@2 stmt-list $@3 RCB

  112 stmt-list: stmt-list stmt
  113          | %empty

  114 assign-stmt: expr ASSIGN expr SEMI

  115 if-stmt: IF LPAR expr RPAR stmt
  116        | IF LPAR expr RPAR stmt ELSE stmt

  117 return-stmt: RETURN return-value SEMI

  118 return-value: expr
  119             | %empty

  120 continue-stmt: CONTINUE SEMI

  121 break-stmt: BREAK SEMI

  122 case-stmt: CASE expr COLON stmt

  123 default-stmt: DEFAULT COLON stmt

  124 while-stmt: WHILE LPAR expr RPAR stmt

  125 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI

  126 for-stmt: FOR LPAR stmt stmt expr RPAR stmt
  127         | FOR LPAR stmt stmt RPAR stmt

  128 switch-stmt: SWITCH LPAR expr RPAR stmt

  129 expr-stmt: expr SEMI

  130 expr: expr LT expr
  131     | expr BT expr
  132     | expr LET expr
  133     | expr BET expr
  134     | expr EQ expr
  135     | expr PLUS expr
  136     | expr MINUS expr
  137     | expr STAR expr
  138     | expr OVER expr
  139     | MINUS expr
  140     | expr PLUSPLUS
  141     | expr MINUSMINUS
  142     | LPAR expr RPAR
  143     | function-call
  144     | expr LB expr RB
  145     | STAR expr
  146     | INT_VAL
  147     | REAL_VAL
  148     | STR_VAL
  149     | ID

  150 function-call: expr LPAR expr-list RPAR

  151 expr-list: expr-list COMMA expr
  152          | expr
  153          | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPEDEF (258) 15
    EXTERN (259) 16
    STATIC (260) 17
    AUTO (261) 18
    REGISTER (262) 19
    VOID (263) 20
    CHAR (264) 21
    SHORT (265) 22
    INT (266) 23
    LONG (267) 24
    FLOAT (268) 25
    DOUBLE (269) 26
    SIGNED (270) 27
    UNSIGNED (271) 28
    CONST (272) 57
    RESTRICT (273) 58
    VOLATILE (274) 59
    INLINE (275) 60
    SIZEOF (276)
    ENUM (277) 48 49 50
    STRUCT (278) 46
    UNION (279) 47
    BREAK (280) 121
    CASE (281) 122
    CONTINUE (282) 120
    DEFAULT (283) 123
    DO (284) 125
    ELSE (285) 116
    FOR (286) 126 127
    GOTO (287)
    IF (288) 115 116
    RETURN (289) 117
    SWITCH (290) 128
    WHILE (291) 124 125
    ASSIGN (292) 55 63 114
    EQ (293) 134
    LT (294) 130
    BT (295) 131
    LET (296) 132
    BET (297) 133
    LPAR (298) 70 74 75 115 116 124 125 126 127 128 142 150
    RPAR (299) 70 74 75 115 116 124 125 126 127 128 142 150
    SEMI (300) 6 8 38 108 114 117 120 121 125 129
    LCB (301) 34 35 49 50 89 111
    RCB (302) 34 35 49 50 89 111
    COLON (303) 122 123
    LB (304) 71 72 73 144
    RB (305) 71 72 73 144
    PLUS (306) 135
    MINUS (307) 136 139
    STAR (308) 67 68 73 137 145
    OVER (309) 138
    PLUSPLUS (310) 140
    MINUSMINUS (311) 141
    INT_VAL (312) 146
    REAL_VAL (313) 147
    STR_VAL (314) 148
    ID (315) 33 34 48 49 55 56 69 149
    TYPENAME (316) 32
    COMMA (317) 44 51 53 61 83 151
    UMINUS (318)
    POINTER (319)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    all (66)
        on left: 1
        on right: 0
    program (67)
        on left: 2 3
        on right: 1 2
    program-part (68)
        on left: 4 5
        on right: 2
    declaration (69)
        on left: 6 8
        on right: 5 91 93
    $@1 (70)
        on left: 7
        on right: 8
    declaration-specifiers (71)
        on left: 9 10
        on right: 6 8 9 84 85 90
    declaration-specifier (72)
        on left: 11 12 13 14
        on right: 9 10
    storage-class-specifier (73)
        on left: 15 16 17 18 19
        on right: 11
    type-specifier (74)
        on left: 20 21 22 23 24 25 26 27 28 29 30 31
        on right: 12 39 41
    typedef-name (75)
        on left: 32
        on right: 31
    struct-or-union-spec (76)
        on left: 33 34 35
        on right: 29
    struct-declaration-list (77)
        on left: 36 37
        on right: 34 35 37
    struct-declaration (78)
        on left: 38
        on right: 36 37
    specifier-qualifier-list (79)
        on left: 39 40 41 42
        on right: 38 39 40
    struct-declarator-list (80)
        on left: 43 44
        on right: 38 44
    struct-declarator (81)
        on left: 45
        on right: 43 44
    struct-or-union (82)
        on left: 46 47
        on right: 33 34 35
    enum-specifier (83)
        on left: 48 49 50
        on right: 30
    traling-comma (84)
        on left: 51 52
        on right: 49 50
    enumerator-list (85)
        on left: 53 54
        on right: 49 50 53
    enumerator (86)
        on left: 55 56
        on right: 53 54
    type-qualifier (87)
        on left: 57 58 59
        on right: 13 40 42 77 78
    function-specifier (88)
        on left: 60
        on right: 14
    init-declarator-list (89)
        on left: 61 62
        on right: 8 61
    init-declarator (90)
        on left: 63 64
        on right: 61 62
    declarator (91)
        on left: 65 66
        on right: 45 63 64 70 84 90
    pointer (92)
        on left: 67 68
        on right: 65 67
    direct-declarator (93)
        on left: 69 70 71 72 73 74 75
        on right: 65 66 71 72 73 74 75
    identifier-list-opt (94)
        on left: 76
        on right: 75
    type-qualifier-list (95)
        on left: 77 78
        on right: 77 79
    type-qualifier-list-opt (96)
        on left: 79 80
        on right: 67 68 71 72 73
    parameter-type-list (97)
        on left: 81
        on right: 74
    parameter-list (98)
        on left: 82 83
        on right: 81 83
    parameter-declaration (99)
        on left: 84 85
        on right: 82 83
    abstract-declarator-opt (100)
        on left: 86
        on right: 85
    initializer (101)
        on left: 87 88
        on right: 63
    array-init-expr (102)
        on left: 89
        on right: 88
    function-definition (103)
        on left: 90
        on right: 4
    declaration-list-opt (104)
        on left: 91 92
        on right: 90 91
    stmt (105)
        on left: 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107
        on right: 112 115 116 122 123 124 125 126 127 128
    empty-stmt (106)
        on left: 108
        on right: 94
    compound-stmt (107)
        on left: 111
        on right: 90 95
    $@2 (108)
        on left: 109
        on right: 111
    $@3 (109)
        on left: 110
        on right: 111
    stmt-list (110)
        on left: 112 113
        on right: 111 112
    assign-stmt (111)
        on left: 114
        on right: 96
    if-stmt (112)
        on left: 115 116
        on right: 97
    return-stmt (113)
        on left: 117
        on right: 98
    return-value (114)
        on left: 118 119
        on right: 117
    continue-stmt (115)
        on left: 120
        on right: 102
    break-stmt (116)
        on left: 121
        on right: 99
    case-stmt (117)
        on left: 122
        on right: 100
    default-stmt (118)
        on left: 123
        on right: 101
    while-stmt (119)
        on left: 124
        on right: 103
    do-while-stmt (120)
        on left: 125
        on right: 104
    for-stmt (121)
        on left: 126 127
        on right: 105
    switch-stmt (122)
        on left: 128
        on right: 106
    expr-stmt (123)
        on left: 129
        on right: 107
    expr (124)
        on left: 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149
        on right: 55 71 87 114 115 116 118 122 124 125 126 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 144 145 150 151 152
    function-call (125)
        on left: 150
        on right: 143
    expr-list (126)
        on left: 151 152 153
        on right: 89 150 151


State 0

    0 $accept: . all $end

    $default  reduce using rule 3 (program)

    all      go to state 1
    program  go to state 2


State 1

    0 $accept: all . $end

    $end  shift, and go to state 3


State 2

    1 all: program .
    2 program: program . program-part

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    TYPENAME  shift, and go to state 25

    $default  reduce using rule 1 (all)

    program-part             go to state 26
    declaration              go to state 27
    declaration-specifiers   go to state 28
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    function-definition      go to state 38


State 3

    0 $accept: all $end .

    $default  accept


State 4

   15 storage-class-specifier: TYPEDEF .

    $default  reduce using rule 15 (storage-class-specifier)


State 5

   16 storage-class-specifier: EXTERN .

    $default  reduce using rule 16 (storage-class-specifier)


State 6

   17 storage-class-specifier: STATIC .

    $default  reduce using rule 17 (storage-class-specifier)


State 7

   18 storage-class-specifier: AUTO .

    $default  reduce using rule 18 (storage-class-specifier)


State 8

   19 storage-class-specifier: REGISTER .

    $default  reduce using rule 19 (storage-class-specifier)


State 9

   20 type-specifier: VOID .

    $default  reduce using rule 20 (type-specifier)


State 10

   21 type-specifier: CHAR .

    $default  reduce using rule 21 (type-specifier)


State 11

   22 type-specifier: SHORT .

    $default  reduce using rule 22 (type-specifier)


State 12

   23 type-specifier: INT .

    $default  reduce using rule 23 (type-specifier)


State 13

   24 type-specifier: LONG .

    $default  reduce using rule 24 (type-specifier)


State 14

   25 type-specifier: FLOAT .

    $default  reduce using rule 25 (type-specifier)


State 15

   26 type-specifier: DOUBLE .

    $default  reduce using rule 26 (type-specifier)


State 16

   27 type-specifier: SIGNED .

    $default  reduce using rule 27 (type-specifier)


State 17

   28 type-specifier: UNSIGNED .

    $default  reduce using rule 28 (type-specifier)


State 18

   57 type-qualifier: CONST .

    $default  reduce using rule 57 (type-qualifier)


State 19

   58 type-qualifier: RESTRICT .

    $default  reduce using rule 58 (type-qualifier)


State 20

   59 type-qualifier: VOLATILE .

    $default  reduce using rule 59 (type-qualifier)


State 21

   60 function-specifier: INLINE .

    $default  reduce using rule 60 (function-specifier)


State 22

   48 enum-specifier: ENUM . ID
   49               | ENUM . ID LCB enumerator-list traling-comma RCB
   50               | ENUM . LCB enumerator-list traling-comma RCB

    LCB  shift, and go to state 39
    ID   shift, and go to state 40


State 23

   46 struct-or-union: STRUCT .

    $default  reduce using rule 46 (struct-or-union)


State 24

   47 struct-or-union: UNION .

    $default  reduce using rule 47 (struct-or-union)


State 25

   32 typedef-name: TYPENAME .

    $default  reduce using rule 32 (typedef-name)


State 26

    2 program: program program-part .

    $default  reduce using rule 2 (program)


State 27

    5 program-part: declaration .

    $default  reduce using rule 5 (program-part)


State 28

    6 declaration: declaration-specifiers . SEMI
    8            | declaration-specifiers . init-declarator-list $@1 SEMI
    9 declaration-specifiers: declaration-specifiers . declaration-specifier
   90 function-definition: declaration-specifiers . declarator declaration-list-opt compound-stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 41
    SEMI      shift, and go to state 42
    STAR      shift, and go to state 43
    ID        shift, and go to state 44
    TYPENAME  shift, and go to state 25

    declaration-specifier    go to state 45
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    init-declarator-list     go to state 46
    init-declarator          go to state 47
    declarator               go to state 48
    pointer                  go to state 49
    direct-declarator        go to state 50


State 29

   10 declaration-specifiers: declaration-specifier .

    $default  reduce using rule 10 (declaration-specifiers)


State 30

   11 declaration-specifier: storage-class-specifier .

    $default  reduce using rule 11 (declaration-specifier)


State 31

   12 declaration-specifier: type-specifier .

    $default  reduce using rule 12 (declaration-specifier)


State 32

   31 type-specifier: typedef-name .

    $default  reduce using rule 31 (type-specifier)


State 33

   29 type-specifier: struct-or-union-spec .

    $default  reduce using rule 29 (type-specifier)


State 34

   33 struct-or-union-spec: struct-or-union . ID
   34                     | struct-or-union . ID LCB struct-declaration-list RCB
   35                     | struct-or-union . LCB struct-declaration-list RCB

    LCB  shift, and go to state 51
    ID   shift, and go to state 52


State 35

   30 type-specifier: enum-specifier .

    $default  reduce using rule 30 (type-specifier)


State 36

   13 declaration-specifier: type-qualifier .

    $default  reduce using rule 13 (declaration-specifier)


State 37

   14 declaration-specifier: function-specifier .

    $default  reduce using rule 14 (declaration-specifier)


State 38

    4 program-part: function-definition .

    $default  reduce using rule 4 (program-part)


State 39

   50 enum-specifier: ENUM LCB . enumerator-list traling-comma RCB

    ID  shift, and go to state 53

    enumerator-list  go to state 54
    enumerator       go to state 55


State 40

   48 enum-specifier: ENUM ID .
   49               | ENUM ID . LCB enumerator-list traling-comma RCB

    LCB  shift, and go to state 56

    $default  reduce using rule 48 (enum-specifier)


State 41

   70 direct-declarator: LPAR . declarator RPAR

    LPAR  shift, and go to state 41
    STAR  shift, and go to state 43
    ID    shift, and go to state 44

    declarator         go to state 57
    pointer            go to state 49
    direct-declarator  go to state 50


State 42

    6 declaration: declaration-specifiers SEMI .

    $default  reduce using rule 6 (declaration)


State 43

   68 pointer: STAR . type-qualifier-list-opt

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 80 (type-qualifier-list-opt)

    type-qualifier           go to state 58
    type-qualifier-list      go to state 59
    type-qualifier-list-opt  go to state 60


State 44

   69 direct-declarator: ID .

    $default  reduce using rule 69 (direct-declarator)


State 45

    9 declaration-specifiers: declaration-specifiers declaration-specifier .

    $default  reduce using rule 9 (declaration-specifiers)


State 46

    8 declaration: declaration-specifiers init-declarator-list . $@1 SEMI
   61 init-declarator-list: init-declarator-list . COMMA init-declarator

    COMMA  shift, and go to state 61

    $default  reduce using rule 7 ($@1)

    $@1  go to state 62


State 47

   62 init-declarator-list: init-declarator .

    $default  reduce using rule 62 (init-declarator-list)


State 48

   63 init-declarator: declarator . ASSIGN initializer
   64                | declarator .
   90 function-definition: declaration-specifiers declarator . declaration-list-opt compound-stmt

    ASSIGN  shift, and go to state 63

    SEMI      reduce using rule 64 (init-declarator)
    COMMA     reduce using rule 64 (init-declarator)
    $default  reduce using rule 92 (declaration-list-opt)

    declaration-list-opt  go to state 64


State 49

   65 declarator: pointer . direct-declarator
   67 pointer: pointer . STAR type-qualifier-list-opt

    LPAR  shift, and go to state 41
    STAR  shift, and go to state 65
    ID    shift, and go to state 44

    direct-declarator  go to state 66


State 50

   66 declarator: direct-declarator .
   71 direct-declarator: direct-declarator . LB type-qualifier-list-opt expr RB
   72                  | direct-declarator . LB type-qualifier-list-opt RB
   73                  | direct-declarator . LB type-qualifier-list-opt STAR RB
   74                  | direct-declarator . LPAR parameter-type-list RPAR
   75                  | direct-declarator . LPAR identifier-list-opt RPAR

    LPAR  shift, and go to state 67
    LB    shift, and go to state 68

    $default  reduce using rule 66 (declarator)


State 51

   35 struct-or-union-spec: struct-or-union LCB . struct-declaration-list RCB

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    TYPENAME  shift, and go to state 25

    type-specifier            go to state 69
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    struct-declaration-list   go to state 70
    struct-declaration        go to state 71
    specifier-qualifier-list  go to state 72
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 73


State 52

   33 struct-or-union-spec: struct-or-union ID .
   34                     | struct-or-union ID . LCB struct-declaration-list RCB

    LCB  shift, and go to state 74

    $default  reduce using rule 33 (struct-or-union-spec)


State 53

   55 enumerator: ID . ASSIGN expr
   56           | ID .

    ASSIGN  shift, and go to state 75

    $default  reduce using rule 56 (enumerator)


State 54

   50 enum-specifier: ENUM LCB enumerator-list . traling-comma RCB
   53 enumerator-list: enumerator-list . COMMA enumerator

    COMMA  shift, and go to state 76

    $default  reduce using rule 52 (traling-comma)

    traling-comma  go to state 77


State 55

   54 enumerator-list: enumerator .

    $default  reduce using rule 54 (enumerator-list)


State 56

   49 enum-specifier: ENUM ID LCB . enumerator-list traling-comma RCB

    ID  shift, and go to state 53

    enumerator-list  go to state 78
    enumerator       go to state 55


State 57

   70 direct-declarator: LPAR declarator . RPAR

    RPAR  shift, and go to state 79


State 58

   78 type-qualifier-list: type-qualifier .

    $default  reduce using rule 78 (type-qualifier-list)


State 59

   77 type-qualifier-list: type-qualifier-list . type-qualifier
   79 type-qualifier-list-opt: type-qualifier-list .

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 79 (type-qualifier-list-opt)

    type-qualifier  go to state 80


State 60

   68 pointer: STAR type-qualifier-list-opt .

    $default  reduce using rule 68 (pointer)


State 61

   61 init-declarator-list: init-declarator-list COMMA . init-declarator

    LPAR  shift, and go to state 41
    STAR  shift, and go to state 43
    ID    shift, and go to state 44

    init-declarator    go to state 81
    declarator         go to state 82
    pointer            go to state 49
    direct-declarator  go to state 50


State 62

    8 declaration: declaration-specifiers init-declarator-list $@1 . SEMI

    SEMI  shift, and go to state 83


State 63

   63 init-declarator: declarator ASSIGN . initializer

    LPAR      shift, and go to state 84
    LCB       shift, and go to state 85
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    initializer      go to state 92
    array-init-expr  go to state 93
    expr             go to state 94
    function-call    go to state 95


State 64

   90 function-definition: declaration-specifiers declarator declaration-list-opt . compound-stmt
   91 declaration-list-opt: declaration-list-opt . declaration

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LCB       shift, and go to state 96
    TYPENAME  shift, and go to state 25

    declaration              go to state 97
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    compound-stmt            go to state 99


State 65

   67 pointer: pointer STAR . type-qualifier-list-opt

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 80 (type-qualifier-list-opt)

    type-qualifier           go to state 58
    type-qualifier-list      go to state 59
    type-qualifier-list-opt  go to state 100


State 66

   65 declarator: pointer direct-declarator .
   71 direct-declarator: direct-declarator . LB type-qualifier-list-opt expr RB
   72                  | direct-declarator . LB type-qualifier-list-opt RB
   73                  | direct-declarator . LB type-qualifier-list-opt STAR RB
   74                  | direct-declarator . LPAR parameter-type-list RPAR
   75                  | direct-declarator . LPAR identifier-list-opt RPAR

    LPAR  shift, and go to state 67
    LB    shift, and go to state 68

    $default  reduce using rule 65 (declarator)


State 67

   74 direct-declarator: direct-declarator LPAR . parameter-type-list RPAR
   75                  | direct-declarator LPAR . identifier-list-opt RPAR

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    TYPENAME  shift, and go to state 25

    $default  reduce using rule 76 (identifier-list-opt)

    declaration-specifiers   go to state 101
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    identifier-list-opt      go to state 102
    parameter-type-list      go to state 103
    parameter-list           go to state 104
    parameter-declaration    go to state 105


State 68

   71 direct-declarator: direct-declarator LB . type-qualifier-list-opt expr RB
   72                  | direct-declarator LB . type-qualifier-list-opt RB
   73                  | direct-declarator LB . type-qualifier-list-opt STAR RB

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 80 (type-qualifier-list-opt)

    type-qualifier           go to state 58
    type-qualifier-list      go to state 59
    type-qualifier-list-opt  go to state 106


State 69

   41 specifier-qualifier-list: type-specifier .

    $default  reduce using rule 41 (specifier-qualifier-list)


State 70

   35 struct-or-union-spec: struct-or-union LCB struct-declaration-list . RCB
   37 struct-declaration-list: struct-declaration-list . struct-declaration

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    RCB       shift, and go to state 107
    TYPENAME  shift, and go to state 25

    type-specifier            go to state 69
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    struct-declaration        go to state 108
    specifier-qualifier-list  go to state 72
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 73


State 71

   36 struct-declaration-list: struct-declaration .

    $default  reduce using rule 36 (struct-declaration-list)


State 72

   38 struct-declaration: specifier-qualifier-list . struct-declarator-list SEMI specifier-qualifier-list SEMI
   39 specifier-qualifier-list: specifier-qualifier-list . type-specifier
   40                         | specifier-qualifier-list . type-qualifier

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 41
    STAR      shift, and go to state 43
    ID        shift, and go to state 44
    TYPENAME  shift, and go to state 25

    type-specifier          go to state 109
    typedef-name            go to state 32
    struct-or-union-spec    go to state 33
    struct-declarator-list  go to state 110
    struct-declarator       go to state 111
    struct-or-union         go to state 34
    enum-specifier          go to state 35
    type-qualifier          go to state 112
    declarator              go to state 113
    pointer                 go to state 49
    direct-declarator       go to state 50


State 73

   42 specifier-qualifier-list: type-qualifier .

    $default  reduce using rule 42 (specifier-qualifier-list)


State 74

   34 struct-or-union-spec: struct-or-union ID LCB . struct-declaration-list RCB

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    TYPENAME  shift, and go to state 25

    type-specifier            go to state 69
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    struct-declaration-list   go to state 114
    struct-declaration        go to state 71
    specifier-qualifier-list  go to state 72
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 73


State 75

   55 enumerator: ID ASSIGN . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 115
    function-call  go to state 95


State 76

   51 traling-comma: COMMA .
   53 enumerator-list: enumerator-list COMMA . enumerator

    ID  shift, and go to state 53

    $default  reduce using rule 51 (traling-comma)

    enumerator  go to state 116


State 77

   50 enum-specifier: ENUM LCB enumerator-list traling-comma . RCB

    RCB  shift, and go to state 117


State 78

   49 enum-specifier: ENUM ID LCB enumerator-list . traling-comma RCB
   53 enumerator-list: enumerator-list . COMMA enumerator

    COMMA  shift, and go to state 76

    $default  reduce using rule 52 (traling-comma)

    traling-comma  go to state 118


State 79

   70 direct-declarator: LPAR declarator RPAR .

    $default  reduce using rule 70 (direct-declarator)


State 80

   77 type-qualifier-list: type-qualifier-list type-qualifier .

    $default  reduce using rule 77 (type-qualifier-list)


State 81

   61 init-declarator-list: init-declarator-list COMMA init-declarator .

    $default  reduce using rule 61 (init-declarator-list)


State 82

   63 init-declarator: declarator . ASSIGN initializer
   64                | declarator .

    ASSIGN  shift, and go to state 63

    $default  reduce using rule 64 (init-declarator)


State 83

    8 declaration: declaration-specifiers init-declarator-list $@1 SEMI .

    $default  reduce using rule 8 (declaration)


State 84

  142 expr: LPAR . expr RPAR

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 119
    function-call  go to state 95


State 85

   89 array-init-expr: LCB . expr-list RCB

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    $default  reduce using rule 153 (expr-list)

    expr           go to state 120
    function-call  go to state 95
    expr-list      go to state 121


State 86

  139 expr: MINUS . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 122
    function-call  go to state 95


State 87

  145 expr: STAR . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 123
    function-call  go to state 95


State 88

  146 expr: INT_VAL .

    $default  reduce using rule 146 (expr)


State 89

  147 expr: REAL_VAL .

    $default  reduce using rule 147 (expr)


State 90

  148 expr: STR_VAL .

    $default  reduce using rule 148 (expr)


State 91

  149 expr: ID .

    $default  reduce using rule 149 (expr)


State 92

   63 init-declarator: declarator ASSIGN initializer .

    $default  reduce using rule 63 (init-declarator)


State 93

   88 initializer: array-init-expr .

    $default  reduce using rule 88 (initializer)


State 94

   87 initializer: expr .
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 87 (initializer)


State 95

  143 expr: function-call .

    $default  reduce using rule 143 (expr)


State 96

  111 compound-stmt: LCB . $@2 stmt-list $@3 RCB

    $default  reduce using rule 109 ($@2)

    $@2  go to state 137


State 97

   91 declaration-list-opt: declaration-list-opt declaration .

    $default  reduce using rule 91 (declaration-list-opt)


State 98

    6 declaration: declaration-specifiers . SEMI
    8            | declaration-specifiers . init-declarator-list $@1 SEMI
    9 declaration-specifiers: declaration-specifiers . declaration-specifier

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 41
    SEMI      shift, and go to state 42
    STAR      shift, and go to state 43
    ID        shift, and go to state 44
    TYPENAME  shift, and go to state 25

    declaration-specifier    go to state 45
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    init-declarator-list     go to state 46
    init-declarator          go to state 47
    declarator               go to state 82
    pointer                  go to state 49
    direct-declarator        go to state 50


State 99

   90 function-definition: declaration-specifiers declarator declaration-list-opt compound-stmt .

    $default  reduce using rule 90 (function-definition)


State 100

   67 pointer: pointer STAR type-qualifier-list-opt .

    $default  reduce using rule 67 (pointer)


State 101

    9 declaration-specifiers: declaration-specifiers . declaration-specifier
   84 parameter-declaration: declaration-specifiers . declarator
   85                      | declaration-specifiers . abstract-declarator-opt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 41
    STAR      shift, and go to state 43
    ID        shift, and go to state 44
    TYPENAME  shift, and go to state 25

    $default  reduce using rule 86 (abstract-declarator-opt)

    declaration-specifier    go to state 45
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    declarator               go to state 138
    pointer                  go to state 49
    direct-declarator        go to state 50
    abstract-declarator-opt  go to state 139


State 102

   75 direct-declarator: direct-declarator LPAR identifier-list-opt . RPAR

    RPAR  shift, and go to state 140


State 103

   74 direct-declarator: direct-declarator LPAR parameter-type-list . RPAR

    RPAR  shift, and go to state 141


State 104

   81 parameter-type-list: parameter-list .
   83 parameter-list: parameter-list . COMMA parameter-declaration

    COMMA  shift, and go to state 142

    $default  reduce using rule 81 (parameter-type-list)


State 105

   82 parameter-list: parameter-declaration .

    $default  reduce using rule 82 (parameter-list)


State 106

   71 direct-declarator: direct-declarator LB type-qualifier-list-opt . expr RB
   72                  | direct-declarator LB type-qualifier-list-opt . RB
   73                  | direct-declarator LB type-qualifier-list-opt . STAR RB

    LPAR      shift, and go to state 84
    RB        shift, and go to state 143
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 144
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 145
    function-call  go to state 95


State 107

   35 struct-or-union-spec: struct-or-union LCB struct-declaration-list RCB .

    $default  reduce using rule 35 (struct-or-union-spec)


State 108

   37 struct-declaration-list: struct-declaration-list struct-declaration .

    $default  reduce using rule 37 (struct-declaration-list)


State 109

   39 specifier-qualifier-list: specifier-qualifier-list type-specifier .

    $default  reduce using rule 39 (specifier-qualifier-list)


State 110

   38 struct-declaration: specifier-qualifier-list struct-declarator-list . SEMI specifier-qualifier-list SEMI
   44 struct-declarator-list: struct-declarator-list . COMMA struct-declarator

    SEMI   shift, and go to state 146
    COMMA  shift, and go to state 147


State 111

   43 struct-declarator-list: struct-declarator .

    $default  reduce using rule 43 (struct-declarator-list)


State 112

   40 specifier-qualifier-list: specifier-qualifier-list type-qualifier .

    $default  reduce using rule 40 (specifier-qualifier-list)


State 113

   45 struct-declarator: declarator .

    $default  reduce using rule 45 (struct-declarator)


State 114

   34 struct-or-union-spec: struct-or-union ID LCB struct-declaration-list . RCB
   37 struct-declaration-list: struct-declaration-list . struct-declaration

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    RCB       shift, and go to state 148
    TYPENAME  shift, and go to state 25

    type-specifier            go to state 69
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    struct-declaration        go to state 108
    specifier-qualifier-list  go to state 72
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 73


State 115

   55 enumerator: ID ASSIGN expr .
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 55 (enumerator)


State 116

   53 enumerator-list: enumerator-list COMMA enumerator .

    $default  reduce using rule 53 (enumerator-list)


State 117

   50 enum-specifier: ENUM LCB enumerator-list traling-comma RCB .

    $default  reduce using rule 50 (enum-specifier)


State 118

   49 enum-specifier: ENUM ID LCB enumerator-list traling-comma . RCB

    RCB  shift, and go to state 149


State 119

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  142     | LPAR expr . RPAR
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    RPAR        shift, and go to state 150
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 120

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR
  152 expr-list: expr .

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 152 (expr-list)


State 121

   89 array-init-expr: LCB expr-list . RCB
  151 expr-list: expr-list . COMMA expr

    RCB    shift, and go to state 151
    COMMA  shift, and go to state 152


State 122

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  139     | MINUS expr .
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR  shift, and go to state 129
    LB    shift, and go to state 130

    $default  reduce using rule 139 (expr)


State 123

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  145     | STAR expr .
  150 function-call: expr . LPAR expr-list RPAR

    LPAR  shift, and go to state 129
    LB    shift, and go to state 130

    $default  reduce using rule 145 (expr)


State 124

  134 expr: expr EQ . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 153
    function-call  go to state 95


State 125

  130 expr: expr LT . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 154
    function-call  go to state 95


State 126

  131 expr: expr BT . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 155
    function-call  go to state 95


State 127

  132 expr: expr LET . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 156
    function-call  go to state 95


State 128

  133 expr: expr BET . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 157
    function-call  go to state 95


State 129

  150 function-call: expr LPAR . expr-list RPAR

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    $default  reduce using rule 153 (expr-list)

    expr           go to state 120
    function-call  go to state 95
    expr-list      go to state 158


State 130

  144 expr: expr LB . expr RB

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 159
    function-call  go to state 95


State 131

  135 expr: expr PLUS . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 160
    function-call  go to state 95


State 132

  136 expr: expr MINUS . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 161
    function-call  go to state 95


State 133

  137 expr: expr STAR . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 162
    function-call  go to state 95


State 134

  138 expr: expr OVER . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 163
    function-call  go to state 95


State 135

  140 expr: expr PLUSPLUS .

    $default  reduce using rule 140 (expr)


State 136

  141 expr: expr MINUSMINUS .

    $default  reduce using rule 141 (expr)


State 137

  111 compound-stmt: LCB $@2 . stmt-list $@3 RCB

    $default  reduce using rule 113 (stmt-list)

    stmt-list  go to state 164


State 138

   84 parameter-declaration: declaration-specifiers declarator .

    $default  reduce using rule 84 (parameter-declaration)


State 139

   85 parameter-declaration: declaration-specifiers abstract-declarator-opt .

    $default  reduce using rule 85 (parameter-declaration)


State 140

   75 direct-declarator: direct-declarator LPAR identifier-list-opt RPAR .

    $default  reduce using rule 75 (direct-declarator)


State 141

   74 direct-declarator: direct-declarator LPAR parameter-type-list RPAR .

    $default  reduce using rule 74 (direct-declarator)


State 142

   83 parameter-list: parameter-list COMMA . parameter-declaration

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    TYPENAME  shift, and go to state 25

    declaration-specifiers   go to state 101
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    parameter-declaration    go to state 165


State 143

   72 direct-declarator: direct-declarator LB type-qualifier-list-opt RB .

    $default  reduce using rule 72 (direct-declarator)


State 144

   73 direct-declarator: direct-declarator LB type-qualifier-list-opt STAR . RB
  145 expr: STAR . expr

    LPAR      shift, and go to state 84
    RB        shift, and go to state 166
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 123
    function-call  go to state 95


State 145

   71 direct-declarator: direct-declarator LB type-qualifier-list-opt expr . RB
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    RB          shift, and go to state 167
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 146

   38 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI . specifier-qualifier-list SEMI

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    TYPENAME  shift, and go to state 25

    type-specifier            go to state 69
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    specifier-qualifier-list  go to state 168
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 73


State 147

   44 struct-declarator-list: struct-declarator-list COMMA . struct-declarator

    LPAR  shift, and go to state 41
    STAR  shift, and go to state 43
    ID    shift, and go to state 44

    struct-declarator  go to state 169
    declarator         go to state 113
    pointer            go to state 49
    direct-declarator  go to state 50


State 148

   34 struct-or-union-spec: struct-or-union ID LCB struct-declaration-list RCB .

    $default  reduce using rule 34 (struct-or-union-spec)


State 149

   49 enum-specifier: ENUM ID LCB enumerator-list traling-comma RCB .

    $default  reduce using rule 49 (enum-specifier)


State 150

  142 expr: LPAR expr RPAR .

    $default  reduce using rule 142 (expr)


State 151

   89 array-init-expr: LCB expr-list RCB .

    $default  reduce using rule 89 (array-init-expr)


State 152

  151 expr-list: expr-list COMMA . expr

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 170
    function-call  go to state 95


State 153

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  134     | expr EQ expr .
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 134 (expr)


State 154

  130 expr: expr . LT expr
  130     | expr LT expr .
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 130 (expr)


State 155

  130 expr: expr . LT expr
  131     | expr . BT expr
  131     | expr BT expr .
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 131 (expr)


State 156

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  132     | expr LET expr .
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 132 (expr)


State 157

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  133     | expr BET expr .
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 133 (expr)


State 158

  150 function-call: expr LPAR expr-list . RPAR
  151 expr-list: expr-list . COMMA expr

    RPAR   shift, and go to state 171
    COMMA  shift, and go to state 152


State 159

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  144     | expr LB expr . RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    RB          shift, and go to state 172
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 160

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  135     | expr PLUS expr .
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 135 (expr)


State 161

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  136     | expr MINUS expr .
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 136 (expr)


State 162

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  137     | expr STAR expr .
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 137 (expr)


State 163

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  138     | expr OVER expr .
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 138 (expr)


State 164

  111 compound-stmt: LCB $@2 stmt-list . $@3 RCB
  112 stmt-list: stmt-list . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    $default  reduce using rule 110 ($@3)

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 185
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    $@3                      go to state 188
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 165

   83 parameter-list: parameter-list COMMA parameter-declaration .

    $default  reduce using rule 83 (parameter-list)


State 166

   73 direct-declarator: direct-declarator LB type-qualifier-list-opt STAR RB .

    $default  reduce using rule 73 (direct-declarator)


State 167

   71 direct-declarator: direct-declarator LB type-qualifier-list-opt expr RB .

    $default  reduce using rule 71 (direct-declarator)


State 168

   38 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI specifier-qualifier-list . SEMI
   39 specifier-qualifier-list: specifier-qualifier-list . type-specifier
   40                         | specifier-qualifier-list . type-qualifier

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    SEMI      shift, and go to state 202
    TYPENAME  shift, and go to state 25

    type-specifier        go to state 109
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    type-qualifier        go to state 112


State 169

   44 struct-declarator-list: struct-declarator-list COMMA struct-declarator .

    $default  reduce using rule 44 (struct-declarator-list)


State 170

  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR
  151 expr-list: expr-list COMMA expr .

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 151 (expr-list)


State 171

  150 function-call: expr LPAR expr-list RPAR .

    $default  reduce using rule 150 (function-call)


State 172

  144 expr: expr LB expr RB .

    $default  reduce using rule 144 (expr)


State 173

  121 break-stmt: BREAK . SEMI

    SEMI  shift, and go to state 203


State 174

  122 case-stmt: CASE . expr COLON stmt

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 204
    function-call  go to state 95


State 175

  120 continue-stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 205


State 176

  123 default-stmt: DEFAULT . COLON stmt

    COLON  shift, and go to state 206


State 177

  125 do-while-stmt: DO . stmt WHILE LPAR expr RPAR SEMI

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 207
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 178

  126 for-stmt: FOR . LPAR stmt stmt expr RPAR stmt
  127         | FOR . LPAR stmt stmt RPAR stmt

    LPAR  shift, and go to state 208


State 179

  115 if-stmt: IF . LPAR expr RPAR stmt
  116        | IF . LPAR expr RPAR stmt ELSE stmt

    LPAR  shift, and go to state 209


State 180

  117 return-stmt: RETURN . return-value SEMI

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    $default  reduce using rule 119 (return-value)

    return-value   go to state 210
    expr           go to state 211
    function-call  go to state 95


State 181

  128 switch-stmt: SWITCH . LPAR expr RPAR stmt

    LPAR  shift, and go to state 212


State 182

  124 while-stmt: WHILE . LPAR expr RPAR stmt

    LPAR  shift, and go to state 213


State 183

  108 empty-stmt: SEMI .

    $default  reduce using rule 108 (empty-stmt)


State 184

   93 stmt: declaration .

    $default  reduce using rule 93 (stmt)


State 185

  112 stmt-list: stmt-list stmt .

    $default  reduce using rule 112 (stmt-list)


State 186

   94 stmt: empty-stmt .

    $default  reduce using rule 94 (stmt)


State 187

   95 stmt: compound-stmt .

    $default  reduce using rule 95 (stmt)


State 188

  111 compound-stmt: LCB $@2 stmt-list $@3 . RCB

    RCB  shift, and go to state 214


State 189

   96 stmt: assign-stmt .

    $default  reduce using rule 96 (stmt)


State 190

   97 stmt: if-stmt .

    $default  reduce using rule 97 (stmt)


State 191

   98 stmt: return-stmt .

    $default  reduce using rule 98 (stmt)


State 192

  102 stmt: continue-stmt .

    $default  reduce using rule 102 (stmt)


State 193

   99 stmt: break-stmt .

    $default  reduce using rule 99 (stmt)


State 194

  100 stmt: case-stmt .

    $default  reduce using rule 100 (stmt)


State 195

  101 stmt: default-stmt .

    $default  reduce using rule 101 (stmt)


State 196

  103 stmt: while-stmt .

    $default  reduce using rule 103 (stmt)


State 197

  104 stmt: do-while-stmt .

    $default  reduce using rule 104 (stmt)


State 198

  105 stmt: for-stmt .

    $default  reduce using rule 105 (stmt)


State 199

  106 stmt: switch-stmt .

    $default  reduce using rule 106 (stmt)


State 200

  107 stmt: expr-stmt .

    $default  reduce using rule 107 (stmt)


State 201

  114 assign-stmt: expr . ASSIGN expr SEMI
  129 expr-stmt: expr . SEMI
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    ASSIGN      shift, and go to state 215
    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    SEMI        shift, and go to state 216
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 202

   38 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI specifier-qualifier-list SEMI .

    $default  reduce using rule 38 (struct-declaration)


State 203

  121 break-stmt: BREAK SEMI .

    $default  reduce using rule 121 (break-stmt)


State 204

  122 case-stmt: CASE expr . COLON stmt
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    COLON       shift, and go to state 217
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 205

  120 continue-stmt: CONTINUE SEMI .

    $default  reduce using rule 120 (continue-stmt)


State 206

  123 default-stmt: DEFAULT COLON . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 218
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 207

  125 do-while-stmt: DO stmt . WHILE LPAR expr RPAR SEMI

    WHILE  shift, and go to state 219


State 208

  126 for-stmt: FOR LPAR . stmt stmt expr RPAR stmt
  127         | FOR LPAR . stmt stmt RPAR stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 220
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 209

  115 if-stmt: IF LPAR . expr RPAR stmt
  116        | IF LPAR . expr RPAR stmt ELSE stmt

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 221
    function-call  go to state 95


State 210

  117 return-stmt: RETURN return-value . SEMI

    SEMI  shift, and go to state 222


State 211

  118 return-value: expr .
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136

    $default  reduce using rule 118 (return-value)


State 212

  128 switch-stmt: SWITCH LPAR . expr RPAR stmt

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 223
    function-call  go to state 95


State 213

  124 while-stmt: WHILE LPAR . expr RPAR stmt

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 224
    function-call  go to state 95


State 214

  111 compound-stmt: LCB $@2 stmt-list $@3 RCB .

    $default  reduce using rule 111 (compound-stmt)


State 215

  114 assign-stmt: expr ASSIGN . expr SEMI

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 225
    function-call  go to state 95


State 216

  129 expr-stmt: expr SEMI .

    $default  reduce using rule 129 (expr-stmt)


State 217

  122 case-stmt: CASE expr COLON . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 226
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 218

  123 default-stmt: DEFAULT COLON stmt .

    $default  reduce using rule 123 (default-stmt)


State 219

  125 do-while-stmt: DO stmt WHILE . LPAR expr RPAR SEMI

    LPAR  shift, and go to state 227


State 220

  126 for-stmt: FOR LPAR stmt . stmt expr RPAR stmt
  127         | FOR LPAR stmt . stmt RPAR stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 228
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 221

  115 if-stmt: IF LPAR expr . RPAR stmt
  116        | IF LPAR expr . RPAR stmt ELSE stmt
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    RPAR        shift, and go to state 229
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 222

  117 return-stmt: RETURN return-value SEMI .

    $default  reduce using rule 117 (return-stmt)


State 223

  128 switch-stmt: SWITCH LPAR expr . RPAR stmt
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    RPAR        shift, and go to state 230
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 224

  124 while-stmt: WHILE LPAR expr . RPAR stmt
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    RPAR        shift, and go to state 231
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 225

  114 assign-stmt: expr ASSIGN expr . SEMI
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    SEMI        shift, and go to state 232
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 226

  122 case-stmt: CASE expr COLON stmt .

    $default  reduce using rule 122 (case-stmt)


State 227

  125 do-while-stmt: DO stmt WHILE LPAR . expr RPAR SEMI

    LPAR      shift, and go to state 84
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 233
    function-call  go to state 95


State 228

  126 for-stmt: FOR LPAR stmt stmt . expr RPAR stmt
  127         | FOR LPAR stmt stmt . RPAR stmt

    LPAR      shift, and go to state 84
    RPAR      shift, and go to state 234
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91

    expr           go to state 235
    function-call  go to state 95


State 229

  115 if-stmt: IF LPAR expr RPAR . stmt
  116        | IF LPAR expr RPAR . stmt ELSE stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 236
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 230

  128 switch-stmt: SWITCH LPAR expr RPAR . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 237
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 231

  124 while-stmt: WHILE LPAR expr RPAR . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 238
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 232

  114 assign-stmt: expr ASSIGN expr SEMI .

    $default  reduce using rule 114 (assign-stmt)


State 233

  125 do-while-stmt: DO stmt WHILE LPAR expr . RPAR SEMI
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    RPAR        shift, and go to state 239
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 234

  127 for-stmt: FOR LPAR stmt stmt RPAR . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 240
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 235

  126 for-stmt: FOR LPAR stmt stmt expr . RPAR stmt
  130 expr: expr . LT expr
  131     | expr . BT expr
  132     | expr . LET expr
  133     | expr . BET expr
  134     | expr . EQ expr
  135     | expr . PLUS expr
  136     | expr . MINUS expr
  137     | expr . STAR expr
  138     | expr . OVER expr
  140     | expr . PLUSPLUS
  141     | expr . MINUSMINUS
  144     | expr . LB expr RB
  150 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 124
    LT          shift, and go to state 125
    BT          shift, and go to state 126
    LET         shift, and go to state 127
    BET         shift, and go to state 128
    LPAR        shift, and go to state 129
    RPAR        shift, and go to state 241
    LB          shift, and go to state 130
    PLUS        shift, and go to state 131
    MINUS       shift, and go to state 132
    STAR        shift, and go to state 133
    OVER        shift, and go to state 134
    PLUSPLUS    shift, and go to state 135
    MINUSMINUS  shift, and go to state 136


State 236

  115 if-stmt: IF LPAR expr RPAR stmt .
  116        | IF LPAR expr RPAR stmt . ELSE stmt

    ELSE  shift, and go to state 242

    $default  reduce using rule 115 (if-stmt)


State 237

  128 switch-stmt: SWITCH LPAR expr RPAR stmt .

    $default  reduce using rule 128 (switch-stmt)


State 238

  124 while-stmt: WHILE LPAR expr RPAR stmt .

    $default  reduce using rule 124 (while-stmt)


State 239

  125 do-while-stmt: DO stmt WHILE LPAR expr RPAR . SEMI

    SEMI  shift, and go to state 243


State 240

  127 for-stmt: FOR LPAR stmt stmt RPAR stmt .

    $default  reduce using rule 127 (for-stmt)


State 241

  126 for-stmt: FOR LPAR stmt stmt expr RPAR . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 244
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 242

  116 if-stmt: IF LPAR expr RPAR stmt ELSE . stmt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 173
    CASE      shift, and go to state 174
    CONTINUE  shift, and go to state 175
    DEFAULT   shift, and go to state 176
    DO        shift, and go to state 177
    FOR       shift, and go to state 178
    IF        shift, and go to state 179
    RETURN    shift, and go to state 180
    SWITCH    shift, and go to state 181
    WHILE     shift, and go to state 182
    LPAR      shift, and go to state 84
    SEMI      shift, and go to state 183
    LCB       shift, and go to state 96
    MINUS     shift, and go to state 86
    STAR      shift, and go to state 87
    INT_VAL   shift, and go to state 88
    REAL_VAL  shift, and go to state 89
    STR_VAL   shift, and go to state 90
    ID        shift, and go to state 91
    TYPENAME  shift, and go to state 25

    declaration              go to state 184
    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    stmt                     go to state 245
    empty-stmt               go to state 186
    compound-stmt            go to state 187
    assign-stmt              go to state 189
    if-stmt                  go to state 190
    return-stmt              go to state 191
    continue-stmt            go to state 192
    break-stmt               go to state 193
    case-stmt                go to state 194
    default-stmt             go to state 195
    while-stmt               go to state 196
    do-while-stmt            go to state 197
    for-stmt                 go to state 198
    switch-stmt              go to state 199
    expr-stmt                go to state 200
    expr                     go to state 201
    function-call            go to state 95


State 243

  125 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI .

    $default  reduce using rule 125 (do-while-stmt)


State 244

  126 for-stmt: FOR LPAR stmt stmt expr RPAR stmt .

    $default  reduce using rule 126 (for-stmt)


State 245

  116 if-stmt: IF LPAR expr RPAR stmt ELSE stmt .

    $default  reduce using rule 116 (if-stmt)
