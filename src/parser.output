Terminals unused in grammar

    SIZEOF
    GOTO


Rules useless in parser due to conflicts

   32 typedef-name: ID


State 25 conflicts: 27 reduce/reduce
State 31 conflicts: 1 shift/reduce
State 44 conflicts: 31 reduce/reduce
State 189 conflicts: 1 reduce/reduce


Grammar

    0 $accept: all $end

    1 all: program

    2 program: program program-part
    3        | %empty

    4 program-part: function-definition
    5             | declaration

    6 declaration: declaration-specifiers SEMI
    7            | declaration-specifiers init-declarator-list SEMI

    8 declaration-specifiers: declaration-specifiers declaration-specifier
    9                       | declaration-specifier

   10 declaration-specifier: storage-class-specifier
   11                      | type-specifier
   12                      | type-qualifier
   13                      | function-specifier

   14 storage-class-specifier: TYPEDEF
   15                        | EXTERN
   16                        | STATIC
   17                        | AUTO
   18                        | REGISTER

   19 type-specifier: VOID
   20               | CHAR
   21               | SHORT
   22               | INT
   23               | LONG
   24               | FLOAT
   25               | DOUBLE
   26               | SIGNED
   27               | UNSIGNED
   28               | ID
   29               | typedef-name
   30               | struct-or-union-spec
   31               | enum-specifier

   32 typedef-name: ID

   33 struct-or-union-spec: struct-or-union ID
   34                     | struct-or-union ID LCB struct-declaration-list RCB
   35                     | struct-or-union LCB struct-declaration-list RCB

   36 struct-declaration-list: struct-declaration
   37                        | struct-declaration-list struct-declaration

   38 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI specifier-qualifier-list SEMI

   39 specifier-qualifier-list: specifier-qualifier-list type-specifier
   40                         | specifier-qualifier-list type-qualifier
   41                         | type-specifier
   42                         | type-qualifier

   43 struct-declarator-list: struct-declarator
   44                       | struct-declarator-list COMMA struct-declarator

   45 struct-declarator: declarator

   46 struct-or-union: STRUCT
   47                | UNION

   48 enum-specifier: ENUM ID
   49               | ENUM ID LCB enumerator-list traling-comma RCB
   50               | ENUM LCB enumerator-list traling-comma RCB

   51 traling-comma: COMMA
   52              | %empty

   53 enumerator-list: enumerator-list COMMA enumerator
   54                | enumerator

   55 enumerator: ID ASSIGN expr
   56           | ID

   57 type-qualifier: CONST
   58               | RESTRICT
   59               | VOLATILE

   60 function-specifier: INLINE

   61 init-declarator-list: init-declarator-list COMMA init-declarator
   62                     | init-declarator

   63 init-declarator: declarator ASSIGN initializer
   64                | declarator

   65 declarator: pointer direct-declarator
   66           | direct-declarator

   67 pointer: pointer STAR type-qualifier-list-opt
   68        | STAR type-qualifier-list-opt

   69 direct-declarator: ID
   70                  | LPAR declarator RPAR
   71                  | direct-declarator LB type-qualifier-list-opt expr RB
   72                  | direct-declarator LB type-qualifier-list-opt RB
   73                  | direct-declarator LB type-qualifier-list-opt STAR RB
   74                  | direct-declarator LPAR parameter-type-list RPAR

   75 type-qualifier-list: type-qualifier-list type-qualifier
   76                    | type-qualifier

   77 type-qualifier-list-opt: type-qualifier-list
   78                        | %empty

   79 parameter-type-list: parameter-list

   80 parameter-list: parameter-declaration
   81               | parameter-list COMMA parameter-declaration

   82 parameter-declaration: declaration-specifiers declarator
   83                      | declaration-specifiers abstract-declarator-opt

   84 abstract-declarator-opt: %empty

   85 initializer: expr
   86            | array-init-expr

   87 array-init-expr: LCB expr-list RCB

   88 function-definition: type-specifier ID LPAR param-list RPAR compound-stmt

   89 param-list: param-list COMMA param-spec
   90           | param-spec
   91           | %empty

   92 param-spec: type-specifier
   93           | type-specifier ID

   94 stmt: empty-stmt
   95     | compound-stmt
   96     | var-declaration-stmt
   97     | assign-stmt
   98     | if-stmt
   99     | return-stmt
  100     | break-stmt
  101     | case-stmt
  102     | default-stmt
  103     | continue-stmt
  104     | while-stmt
  105     | do-while-stmt
  106     | for-stmt
  107     | switch-stmt
  108     | expr-stmt

  109 empty-stmt: SEMI

  110 compound-stmt: LCB stmt-list RCB

  111 stmt-list: stmt-list stmt
  112          | %empty

  113 var-declaration-stmt: type-specifier var-list SEMI

  114 var-list: var-list COMMA var-item
  115         | var-item

  116 var-item: ID
  117         | ID ASSIGN expr

  118 assign-stmt: expr ASSIGN expr SEMI

  119 if-stmt: IF LPAR expr RPAR stmt
  120        | IF LPAR expr RPAR stmt ELSE stmt

  121 return-stmt: RETURN return-value SEMI

  122 return-value: expr
  123             | %empty

  124 continue-stmt: CONTINUE SEMI

  125 break-stmt: BREAK SEMI

  126 case-stmt: CASE expr COLON stmt

  127 default-stmt: DEFAULT COLON stmt

  128 while-stmt: WHILE LPAR expr RPAR stmt

  129 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI

  130 for-stmt: FOR LPAR stmt stmt expr RPAR stmt
  131         | FOR LPAR stmt stmt RPAR stmt

  132 switch-stmt: SWITCH LPAR expr RPAR stmt

  133 expr-stmt: expr SEMI

  134 expr: expr LT expr
  135     | expr BT expr
  136     | expr LET expr
  137     | expr BET expr
  138     | expr EQ expr
  139     | expr PLUS expr
  140     | expr MINUS expr
  141     | expr STAR expr
  142     | expr OVER expr
  143     | MINUS expr
  144     | expr PLUSPLUS
  145     | expr MINUSMINUS
  146     | LPAR expr RPAR
  147     | function-call
  148     | expr LB expr RB
  149     | STAR expr
  150     | INT_VAL
  151     | REAL_VAL
  152     | STR_VAL
  153     | ID

  154 function-call: expr LPAR expr-list RPAR

  155 expr-list: expr-list COMMA expr
  156          | expr
  157          | %empty


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TYPEDEF (258) 14
    EXTERN (259) 15
    STATIC (260) 16
    AUTO (261) 17
    REGISTER (262) 18
    VOID (263) 19
    CHAR (264) 20
    SHORT (265) 21
    INT (266) 22
    LONG (267) 23
    FLOAT (268) 24
    DOUBLE (269) 25
    SIGNED (270) 26
    UNSIGNED (271) 27
    CONST (272) 57
    RESTRICT (273) 58
    VOLATILE (274) 59
    INLINE (275) 60
    SIZEOF (276)
    ENUM (277) 48 49 50
    STRUCT (278) 46
    UNION (279) 47
    BREAK (280) 125
    CASE (281) 126
    CONTINUE (282) 124
    DEFAULT (283) 127
    DO (284) 129
    ELSE (285) 120
    FOR (286) 130 131
    GOTO (287)
    IF (288) 119 120
    RETURN (289) 121
    SWITCH (290) 132
    WHILE (291) 128 129
    ASSIGN (292) 55 63 117 118
    EQ (293) 138
    LT (294) 134
    BT (295) 135
    LET (296) 136
    BET (297) 137
    LPAR (298) 70 74 88 119 120 128 129 130 131 132 146 154
    RPAR (299) 70 74 88 119 120 128 129 130 131 132 146 154
    SEMI (300) 6 7 38 109 113 118 121 124 125 129 133
    LCB (301) 34 35 49 50 87 110
    RCB (302) 34 35 49 50 87 110
    COLON (303) 126 127
    LB (304) 71 72 73 148
    RB (305) 71 72 73 148
    PLUS (306) 139
    MINUS (307) 140 143
    STAR (308) 67 68 73 141 149
    OVER (309) 142
    PLUSPLUS (310) 144
    MINUSMINUS (311) 145
    INT_VAL (312) 150
    REAL_VAL (313) 151
    ID (314) 28 32 33 34 48 49 55 56 69 88 93 116 117 153
    STR_VAL (315) 152
    COMMA (316) 44 51 53 61 81 89 114 155
    UMINUS (317)
    POINTER (318)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    all (65)
        on left: 1
        on right: 0
    program (66)
        on left: 2 3
        on right: 1 2
    program-part (67)
        on left: 4 5
        on right: 2
    declaration (68)
        on left: 6 7
        on right: 5
    declaration-specifiers (69)
        on left: 8 9
        on right: 6 7 8 82 83
    declaration-specifier (70)
        on left: 10 11 12 13
        on right: 8 9
    storage-class-specifier (71)
        on left: 14 15 16 17 18
        on right: 10
    type-specifier (72)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30 31
        on right: 11 39 41 88 92 93 113
    typedef-name (73)
        on left: 32
        on right: 29
    struct-or-union-spec (74)
        on left: 33 34 35
        on right: 30
    struct-declaration-list (75)
        on left: 36 37
        on right: 34 35 37
    struct-declaration (76)
        on left: 38
        on right: 36 37
    specifier-qualifier-list (77)
        on left: 39 40 41 42
        on right: 38 39 40
    struct-declarator-list (78)
        on left: 43 44
        on right: 38 44
    struct-declarator (79)
        on left: 45
        on right: 43 44
    struct-or-union (80)
        on left: 46 47
        on right: 33 34 35
    enum-specifier (81)
        on left: 48 49 50
        on right: 31
    traling-comma (82)
        on left: 51 52
        on right: 49 50
    enumerator-list (83)
        on left: 53 54
        on right: 49 50 53
    enumerator (84)
        on left: 55 56
        on right: 53 54
    type-qualifier (85)
        on left: 57 58 59
        on right: 12 40 42 75 76
    function-specifier (86)
        on left: 60
        on right: 13
    init-declarator-list (87)
        on left: 61 62
        on right: 7 61
    init-declarator (88)
        on left: 63 64
        on right: 61 62
    declarator (89)
        on left: 65 66
        on right: 45 63 64 70 82
    pointer (90)
        on left: 67 68
        on right: 65 67
    direct-declarator (91)
        on left: 69 70 71 72 73 74
        on right: 65 66 71 72 73 74
    type-qualifier-list (92)
        on left: 75 76
        on right: 75 77
    type-qualifier-list-opt (93)
        on left: 77 78
        on right: 67 68 71 72 73
    parameter-type-list (94)
        on left: 79
        on right: 74
    parameter-list (95)
        on left: 80 81
        on right: 79 81
    parameter-declaration (96)
        on left: 82 83
        on right: 80 81
    abstract-declarator-opt (97)
        on left: 84
        on right: 83
    initializer (98)
        on left: 85 86
        on right: 63
    array-init-expr (99)
        on left: 87
        on right: 86
    function-definition (100)
        on left: 88
        on right: 4
    param-list (101)
        on left: 89 90 91
        on right: 88 89
    param-spec (102)
        on left: 92 93
        on right: 89 90
    stmt (103)
        on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
        on right: 111 119 120 126 127 128 129 130 131 132
    empty-stmt (104)
        on left: 109
        on right: 94
    compound-stmt (105)
        on left: 110
        on right: 88 95
    stmt-list (106)
        on left: 111 112
        on right: 110 111
    var-declaration-stmt (107)
        on left: 113
        on right: 96
    var-list (108)
        on left: 114 115
        on right: 113 114
    var-item (109)
        on left: 116 117
        on right: 114 115
    assign-stmt (110)
        on left: 118
        on right: 97
    if-stmt (111)
        on left: 119 120
        on right: 98
    return-stmt (112)
        on left: 121
        on right: 99
    return-value (113)
        on left: 122 123
        on right: 121
    continue-stmt (114)
        on left: 124
        on right: 103
    break-stmt (115)
        on left: 125
        on right: 100
    case-stmt (116)
        on left: 126
        on right: 101
    default-stmt (117)
        on left: 127
        on right: 102
    while-stmt (118)
        on left: 128
        on right: 104
    do-while-stmt (119)
        on left: 129
        on right: 105
    for-stmt (120)
        on left: 130 131
        on right: 106
    switch-stmt (121)
        on left: 132
        on right: 107
    expr-stmt (122)
        on left: 133
        on right: 108
    expr (123)
        on left: 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153
        on right: 55 71 85 117 118 119 120 122 126 128 129 130 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 148 149 154 155 156
    function-call (124)
        on left: 154
        on right: 147
    expr-list (125)
        on left: 155 156 157
        on right: 87 154 155


State 0

    0 $accept: . all $end

    $default  reduce using rule 3 (program)

    all      go to state 1
    program  go to state 2


State 1

    0 $accept: all . $end

    $end  shift, and go to state 3


State 2

    1 all: program .
    2 program: program . program-part

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    ID        shift, and go to state 25

    $default  reduce using rule 1 (all)

    program-part             go to state 26
    declaration              go to state 27
    declaration-specifiers   go to state 28
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 31
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    function-definition      go to state 38


State 3

    0 $accept: all $end .

    $default  accept


State 4

   14 storage-class-specifier: TYPEDEF .

    $default  reduce using rule 14 (storage-class-specifier)


State 5

   15 storage-class-specifier: EXTERN .

    $default  reduce using rule 15 (storage-class-specifier)


State 6

   16 storage-class-specifier: STATIC .

    $default  reduce using rule 16 (storage-class-specifier)


State 7

   17 storage-class-specifier: AUTO .

    $default  reduce using rule 17 (storage-class-specifier)


State 8

   18 storage-class-specifier: REGISTER .

    $default  reduce using rule 18 (storage-class-specifier)


State 9

   19 type-specifier: VOID .

    $default  reduce using rule 19 (type-specifier)


State 10

   20 type-specifier: CHAR .

    $default  reduce using rule 20 (type-specifier)


State 11

   21 type-specifier: SHORT .

    $default  reduce using rule 21 (type-specifier)


State 12

   22 type-specifier: INT .

    $default  reduce using rule 22 (type-specifier)


State 13

   23 type-specifier: LONG .

    $default  reduce using rule 23 (type-specifier)


State 14

   24 type-specifier: FLOAT .

    $default  reduce using rule 24 (type-specifier)


State 15

   25 type-specifier: DOUBLE .

    $default  reduce using rule 25 (type-specifier)


State 16

   26 type-specifier: SIGNED .

    $default  reduce using rule 26 (type-specifier)


State 17

   27 type-specifier: UNSIGNED .

    $default  reduce using rule 27 (type-specifier)


State 18

   57 type-qualifier: CONST .

    $default  reduce using rule 57 (type-qualifier)


State 19

   58 type-qualifier: RESTRICT .

    $default  reduce using rule 58 (type-qualifier)


State 20

   59 type-qualifier: VOLATILE .

    $default  reduce using rule 59 (type-qualifier)


State 21

   60 function-specifier: INLINE .

    $default  reduce using rule 60 (function-specifier)


State 22

   48 enum-specifier: ENUM . ID
   49               | ENUM . ID LCB enumerator-list traling-comma RCB
   50               | ENUM . LCB enumerator-list traling-comma RCB

    LCB  shift, and go to state 39
    ID   shift, and go to state 40


State 23

   46 struct-or-union: STRUCT .

    $default  reduce using rule 46 (struct-or-union)


State 24

   47 struct-or-union: UNION .

    $default  reduce using rule 47 (struct-or-union)


State 25

   28 type-specifier: ID .
   32 typedef-name: ID .

    TYPEDEF   reduce using rule 28 (type-specifier)
    TYPEDEF   [reduce using rule 32 (typedef-name)]
    EXTERN    reduce using rule 28 (type-specifier)
    EXTERN    [reduce using rule 32 (typedef-name)]
    STATIC    reduce using rule 28 (type-specifier)
    STATIC    [reduce using rule 32 (typedef-name)]
    AUTO      reduce using rule 28 (type-specifier)
    AUTO      [reduce using rule 32 (typedef-name)]
    REGISTER  reduce using rule 28 (type-specifier)
    REGISTER  [reduce using rule 32 (typedef-name)]
    VOID      reduce using rule 28 (type-specifier)
    VOID      [reduce using rule 32 (typedef-name)]
    CHAR      reduce using rule 28 (type-specifier)
    CHAR      [reduce using rule 32 (typedef-name)]
    SHORT     reduce using rule 28 (type-specifier)
    SHORT     [reduce using rule 32 (typedef-name)]
    INT       reduce using rule 28 (type-specifier)
    INT       [reduce using rule 32 (typedef-name)]
    LONG      reduce using rule 28 (type-specifier)
    LONG      [reduce using rule 32 (typedef-name)]
    FLOAT     reduce using rule 28 (type-specifier)
    FLOAT     [reduce using rule 32 (typedef-name)]
    DOUBLE    reduce using rule 28 (type-specifier)
    DOUBLE    [reduce using rule 32 (typedef-name)]
    SIGNED    reduce using rule 28 (type-specifier)
    SIGNED    [reduce using rule 32 (typedef-name)]
    UNSIGNED  reduce using rule 28 (type-specifier)
    UNSIGNED  [reduce using rule 32 (typedef-name)]
    CONST     reduce using rule 28 (type-specifier)
    CONST     [reduce using rule 32 (typedef-name)]
    RESTRICT  reduce using rule 28 (type-specifier)
    RESTRICT  [reduce using rule 32 (typedef-name)]
    VOLATILE  reduce using rule 28 (type-specifier)
    VOLATILE  [reduce using rule 32 (typedef-name)]
    INLINE    reduce using rule 28 (type-specifier)
    INLINE    [reduce using rule 32 (typedef-name)]
    ENUM      reduce using rule 28 (type-specifier)
    ENUM      [reduce using rule 32 (typedef-name)]
    STRUCT    reduce using rule 28 (type-specifier)
    STRUCT    [reduce using rule 32 (typedef-name)]
    UNION     reduce using rule 28 (type-specifier)
    UNION     [reduce using rule 32 (typedef-name)]
    LPAR      reduce using rule 28 (type-specifier)
    LPAR      [reduce using rule 32 (typedef-name)]
    RPAR      reduce using rule 28 (type-specifier)
    RPAR      [reduce using rule 32 (typedef-name)]
    SEMI      reduce using rule 28 (type-specifier)
    SEMI      [reduce using rule 32 (typedef-name)]
    STAR      reduce using rule 28 (type-specifier)
    STAR      [reduce using rule 32 (typedef-name)]
    ID        reduce using rule 28 (type-specifier)
    ID        [reduce using rule 32 (typedef-name)]
    COMMA     reduce using rule 28 (type-specifier)
    COMMA     [reduce using rule 32 (typedef-name)]
    $default  reduce using rule 28 (type-specifier)


State 26

    2 program: program program-part .

    $default  reduce using rule 2 (program)


State 27

    5 program-part: declaration .

    $default  reduce using rule 5 (program-part)


State 28

    6 declaration: declaration-specifiers . SEMI
    7            | declaration-specifiers . init-declarator-list SEMI
    8 declaration-specifiers: declaration-specifiers . declaration-specifier

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 41
    SEMI      shift, and go to state 42
    STAR      shift, and go to state 43
    ID        shift, and go to state 44

    declaration-specifier    go to state 45
    storage-class-specifier  go to state 30
    type-specifier           go to state 46
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    init-declarator-list     go to state 47
    init-declarator          go to state 48
    declarator               go to state 49
    pointer                  go to state 50
    direct-declarator        go to state 51


State 29

    9 declaration-specifiers: declaration-specifier .

    $default  reduce using rule 9 (declaration-specifiers)


State 30

   10 declaration-specifier: storage-class-specifier .

    $default  reduce using rule 10 (declaration-specifier)


State 31

   11 declaration-specifier: type-specifier .
   88 function-definition: type-specifier . ID LPAR param-list RPAR compound-stmt

    ID  shift, and go to state 52

    ID        [reduce using rule 11 (declaration-specifier)]
    $default  reduce using rule 11 (declaration-specifier)


State 32

   29 type-specifier: typedef-name .

    $default  reduce using rule 29 (type-specifier)


State 33

   30 type-specifier: struct-or-union-spec .

    $default  reduce using rule 30 (type-specifier)


State 34

   33 struct-or-union-spec: struct-or-union . ID
   34                     | struct-or-union . ID LCB struct-declaration-list RCB
   35                     | struct-or-union . LCB struct-declaration-list RCB

    LCB  shift, and go to state 53
    ID   shift, and go to state 54


State 35

   31 type-specifier: enum-specifier .

    $default  reduce using rule 31 (type-specifier)


State 36

   12 declaration-specifier: type-qualifier .

    $default  reduce using rule 12 (declaration-specifier)


State 37

   13 declaration-specifier: function-specifier .

    $default  reduce using rule 13 (declaration-specifier)


State 38

    4 program-part: function-definition .

    $default  reduce using rule 4 (program-part)


State 39

   50 enum-specifier: ENUM LCB . enumerator-list traling-comma RCB

    ID  shift, and go to state 55

    enumerator-list  go to state 56
    enumerator       go to state 57


State 40

   48 enum-specifier: ENUM ID .
   49               | ENUM ID . LCB enumerator-list traling-comma RCB

    LCB  shift, and go to state 58

    $default  reduce using rule 48 (enum-specifier)


State 41

   70 direct-declarator: LPAR . declarator RPAR

    LPAR  shift, and go to state 41
    STAR  shift, and go to state 43
    ID    shift, and go to state 59

    declarator         go to state 60
    pointer            go to state 50
    direct-declarator  go to state 51


State 42

    6 declaration: declaration-specifiers SEMI .

    $default  reduce using rule 6 (declaration)


State 43

   68 pointer: STAR . type-qualifier-list-opt

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 78 (type-qualifier-list-opt)

    type-qualifier           go to state 61
    type-qualifier-list      go to state 62
    type-qualifier-list-opt  go to state 63


State 44

   28 type-specifier: ID .
   32 typedef-name: ID .
   69 direct-declarator: ID .

    TYPEDEF   reduce using rule 28 (type-specifier)
    TYPEDEF   [reduce using rule 32 (typedef-name)]
    EXTERN    reduce using rule 28 (type-specifier)
    EXTERN    [reduce using rule 32 (typedef-name)]
    STATIC    reduce using rule 28 (type-specifier)
    STATIC    [reduce using rule 32 (typedef-name)]
    AUTO      reduce using rule 28 (type-specifier)
    AUTO      [reduce using rule 32 (typedef-name)]
    REGISTER  reduce using rule 28 (type-specifier)
    REGISTER  [reduce using rule 32 (typedef-name)]
    VOID      reduce using rule 28 (type-specifier)
    VOID      [reduce using rule 32 (typedef-name)]
    CHAR      reduce using rule 28 (type-specifier)
    CHAR      [reduce using rule 32 (typedef-name)]
    SHORT     reduce using rule 28 (type-specifier)
    SHORT     [reduce using rule 32 (typedef-name)]
    INT       reduce using rule 28 (type-specifier)
    INT       [reduce using rule 32 (typedef-name)]
    LONG      reduce using rule 28 (type-specifier)
    LONG      [reduce using rule 32 (typedef-name)]
    FLOAT     reduce using rule 28 (type-specifier)
    FLOAT     [reduce using rule 32 (typedef-name)]
    DOUBLE    reduce using rule 28 (type-specifier)
    DOUBLE    [reduce using rule 32 (typedef-name)]
    SIGNED    reduce using rule 28 (type-specifier)
    SIGNED    [reduce using rule 32 (typedef-name)]
    UNSIGNED  reduce using rule 28 (type-specifier)
    UNSIGNED  [reduce using rule 32 (typedef-name)]
    CONST     reduce using rule 28 (type-specifier)
    CONST     [reduce using rule 32 (typedef-name)]
    RESTRICT  reduce using rule 28 (type-specifier)
    RESTRICT  [reduce using rule 32 (typedef-name)]
    VOLATILE  reduce using rule 28 (type-specifier)
    VOLATILE  [reduce using rule 32 (typedef-name)]
    INLINE    reduce using rule 28 (type-specifier)
    INLINE    [reduce using rule 32 (typedef-name)]
    ENUM      reduce using rule 28 (type-specifier)
    ENUM      [reduce using rule 32 (typedef-name)]
    STRUCT    reduce using rule 28 (type-specifier)
    STRUCT    [reduce using rule 32 (typedef-name)]
    UNION     reduce using rule 28 (type-specifier)
    UNION     [reduce using rule 32 (typedef-name)]
    ASSIGN    reduce using rule 69 (direct-declarator)
    LPAR      reduce using rule 28 (type-specifier)
    LPAR      [reduce using rule 32 (typedef-name)]
    LPAR      [reduce using rule 69 (direct-declarator)]
    RPAR      reduce using rule 28 (type-specifier)
    RPAR      [reduce using rule 32 (typedef-name)]
    RPAR      [reduce using rule 69 (direct-declarator)]
    SEMI      reduce using rule 28 (type-specifier)
    SEMI      [reduce using rule 32 (typedef-name)]
    SEMI      [reduce using rule 69 (direct-declarator)]
    LB        reduce using rule 69 (direct-declarator)
    STAR      reduce using rule 28 (type-specifier)
    STAR      [reduce using rule 32 (typedef-name)]
    ID        reduce using rule 28 (type-specifier)
    ID        [reduce using rule 32 (typedef-name)]
    COMMA     reduce using rule 28 (type-specifier)
    COMMA     [reduce using rule 32 (typedef-name)]
    COMMA     [reduce using rule 69 (direct-declarator)]
    $default  reduce using rule 28 (type-specifier)


State 45

    8 declaration-specifiers: declaration-specifiers declaration-specifier .

    $default  reduce using rule 8 (declaration-specifiers)


State 46

   11 declaration-specifier: type-specifier .

    $default  reduce using rule 11 (declaration-specifier)


State 47

    7 declaration: declaration-specifiers init-declarator-list . SEMI
   61 init-declarator-list: init-declarator-list . COMMA init-declarator

    SEMI   shift, and go to state 64
    COMMA  shift, and go to state 65


State 48

   62 init-declarator-list: init-declarator .

    $default  reduce using rule 62 (init-declarator-list)


State 49

   63 init-declarator: declarator . ASSIGN initializer
   64                | declarator .

    ASSIGN  shift, and go to state 66

    $default  reduce using rule 64 (init-declarator)


State 50

   65 declarator: pointer . direct-declarator
   67 pointer: pointer . STAR type-qualifier-list-opt

    LPAR  shift, and go to state 41
    STAR  shift, and go to state 67
    ID    shift, and go to state 59

    direct-declarator  go to state 68


State 51

   66 declarator: direct-declarator .
   71 direct-declarator: direct-declarator . LB type-qualifier-list-opt expr RB
   72                  | direct-declarator . LB type-qualifier-list-opt RB
   73                  | direct-declarator . LB type-qualifier-list-opt STAR RB
   74                  | direct-declarator . LPAR parameter-type-list RPAR

    LPAR  shift, and go to state 69
    LB    shift, and go to state 70

    $default  reduce using rule 66 (declarator)


State 52

   88 function-definition: type-specifier ID . LPAR param-list RPAR compound-stmt

    LPAR  shift, and go to state 71


State 53

   35 struct-or-union-spec: struct-or-union LCB . struct-declaration-list RCB

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    ID        shift, and go to state 25

    type-specifier            go to state 72
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    struct-declaration-list   go to state 73
    struct-declaration        go to state 74
    specifier-qualifier-list  go to state 75
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 76


State 54

   33 struct-or-union-spec: struct-or-union ID .
   34                     | struct-or-union ID . LCB struct-declaration-list RCB

    LCB  shift, and go to state 77

    $default  reduce using rule 33 (struct-or-union-spec)


State 55

   55 enumerator: ID . ASSIGN expr
   56           | ID .

    ASSIGN  shift, and go to state 78

    $default  reduce using rule 56 (enumerator)


State 56

   50 enum-specifier: ENUM LCB enumerator-list . traling-comma RCB
   53 enumerator-list: enumerator-list . COMMA enumerator

    COMMA  shift, and go to state 79

    $default  reduce using rule 52 (traling-comma)

    traling-comma  go to state 80


State 57

   54 enumerator-list: enumerator .

    $default  reduce using rule 54 (enumerator-list)


State 58

   49 enum-specifier: ENUM ID LCB . enumerator-list traling-comma RCB

    ID  shift, and go to state 55

    enumerator-list  go to state 81
    enumerator       go to state 57


State 59

   69 direct-declarator: ID .

    $default  reduce using rule 69 (direct-declarator)


State 60

   70 direct-declarator: LPAR declarator . RPAR

    RPAR  shift, and go to state 82


State 61

   76 type-qualifier-list: type-qualifier .

    $default  reduce using rule 76 (type-qualifier-list)


State 62

   75 type-qualifier-list: type-qualifier-list . type-qualifier
   77 type-qualifier-list-opt: type-qualifier-list .

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 77 (type-qualifier-list-opt)

    type-qualifier  go to state 83


State 63

   68 pointer: STAR type-qualifier-list-opt .

    $default  reduce using rule 68 (pointer)


State 64

    7 declaration: declaration-specifiers init-declarator-list SEMI .

    $default  reduce using rule 7 (declaration)


State 65

   61 init-declarator-list: init-declarator-list COMMA . init-declarator

    LPAR  shift, and go to state 41
    STAR  shift, and go to state 43
    ID    shift, and go to state 59

    init-declarator    go to state 84
    declarator         go to state 49
    pointer            go to state 50
    direct-declarator  go to state 51


State 66

   63 init-declarator: declarator ASSIGN . initializer

    LPAR      shift, and go to state 85
    LCB       shift, and go to state 86
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    initializer      go to state 93
    array-init-expr  go to state 94
    expr             go to state 95
    function-call    go to state 96


State 67

   67 pointer: pointer STAR . type-qualifier-list-opt

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 78 (type-qualifier-list-opt)

    type-qualifier           go to state 61
    type-qualifier-list      go to state 62
    type-qualifier-list-opt  go to state 97


State 68

   65 declarator: pointer direct-declarator .
   71 direct-declarator: direct-declarator . LB type-qualifier-list-opt expr RB
   72                  | direct-declarator . LB type-qualifier-list-opt RB
   73                  | direct-declarator . LB type-qualifier-list-opt STAR RB
   74                  | direct-declarator . LPAR parameter-type-list RPAR

    LPAR  shift, and go to state 69
    LB    shift, and go to state 70

    $default  reduce using rule 65 (declarator)


State 69

   74 direct-declarator: direct-declarator LPAR . parameter-type-list RPAR

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    ID        shift, and go to state 25

    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 46
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    parameter-type-list      go to state 99
    parameter-list           go to state 100
    parameter-declaration    go to state 101


State 70

   71 direct-declarator: direct-declarator LB . type-qualifier-list-opt expr RB
   72                  | direct-declarator LB . type-qualifier-list-opt RB
   73                  | direct-declarator LB . type-qualifier-list-opt STAR RB

    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20

    $default  reduce using rule 78 (type-qualifier-list-opt)

    type-qualifier           go to state 61
    type-qualifier-list      go to state 62
    type-qualifier-list-opt  go to state 102


State 71

   88 function-definition: type-specifier ID LPAR . param-list RPAR compound-stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    ID        shift, and go to state 25

    $default  reduce using rule 91 (param-list)

    type-specifier        go to state 103
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    param-list            go to state 104
    param-spec            go to state 105


State 72

   41 specifier-qualifier-list: type-specifier .

    $default  reduce using rule 41 (specifier-qualifier-list)


State 73

   35 struct-or-union-spec: struct-or-union LCB struct-declaration-list . RCB
   37 struct-declaration-list: struct-declaration-list . struct-declaration

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    RCB       shift, and go to state 106
    ID        shift, and go to state 25

    type-specifier            go to state 72
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    struct-declaration        go to state 107
    specifier-qualifier-list  go to state 75
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 76


State 74

   36 struct-declaration-list: struct-declaration .

    $default  reduce using rule 36 (struct-declaration-list)


State 75

   38 struct-declaration: specifier-qualifier-list . struct-declarator-list SEMI specifier-qualifier-list SEMI
   39 specifier-qualifier-list: specifier-qualifier-list . type-specifier
   40                         | specifier-qualifier-list . type-qualifier

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 41
    STAR      shift, and go to state 43
    ID        shift, and go to state 44

    type-specifier          go to state 108
    typedef-name            go to state 32
    struct-or-union-spec    go to state 33
    struct-declarator-list  go to state 109
    struct-declarator       go to state 110
    struct-or-union         go to state 34
    enum-specifier          go to state 35
    type-qualifier          go to state 111
    declarator              go to state 112
    pointer                 go to state 50
    direct-declarator       go to state 51


State 76

   42 specifier-qualifier-list: type-qualifier .

    $default  reduce using rule 42 (specifier-qualifier-list)


State 77

   34 struct-or-union-spec: struct-or-union ID LCB . struct-declaration-list RCB

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    ID        shift, and go to state 25

    type-specifier            go to state 72
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    struct-declaration-list   go to state 113
    struct-declaration        go to state 74
    specifier-qualifier-list  go to state 75
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 76


State 78

   55 enumerator: ID ASSIGN . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 114
    function-call  go to state 96


State 79

   51 traling-comma: COMMA .
   53 enumerator-list: enumerator-list COMMA . enumerator

    ID  shift, and go to state 55

    $default  reduce using rule 51 (traling-comma)

    enumerator  go to state 115


State 80

   50 enum-specifier: ENUM LCB enumerator-list traling-comma . RCB

    RCB  shift, and go to state 116


State 81

   49 enum-specifier: ENUM ID LCB enumerator-list . traling-comma RCB
   53 enumerator-list: enumerator-list . COMMA enumerator

    COMMA  shift, and go to state 79

    $default  reduce using rule 52 (traling-comma)

    traling-comma  go to state 117


State 82

   70 direct-declarator: LPAR declarator RPAR .

    $default  reduce using rule 70 (direct-declarator)


State 83

   75 type-qualifier-list: type-qualifier-list type-qualifier .

    $default  reduce using rule 75 (type-qualifier-list)


State 84

   61 init-declarator-list: init-declarator-list COMMA init-declarator .

    $default  reduce using rule 61 (init-declarator-list)


State 85

  146 expr: LPAR . expr RPAR

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 118
    function-call  go to state 96


State 86

   87 array-init-expr: LCB . expr-list RCB

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    $default  reduce using rule 157 (expr-list)

    expr           go to state 119
    function-call  go to state 96
    expr-list      go to state 120


State 87

  143 expr: MINUS . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 121
    function-call  go to state 96


State 88

  149 expr: STAR . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 122
    function-call  go to state 96


State 89

  150 expr: INT_VAL .

    $default  reduce using rule 150 (expr)


State 90

  151 expr: REAL_VAL .

    $default  reduce using rule 151 (expr)


State 91

  153 expr: ID .

    $default  reduce using rule 153 (expr)


State 92

  152 expr: STR_VAL .

    $default  reduce using rule 152 (expr)


State 93

   63 init-declarator: declarator ASSIGN initializer .

    $default  reduce using rule 63 (init-declarator)


State 94

   86 initializer: array-init-expr .

    $default  reduce using rule 86 (initializer)


State 95

   85 initializer: expr .
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 85 (initializer)


State 96

  147 expr: function-call .

    $default  reduce using rule 147 (expr)


State 97

   67 pointer: pointer STAR type-qualifier-list-opt .

    $default  reduce using rule 67 (pointer)


State 98

    8 declaration-specifiers: declaration-specifiers . declaration-specifier
   82 parameter-declaration: declaration-specifiers . declarator
   83                      | declaration-specifiers . abstract-declarator-opt

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    LPAR      shift, and go to state 41
    STAR      shift, and go to state 43
    ID        shift, and go to state 44

    $default  reduce using rule 84 (abstract-declarator-opt)

    declaration-specifier    go to state 45
    storage-class-specifier  go to state 30
    type-specifier           go to state 46
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    declarator               go to state 136
    pointer                  go to state 50
    direct-declarator        go to state 51
    abstract-declarator-opt  go to state 137


State 99

   74 direct-declarator: direct-declarator LPAR parameter-type-list . RPAR

    RPAR  shift, and go to state 138


State 100

   79 parameter-type-list: parameter-list .
   81 parameter-list: parameter-list . COMMA parameter-declaration

    COMMA  shift, and go to state 139

    $default  reduce using rule 79 (parameter-type-list)


State 101

   80 parameter-list: parameter-declaration .

    $default  reduce using rule 80 (parameter-list)


State 102

   71 direct-declarator: direct-declarator LB type-qualifier-list-opt . expr RB
   72                  | direct-declarator LB type-qualifier-list-opt . RB
   73                  | direct-declarator LB type-qualifier-list-opt . STAR RB

    LPAR      shift, and go to state 85
    RB        shift, and go to state 140
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 141
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 142
    function-call  go to state 96


State 103

   92 param-spec: type-specifier .
   93           | type-specifier . ID

    ID  shift, and go to state 143

    $default  reduce using rule 92 (param-spec)


State 104

   88 function-definition: type-specifier ID LPAR param-list . RPAR compound-stmt
   89 param-list: param-list . COMMA param-spec

    RPAR   shift, and go to state 144
    COMMA  shift, and go to state 145


State 105

   90 param-list: param-spec .

    $default  reduce using rule 90 (param-list)


State 106

   35 struct-or-union-spec: struct-or-union LCB struct-declaration-list RCB .

    $default  reduce using rule 35 (struct-or-union-spec)


State 107

   37 struct-declaration-list: struct-declaration-list struct-declaration .

    $default  reduce using rule 37 (struct-declaration-list)


State 108

   39 specifier-qualifier-list: specifier-qualifier-list type-specifier .

    $default  reduce using rule 39 (specifier-qualifier-list)


State 109

   38 struct-declaration: specifier-qualifier-list struct-declarator-list . SEMI specifier-qualifier-list SEMI
   44 struct-declarator-list: struct-declarator-list . COMMA struct-declarator

    SEMI   shift, and go to state 146
    COMMA  shift, and go to state 147


State 110

   43 struct-declarator-list: struct-declarator .

    $default  reduce using rule 43 (struct-declarator-list)


State 111

   40 specifier-qualifier-list: specifier-qualifier-list type-qualifier .

    $default  reduce using rule 40 (specifier-qualifier-list)


State 112

   45 struct-declarator: declarator .

    $default  reduce using rule 45 (struct-declarator)


State 113

   34 struct-or-union-spec: struct-or-union ID LCB struct-declaration-list . RCB
   37 struct-declaration-list: struct-declaration-list . struct-declaration

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    RCB       shift, and go to state 148
    ID        shift, and go to state 25

    type-specifier            go to state 72
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    struct-declaration        go to state 107
    specifier-qualifier-list  go to state 75
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 76


State 114

   55 enumerator: ID ASSIGN expr .
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 55 (enumerator)


State 115

   53 enumerator-list: enumerator-list COMMA enumerator .

    $default  reduce using rule 53 (enumerator-list)


State 116

   50 enum-specifier: ENUM LCB enumerator-list traling-comma RCB .

    $default  reduce using rule 50 (enum-specifier)


State 117

   49 enum-specifier: ENUM ID LCB enumerator-list traling-comma . RCB

    RCB  shift, and go to state 149


State 118

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  146     | LPAR expr . RPAR
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    RPAR        shift, and go to state 150
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 119

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR
  156 expr-list: expr .

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 156 (expr-list)


State 120

   87 array-init-expr: LCB expr-list . RCB
  155 expr-list: expr-list . COMMA expr

    RCB    shift, and go to state 151
    COMMA  shift, and go to state 152


State 121

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  143     | MINUS expr .
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR  shift, and go to state 128
    LB    shift, and go to state 129

    $default  reduce using rule 143 (expr)


State 122

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  149     | STAR expr .
  154 function-call: expr . LPAR expr-list RPAR

    LPAR  shift, and go to state 128
    LB    shift, and go to state 129

    $default  reduce using rule 149 (expr)


State 123

  138 expr: expr EQ . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 153
    function-call  go to state 96


State 124

  134 expr: expr LT . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 154
    function-call  go to state 96


State 125

  135 expr: expr BT . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 155
    function-call  go to state 96


State 126

  136 expr: expr LET . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 156
    function-call  go to state 96


State 127

  137 expr: expr BET . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 157
    function-call  go to state 96


State 128

  154 function-call: expr LPAR . expr-list RPAR

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    $default  reduce using rule 157 (expr-list)

    expr           go to state 119
    function-call  go to state 96
    expr-list      go to state 158


State 129

  148 expr: expr LB . expr RB

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 159
    function-call  go to state 96


State 130

  139 expr: expr PLUS . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 160
    function-call  go to state 96


State 131

  140 expr: expr MINUS . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 161
    function-call  go to state 96


State 132

  141 expr: expr STAR . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 162
    function-call  go to state 96


State 133

  142 expr: expr OVER . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 163
    function-call  go to state 96


State 134

  144 expr: expr PLUSPLUS .

    $default  reduce using rule 144 (expr)


State 135

  145 expr: expr MINUSMINUS .

    $default  reduce using rule 145 (expr)


State 136

   82 parameter-declaration: declaration-specifiers declarator .

    $default  reduce using rule 82 (parameter-declaration)


State 137

   83 parameter-declaration: declaration-specifiers abstract-declarator-opt .

    $default  reduce using rule 83 (parameter-declaration)


State 138

   74 direct-declarator: direct-declarator LPAR parameter-type-list RPAR .

    $default  reduce using rule 74 (direct-declarator)


State 139

   81 parameter-list: parameter-list COMMA . parameter-declaration

    TYPEDEF   shift, and go to state 4
    EXTERN    shift, and go to state 5
    STATIC    shift, and go to state 6
    AUTO      shift, and go to state 7
    REGISTER  shift, and go to state 8
    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 21
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    ID        shift, and go to state 25

    declaration-specifiers   go to state 98
    declaration-specifier    go to state 29
    storage-class-specifier  go to state 30
    type-specifier           go to state 46
    typedef-name             go to state 32
    struct-or-union-spec     go to state 33
    struct-or-union          go to state 34
    enum-specifier           go to state 35
    type-qualifier           go to state 36
    function-specifier       go to state 37
    parameter-declaration    go to state 164


State 140

   72 direct-declarator: direct-declarator LB type-qualifier-list-opt RB .

    $default  reduce using rule 72 (direct-declarator)


State 141

   73 direct-declarator: direct-declarator LB type-qualifier-list-opt STAR . RB
  149 expr: STAR . expr

    LPAR      shift, and go to state 85
    RB        shift, and go to state 165
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 122
    function-call  go to state 96


State 142

   71 direct-declarator: direct-declarator LB type-qualifier-list-opt expr . RB
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    RB          shift, and go to state 166
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 143

   93 param-spec: type-specifier ID .

    $default  reduce using rule 93 (param-spec)


State 144

   88 function-definition: type-specifier ID LPAR param-list RPAR . compound-stmt

    LCB  shift, and go to state 167

    compound-stmt  go to state 168


State 145

   89 param-list: param-list COMMA . param-spec

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    ID        shift, and go to state 25

    type-specifier        go to state 103
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    param-spec            go to state 169


State 146

   38 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI . specifier-qualifier-list SEMI

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    ID        shift, and go to state 25

    type-specifier            go to state 72
    typedef-name              go to state 32
    struct-or-union-spec      go to state 33
    specifier-qualifier-list  go to state 170
    struct-or-union           go to state 34
    enum-specifier            go to state 35
    type-qualifier            go to state 76


State 147

   44 struct-declarator-list: struct-declarator-list COMMA . struct-declarator

    LPAR  shift, and go to state 41
    STAR  shift, and go to state 43
    ID    shift, and go to state 59

    struct-declarator  go to state 171
    declarator         go to state 112
    pointer            go to state 50
    direct-declarator  go to state 51


State 148

   34 struct-or-union-spec: struct-or-union ID LCB struct-declaration-list RCB .

    $default  reduce using rule 34 (struct-or-union-spec)


State 149

   49 enum-specifier: ENUM ID LCB enumerator-list traling-comma RCB .

    $default  reduce using rule 49 (enum-specifier)


State 150

  146 expr: LPAR expr RPAR .

    $default  reduce using rule 146 (expr)


State 151

   87 array-init-expr: LCB expr-list RCB .

    $default  reduce using rule 87 (array-init-expr)


State 152

  155 expr-list: expr-list COMMA . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 172
    function-call  go to state 96


State 153

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  138     | expr EQ expr .
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 138 (expr)


State 154

  134 expr: expr . LT expr
  134     | expr LT expr .
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 134 (expr)


State 155

  134 expr: expr . LT expr
  135     | expr . BT expr
  135     | expr BT expr .
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 135 (expr)


State 156

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  136     | expr LET expr .
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 136 (expr)


State 157

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  137     | expr BET expr .
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 137 (expr)


State 158

  154 function-call: expr LPAR expr-list . RPAR
  155 expr-list: expr-list . COMMA expr

    RPAR   shift, and go to state 173
    COMMA  shift, and go to state 152


State 159

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  148     | expr LB expr . RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    RB          shift, and go to state 174
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 160

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  139     | expr PLUS expr .
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 139 (expr)


State 161

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  140     | expr MINUS expr .
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 140 (expr)


State 162

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  141     | expr STAR expr .
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 141 (expr)


State 163

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  142     | expr OVER expr .
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 142 (expr)


State 164

   81 parameter-list: parameter-list COMMA parameter-declaration .

    $default  reduce using rule 81 (parameter-list)


State 165

   73 direct-declarator: direct-declarator LB type-qualifier-list-opt STAR RB .

    $default  reduce using rule 73 (direct-declarator)


State 166

   71 direct-declarator: direct-declarator LB type-qualifier-list-opt expr RB .

    $default  reduce using rule 71 (direct-declarator)


State 167

  110 compound-stmt: LCB . stmt-list RCB

    $default  reduce using rule 112 (stmt-list)

    stmt-list  go to state 175


State 168

   88 function-definition: type-specifier ID LPAR param-list RPAR compound-stmt .

    $default  reduce using rule 88 (function-definition)


State 169

   89 param-list: param-list COMMA param-spec .

    $default  reduce using rule 89 (param-list)


State 170

   38 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI specifier-qualifier-list . SEMI
   39 specifier-qualifier-list: specifier-qualifier-list . type-specifier
   40                         | specifier-qualifier-list . type-qualifier

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    CONST     shift, and go to state 18
    RESTRICT  shift, and go to state 19
    VOLATILE  shift, and go to state 20
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    SEMI      shift, and go to state 176
    ID        shift, and go to state 25

    type-specifier        go to state 108
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    type-qualifier        go to state 111


State 171

   44 struct-declarator-list: struct-declarator-list COMMA struct-declarator .

    $default  reduce using rule 44 (struct-declarator-list)


State 172

  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR
  155 expr-list: expr-list COMMA expr .

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 155 (expr-list)


State 173

  154 function-call: expr LPAR expr-list RPAR .

    $default  reduce using rule 154 (function-call)


State 174

  148 expr: expr LB expr RB .

    $default  reduce using rule 148 (expr)


State 175

  110 compound-stmt: LCB stmt-list . RCB
  111 stmt-list: stmt-list . stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    RCB       shift, and go to state 188
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 191
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 176

   38 struct-declaration: specifier-qualifier-list struct-declarator-list SEMI specifier-qualifier-list SEMI .

    $default  reduce using rule 38 (struct-declaration)


State 177

  125 break-stmt: BREAK . SEMI

    SEMI  shift, and go to state 208


State 178

  126 case-stmt: CASE . expr COLON stmt

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 209
    function-call  go to state 96


State 179

  124 continue-stmt: CONTINUE . SEMI

    SEMI  shift, and go to state 210


State 180

  127 default-stmt: DEFAULT . COLON stmt

    COLON  shift, and go to state 211


State 181

  129 do-while-stmt: DO . stmt WHILE LPAR expr RPAR SEMI

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 212
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 182

  130 for-stmt: FOR . LPAR stmt stmt expr RPAR stmt
  131         | FOR . LPAR stmt stmt RPAR stmt

    LPAR  shift, and go to state 213


State 183

  119 if-stmt: IF . LPAR expr RPAR stmt
  120        | IF . LPAR expr RPAR stmt ELSE stmt

    LPAR  shift, and go to state 214


State 184

  121 return-stmt: RETURN . return-value SEMI

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    $default  reduce using rule 123 (return-value)

    return-value   go to state 215
    expr           go to state 216
    function-call  go to state 96


State 185

  132 switch-stmt: SWITCH . LPAR expr RPAR stmt

    LPAR  shift, and go to state 217


State 186

  128 while-stmt: WHILE . LPAR expr RPAR stmt

    LPAR  shift, and go to state 218


State 187

  109 empty-stmt: SEMI .

    $default  reduce using rule 109 (empty-stmt)


State 188

  110 compound-stmt: LCB stmt-list RCB .

    $default  reduce using rule 110 (compound-stmt)


State 189

   28 type-specifier: ID .
   32 typedef-name: ID .
  153 expr: ID .

    ID        reduce using rule 28 (type-specifier)
    ID        [reduce using rule 32 (typedef-name)]
    $default  reduce using rule 153 (expr)


State 190

  113 var-declaration-stmt: type-specifier . var-list SEMI

    ID  shift, and go to state 219

    var-list  go to state 220
    var-item  go to state 221


State 191

  111 stmt-list: stmt-list stmt .

    $default  reduce using rule 111 (stmt-list)


State 192

   94 stmt: empty-stmt .

    $default  reduce using rule 94 (stmt)


State 193

   95 stmt: compound-stmt .

    $default  reduce using rule 95 (stmt)


State 194

   96 stmt: var-declaration-stmt .

    $default  reduce using rule 96 (stmt)


State 195

   97 stmt: assign-stmt .

    $default  reduce using rule 97 (stmt)


State 196

   98 stmt: if-stmt .

    $default  reduce using rule 98 (stmt)


State 197

   99 stmt: return-stmt .

    $default  reduce using rule 99 (stmt)


State 198

  103 stmt: continue-stmt .

    $default  reduce using rule 103 (stmt)


State 199

  100 stmt: break-stmt .

    $default  reduce using rule 100 (stmt)


State 200

  101 stmt: case-stmt .

    $default  reduce using rule 101 (stmt)


State 201

  102 stmt: default-stmt .

    $default  reduce using rule 102 (stmt)


State 202

  104 stmt: while-stmt .

    $default  reduce using rule 104 (stmt)


State 203

  105 stmt: do-while-stmt .

    $default  reduce using rule 105 (stmt)


State 204

  106 stmt: for-stmt .

    $default  reduce using rule 106 (stmt)


State 205

  107 stmt: switch-stmt .

    $default  reduce using rule 107 (stmt)


State 206

  108 stmt: expr-stmt .

    $default  reduce using rule 108 (stmt)


State 207

  118 assign-stmt: expr . ASSIGN expr SEMI
  133 expr-stmt: expr . SEMI
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    ASSIGN      shift, and go to state 222
    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    SEMI        shift, and go to state 223
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 208

  125 break-stmt: BREAK SEMI .

    $default  reduce using rule 125 (break-stmt)


State 209

  126 case-stmt: CASE expr . COLON stmt
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    COLON       shift, and go to state 224
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 210

  124 continue-stmt: CONTINUE SEMI .

    $default  reduce using rule 124 (continue-stmt)


State 211

  127 default-stmt: DEFAULT COLON . stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 225
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 212

  129 do-while-stmt: DO stmt . WHILE LPAR expr RPAR SEMI

    WHILE  shift, and go to state 226


State 213

  130 for-stmt: FOR LPAR . stmt stmt expr RPAR stmt
  131         | FOR LPAR . stmt stmt RPAR stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 227
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 214

  119 if-stmt: IF LPAR . expr RPAR stmt
  120        | IF LPAR . expr RPAR stmt ELSE stmt

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 228
    function-call  go to state 96


State 215

  121 return-stmt: RETURN return-value . SEMI

    SEMI  shift, and go to state 229


State 216

  122 return-value: expr .
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 122 (return-value)


State 217

  132 switch-stmt: SWITCH LPAR . expr RPAR stmt

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 230
    function-call  go to state 96


State 218

  128 while-stmt: WHILE LPAR . expr RPAR stmt

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 231
    function-call  go to state 96


State 219

  116 var-item: ID .
  117         | ID . ASSIGN expr

    ASSIGN  shift, and go to state 232

    $default  reduce using rule 116 (var-item)


State 220

  113 var-declaration-stmt: type-specifier var-list . SEMI
  114 var-list: var-list . COMMA var-item

    SEMI   shift, and go to state 233
    COMMA  shift, and go to state 234


State 221

  115 var-list: var-item .

    $default  reduce using rule 115 (var-list)


State 222

  118 assign-stmt: expr ASSIGN . expr SEMI

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 235
    function-call  go to state 96


State 223

  133 expr-stmt: expr SEMI .

    $default  reduce using rule 133 (expr-stmt)


State 224

  126 case-stmt: CASE expr COLON . stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 236
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 225

  127 default-stmt: DEFAULT COLON stmt .

    $default  reduce using rule 127 (default-stmt)


State 226

  129 do-while-stmt: DO stmt WHILE . LPAR expr RPAR SEMI

    LPAR  shift, and go to state 237


State 227

  130 for-stmt: FOR LPAR stmt . stmt expr RPAR stmt
  131         | FOR LPAR stmt . stmt RPAR stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 238
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 228

  119 if-stmt: IF LPAR expr . RPAR stmt
  120        | IF LPAR expr . RPAR stmt ELSE stmt
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    RPAR        shift, and go to state 239
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 229

  121 return-stmt: RETURN return-value SEMI .

    $default  reduce using rule 121 (return-stmt)


State 230

  132 switch-stmt: SWITCH LPAR expr . RPAR stmt
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    RPAR        shift, and go to state 240
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 231

  128 while-stmt: WHILE LPAR expr . RPAR stmt
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    RPAR        shift, and go to state 241
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 232

  117 var-item: ID ASSIGN . expr

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 242
    function-call  go to state 96


State 233

  113 var-declaration-stmt: type-specifier var-list SEMI .

    $default  reduce using rule 113 (var-declaration-stmt)


State 234

  114 var-list: var-list COMMA . var-item

    ID  shift, and go to state 219

    var-item  go to state 243


State 235

  118 assign-stmt: expr ASSIGN expr . SEMI
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    SEMI        shift, and go to state 244
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 236

  126 case-stmt: CASE expr COLON stmt .

    $default  reduce using rule 126 (case-stmt)


State 237

  129 do-while-stmt: DO stmt WHILE LPAR . expr RPAR SEMI

    LPAR      shift, and go to state 85
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 245
    function-call  go to state 96


State 238

  130 for-stmt: FOR LPAR stmt stmt . expr RPAR stmt
  131         | FOR LPAR stmt stmt . RPAR stmt

    LPAR      shift, and go to state 85
    RPAR      shift, and go to state 246
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 91
    STR_VAL   shift, and go to state 92

    expr           go to state 247
    function-call  go to state 96


State 239

  119 if-stmt: IF LPAR expr RPAR . stmt
  120        | IF LPAR expr RPAR . stmt ELSE stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 248
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 240

  132 switch-stmt: SWITCH LPAR expr RPAR . stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 249
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 241

  128 while-stmt: WHILE LPAR expr RPAR . stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 250
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 242

  117 var-item: ID ASSIGN expr .
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135

    $default  reduce using rule 117 (var-item)


State 243

  114 var-list: var-list COMMA var-item .

    $default  reduce using rule 114 (var-list)


State 244

  118 assign-stmt: expr ASSIGN expr SEMI .

    $default  reduce using rule 118 (assign-stmt)


State 245

  129 do-while-stmt: DO stmt WHILE LPAR expr . RPAR SEMI
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    RPAR        shift, and go to state 251
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 246

  131 for-stmt: FOR LPAR stmt stmt RPAR . stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 252
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 247

  130 for-stmt: FOR LPAR stmt stmt expr . RPAR stmt
  134 expr: expr . LT expr
  135     | expr . BT expr
  136     | expr . LET expr
  137     | expr . BET expr
  138     | expr . EQ expr
  139     | expr . PLUS expr
  140     | expr . MINUS expr
  141     | expr . STAR expr
  142     | expr . OVER expr
  144     | expr . PLUSPLUS
  145     | expr . MINUSMINUS
  148     | expr . LB expr RB
  154 function-call: expr . LPAR expr-list RPAR

    EQ          shift, and go to state 123
    LT          shift, and go to state 124
    BT          shift, and go to state 125
    LET         shift, and go to state 126
    BET         shift, and go to state 127
    LPAR        shift, and go to state 128
    RPAR        shift, and go to state 253
    LB          shift, and go to state 129
    PLUS        shift, and go to state 130
    MINUS       shift, and go to state 131
    STAR        shift, and go to state 132
    OVER        shift, and go to state 133
    PLUSPLUS    shift, and go to state 134
    MINUSMINUS  shift, and go to state 135


State 248

  119 if-stmt: IF LPAR expr RPAR stmt .
  120        | IF LPAR expr RPAR stmt . ELSE stmt

    ELSE  shift, and go to state 254

    $default  reduce using rule 119 (if-stmt)


State 249

  132 switch-stmt: SWITCH LPAR expr RPAR stmt .

    $default  reduce using rule 132 (switch-stmt)


State 250

  128 while-stmt: WHILE LPAR expr RPAR stmt .

    $default  reduce using rule 128 (while-stmt)


State 251

  129 do-while-stmt: DO stmt WHILE LPAR expr RPAR . SEMI

    SEMI  shift, and go to state 255


State 252

  131 for-stmt: FOR LPAR stmt stmt RPAR stmt .

    $default  reduce using rule 131 (for-stmt)


State 253

  130 for-stmt: FOR LPAR stmt stmt expr RPAR . stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 256
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 254

  120 if-stmt: IF LPAR expr RPAR stmt ELSE . stmt

    VOID      shift, and go to state 9
    CHAR      shift, and go to state 10
    SHORT     shift, and go to state 11
    INT       shift, and go to state 12
    LONG      shift, and go to state 13
    FLOAT     shift, and go to state 14
    DOUBLE    shift, and go to state 15
    SIGNED    shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    ENUM      shift, and go to state 22
    STRUCT    shift, and go to state 23
    UNION     shift, and go to state 24
    BREAK     shift, and go to state 177
    CASE      shift, and go to state 178
    CONTINUE  shift, and go to state 179
    DEFAULT   shift, and go to state 180
    DO        shift, and go to state 181
    FOR       shift, and go to state 182
    IF        shift, and go to state 183
    RETURN    shift, and go to state 184
    SWITCH    shift, and go to state 185
    WHILE     shift, and go to state 186
    LPAR      shift, and go to state 85
    SEMI      shift, and go to state 187
    LCB       shift, and go to state 167
    MINUS     shift, and go to state 87
    STAR      shift, and go to state 88
    INT_VAL   shift, and go to state 89
    REAL_VAL  shift, and go to state 90
    ID        shift, and go to state 189
    STR_VAL   shift, and go to state 92

    type-specifier        go to state 190
    typedef-name          go to state 32
    struct-or-union-spec  go to state 33
    struct-or-union       go to state 34
    enum-specifier        go to state 35
    stmt                  go to state 257
    empty-stmt            go to state 192
    compound-stmt         go to state 193
    var-declaration-stmt  go to state 194
    assign-stmt           go to state 195
    if-stmt               go to state 196
    return-stmt           go to state 197
    continue-stmt         go to state 198
    break-stmt            go to state 199
    case-stmt             go to state 200
    default-stmt          go to state 201
    while-stmt            go to state 202
    do-while-stmt         go to state 203
    for-stmt              go to state 204
    switch-stmt           go to state 205
    expr-stmt             go to state 206
    expr                  go to state 207
    function-call         go to state 96


State 255

  129 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI .

    $default  reduce using rule 129 (do-while-stmt)


State 256

  130 for-stmt: FOR LPAR stmt stmt expr RPAR stmt .

    $default  reduce using rule 130 (for-stmt)


State 257

  120 if-stmt: IF LPAR expr RPAR stmt ELSE stmt .

    $default  reduce using rule 120 (if-stmt)
