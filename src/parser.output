Terminais sem uso na gramática

   AUTO
   CONST
   VOLATILE
   STATIC
   EXTERN
   LONG
   REGISTER
   SIGNED
   UNSIGNED
   TYPEDEF
   SIZEOF
   ENUM
   STRUCT
   UNION
   GOTO


Gramática

    0 $accept: all $end

    1 all: program

    2 program: program program-part
    3        | %empty

    4 program-part: function-definition
    5             | declaration

    6 declaration: function-declaration
    7            | var-declaration-stmt

    8 function-declaration: type-spec ID LPAR param-list RPAR SEMI

    9 function-definition: type-spec ID LPAR param-list RPAR compound-stmt

   10 param-list: param-list COMMA param-spec
   11           | param-spec
   12           | %empty

   13 param-spec: type-spec
   14           | type-spec ID

   15 type-spec: VOID
   16          | CHAR
   17          | SHORT
   18          | INT
   19          | FLOAT
   20          | DOUBLE
   21          | ID

   22 stmt: empty-stmt
   23     | compound-stmt
   24     | var-declaration-stmt
   25     | assign-stmt
   26     | if-stmt
   27     | return-stmt
   28     | break-stmt
   29     | case-stmt
   30     | default-stmt
   31     | continue-stmt
   32     | while-stmt
   33     | do-while-stmt
   34     | for-stmt
   35     | switch-stmt
   36     | expr-stmt

   37 empty-stmt: SEMI

   38 compound-stmt: LCB stmt-list RCB

   39 stmt-list: stmt-list stmt
   40          | %empty

   41 var-declaration-stmt: type-spec var-list SEMI

   42 var-list: var-list COMMA var-part
   43         | var-part

   44 var-part: ID
   45         | ID ASSIGN expr
   46         | array-stmt

   47 array-stmt: array
   48           | array ASSIGN LCB arg-list RCB

   49 array: ID LB expr RB
   50      | ID LB RB

   51 assign-stmt: expr ASSIGN expr SEMI

   52 if-stmt: IF LPAR expr RPAR stmt
   53        | IF LPAR expr RPAR stmt ELSE stmt

   54 return-stmt: RETURN return-value SEMI

   55 return-value: expr
   56             | %empty

   57 continue-stmt: CONTINUE SEMI

   58 break-stmt: BREAK SEMI

   59 case-stmt: CASE expr COLON stmt

   60 default-stmt: DEFAULT COLON stmt

   61 while-stmt: WHILE LPAR expr RPAR stmt

   62 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI

   63 for-stmt: FOR LPAR stmt stmt expr RPAR stmt
   64         | FOR LPAR stmt stmt RPAR stmt

   65 switch-stmt: SWITCH LPAR expr RPAR stmt

   66 expr-stmt: expr SEMI

   67 expr: expr LT expr
   68     | expr BT expr
   69     | expr LET expr
   70     | expr BET expr
   71     | expr EQ expr
   72     | expr PLUS expr
   73     | expr MINUS expr
   74     | expr STAR expr
   75     | expr OVER expr
   76     | MINUS expr
   77     | expr PLUSPLUS
   78     | expr MINUSMINUS
   79     | LPAR expr RPAR
   80     | function-call
   81     | INT_VAL
   82     | REAL_VAL
   83     | STR_VAL
   84     | ID

   85 function-call: expr LPAR arg-list RPAR

   86 arg-list: arg-list COMMA expr
   87         | expr
   88         | %empty


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
AUTO (258)
CONST (259)
VOLATILE (260)
STATIC (261)
EXTERN (262)
LONG (263)
REGISTER (264)
SIGNED (265)
UNSIGNED (266)
VOID (267) 15
CHAR (268) 16
SHORT (269) 17
INT (270) 18
FLOAT (271) 19
DOUBLE (272) 20
TYPEDEF (273)
SIZEOF (274)
ENUM (275)
STRUCT (276)
UNION (277)
BREAK (278) 58
CASE (279) 59
CONTINUE (280) 57
DEFAULT (281) 60
DO (282) 62
ELSE (283) 53
FOR (284) 63 64
GOTO (285)
IF (286) 52 53
RETURN (287) 54
SWITCH (288) 65
WHILE (289) 61 62
ASSIGN (290) 45 48 51
EQ (291) 71
LT (292) 67
BT (293) 68
LET (294) 69
BET (295) 70
LPAR (296) 8 9 52 53 61 62 63 64 65 79 85
RPAR (297) 8 9 52 53 61 62 63 64 65 79 85
SEMI (298) 8 37 41 51 54 57 58 62 66
LCB (299) 38 48
RCB (300) 38 48
COLON (301) 59 60
LB (302) 49 50
RB (303) 49 50
PLUS (304) 72
MINUS (305) 73 76
STAR (306) 74
OVER (307) 75
PLUSPLUS (308) 77
MINUSMINUS (309) 78
INT_VAL (310) 81
REAL_VAL (311) 82
ID (312) 8 9 14 21 44 45 49 50 84
STR_VAL (313) 83
COMMA (314) 10 42 86
UMINUS (315)


Não terminais com as regras onde eles aparecem

$accept (61)
    à esquerda: 0
all (62)
    à esquerda: 1, à direita: 0
program (63)
    à esquerda: 2 3, à direita: 1 2
program-part (64)
    à esquerda: 4 5, à direita: 2
declaration (65)
    à esquerda: 6 7, à direita: 5
function-declaration (66)
    à esquerda: 8, à direita: 6
function-definition (67)
    à esquerda: 9, à direita: 4
param-list (68)
    à esquerda: 10 11 12, à direita: 8 9 10
param-spec (69)
    à esquerda: 13 14, à direita: 10 11
type-spec (70)
    à esquerda: 15 16 17 18 19 20 21, à direita: 8 9 13 14 41
stmt (71)
    à esquerda: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36, à direita:
    39 52 53 59 60 61 62 63 64 65
empty-stmt (72)
    à esquerda: 37, à direita: 22
compound-stmt (73)
    à esquerda: 38, à direita: 9 23
stmt-list (74)
    à esquerda: 39 40, à direita: 38 39
var-declaration-stmt (75)
    à esquerda: 41, à direita: 7 24
var-list (76)
    à esquerda: 42 43, à direita: 41 42
var-part (77)
    à esquerda: 44 45 46, à direita: 42 43
array-stmt (78)
    à esquerda: 47 48, à direita: 46
array (79)
    à esquerda: 49 50, à direita: 47 48
assign-stmt (80)
    à esquerda: 51, à direita: 25
if-stmt (81)
    à esquerda: 52 53, à direita: 26
return-stmt (82)
    à esquerda: 54, à direita: 27
return-value (83)
    à esquerda: 55 56, à direita: 54
continue-stmt (84)
    à esquerda: 57, à direita: 31
break-stmt (85)
    à esquerda: 58, à direita: 28
case-stmt (86)
    à esquerda: 59, à direita: 29
default-stmt (87)
    à esquerda: 60, à direita: 30
while-stmt (88)
    à esquerda: 61, à direita: 32
do-while-stmt (89)
    à esquerda: 62, à direita: 33
for-stmt (90)
    à esquerda: 63 64, à direita: 34
switch-stmt (91)
    à esquerda: 65, à direita: 35
expr-stmt (92)
    à esquerda: 66, à direita: 36
expr (93)
    à esquerda: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84, à direita: 45 49 51 52 53 55 59 61 62 63 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79 85 86 87
function-call (94)
    à esquerda: 85, à direita: 80
arg-list (95)
    à esquerda: 86 87 88, à direita: 48 85 86


Estado 0

    0 $accept: . all $end

    $padrão  reduzir usando a regra 3 (program)

    all      ir ao estado 1
    program  ir ao estado 2


Estado 1

    0 $accept: all . $end

    $end  deslocar, e ir ao estado 3


Estado 2

    1 all: program .
    2 program: program . program-part

    VOID    deslocar, e ir ao estado 4
    CHAR    deslocar, e ir ao estado 5
    SHORT   deslocar, e ir ao estado 6
    INT     deslocar, e ir ao estado 7
    FLOAT   deslocar, e ir ao estado 8
    DOUBLE  deslocar, e ir ao estado 9
    ID      deslocar, e ir ao estado 10

    $padrão  reduzir usando a regra 1 (all)

    program-part          ir ao estado 11
    declaration           ir ao estado 12
    function-declaration  ir ao estado 13
    function-definition   ir ao estado 14
    type-spec             ir ao estado 15
    var-declaration-stmt  ir ao estado 16


Estado 3

    0 $accept: all $end .

    $padrão  aceitar


Estado 4

   15 type-spec: VOID .

    $padrão  reduzir usando a regra 15 (type-spec)


Estado 5

   16 type-spec: CHAR .

    $padrão  reduzir usando a regra 16 (type-spec)


Estado 6

   17 type-spec: SHORT .

    $padrão  reduzir usando a regra 17 (type-spec)


Estado 7

   18 type-spec: INT .

    $padrão  reduzir usando a regra 18 (type-spec)


Estado 8

   19 type-spec: FLOAT .

    $padrão  reduzir usando a regra 19 (type-spec)


Estado 9

   20 type-spec: DOUBLE .

    $padrão  reduzir usando a regra 20 (type-spec)


Estado 10

   21 type-spec: ID .

    $padrão  reduzir usando a regra 21 (type-spec)


Estado 11

    2 program: program program-part .

    $padrão  reduzir usando a regra 2 (program)


Estado 12

    5 program-part: declaration .

    $padrão  reduzir usando a regra 5 (program-part)


Estado 13

    6 declaration: function-declaration .

    $padrão  reduzir usando a regra 6 (declaration)


Estado 14

    4 program-part: function-definition .

    $padrão  reduzir usando a regra 4 (program-part)


Estado 15

    8 function-declaration: type-spec . ID LPAR param-list RPAR SEMI
    9 function-definition: type-spec . ID LPAR param-list RPAR compound-stmt
   41 var-declaration-stmt: type-spec . var-list SEMI

    ID  deslocar, e ir ao estado 17

    var-list    ir ao estado 18
    var-part    ir ao estado 19
    array-stmt  ir ao estado 20
    array       ir ao estado 21


Estado 16

    7 declaration: var-declaration-stmt .

    $padrão  reduzir usando a regra 7 (declaration)


Estado 17

    8 function-declaration: type-spec ID . LPAR param-list RPAR SEMI
    9 function-definition: type-spec ID . LPAR param-list RPAR compound-stmt
   44 var-part: ID .
   45         | ID . ASSIGN expr
   49 array: ID . LB expr RB
   50      | ID . LB RB

    ASSIGN  deslocar, e ir ao estado 22
    LPAR    deslocar, e ir ao estado 23
    LB      deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 44 (var-part)


Estado 18

   41 var-declaration-stmt: type-spec var-list . SEMI
   42 var-list: var-list . COMMA var-part

    SEMI   deslocar, e ir ao estado 25
    COMMA  deslocar, e ir ao estado 26


Estado 19

   43 var-list: var-part .

    $padrão  reduzir usando a regra 43 (var-list)


Estado 20

   46 var-part: array-stmt .

    $padrão  reduzir usando a regra 46 (var-part)


Estado 21

   47 array-stmt: array .
   48           | array . ASSIGN LCB arg-list RCB

    ASSIGN  deslocar, e ir ao estado 27

    $padrão  reduzir usando a regra 47 (array-stmt)


Estado 22

   45 var-part: ID ASSIGN . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 34
    function-call  ir ao estado 35


Estado 23

    8 function-declaration: type-spec ID LPAR . param-list RPAR SEMI
    9 function-definition: type-spec ID LPAR . param-list RPAR compound-stmt

    VOID    deslocar, e ir ao estado 4
    CHAR    deslocar, e ir ao estado 5
    SHORT   deslocar, e ir ao estado 6
    INT     deslocar, e ir ao estado 7
    FLOAT   deslocar, e ir ao estado 8
    DOUBLE  deslocar, e ir ao estado 9
    ID      deslocar, e ir ao estado 10

    $padrão  reduzir usando a regra 12 (param-list)

    param-list  ir ao estado 36
    param-spec  ir ao estado 37
    type-spec   ir ao estado 38


Estado 24

   49 array: ID LB . expr RB
   50      | ID LB . RB

    LPAR      deslocar, e ir ao estado 28
    RB        deslocar, e ir ao estado 39
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 40
    function-call  ir ao estado 35


Estado 25

   41 var-declaration-stmt: type-spec var-list SEMI .

    $padrão  reduzir usando a regra 41 (var-declaration-stmt)


Estado 26

   42 var-list: var-list COMMA . var-part

    ID  deslocar, e ir ao estado 41

    var-part    ir ao estado 42
    array-stmt  ir ao estado 20
    array       ir ao estado 21


Estado 27

   48 array-stmt: array ASSIGN . LCB arg-list RCB

    LCB  deslocar, e ir ao estado 43


Estado 28

   79 expr: LPAR . expr RPAR

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 44
    function-call  ir ao estado 35


Estado 29

   76 expr: MINUS . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 45
    function-call  ir ao estado 35


Estado 30

   81 expr: INT_VAL .

    $padrão  reduzir usando a regra 81 (expr)


Estado 31

   82 expr: REAL_VAL .

    $padrão  reduzir usando a regra 82 (expr)


Estado 32

   84 expr: ID .

    $padrão  reduzir usando a regra 84 (expr)


Estado 33

   83 expr: STR_VAL .

    $padrão  reduzir usando a regra 83 (expr)


Estado 34

   45 var-part: ID ASSIGN expr .
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 45 (var-part)


Estado 35

   80 expr: function-call .

    $padrão  reduzir usando a regra 80 (expr)


Estado 36

    8 function-declaration: type-spec ID LPAR param-list . RPAR SEMI
    9 function-definition: type-spec ID LPAR param-list . RPAR compound-stmt
   10 param-list: param-list . COMMA param-spec

    RPAR   deslocar, e ir ao estado 58
    COMMA  deslocar, e ir ao estado 59


Estado 37

   11 param-list: param-spec .

    $padrão  reduzir usando a regra 11 (param-list)


Estado 38

   13 param-spec: type-spec .
   14           | type-spec . ID

    ID  deslocar, e ir ao estado 60

    $padrão  reduzir usando a regra 13 (param-spec)


Estado 39

   50 array: ID LB RB .

    $padrão  reduzir usando a regra 50 (array)


Estado 40

   49 array: ID LB expr . RB
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    RB          deslocar, e ir ao estado 61
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 41

   44 var-part: ID .
   45         | ID . ASSIGN expr
   49 array: ID . LB expr RB
   50      | ID . LB RB

    ASSIGN  deslocar, e ir ao estado 22
    LB      deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 44 (var-part)


Estado 42

   42 var-list: var-list COMMA var-part .

    $padrão  reduzir usando a regra 42 (var-list)


Estado 43

   48 array-stmt: array ASSIGN LCB . arg-list RCB

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 88 (arg-list)

    expr           ir ao estado 62
    function-call  ir ao estado 35
    arg-list       ir ao estado 63


Estado 44

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   79     | LPAR expr . RPAR
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    RPAR        deslocar, e ir ao estado 64
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 45

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   76     | MINUS expr .
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR  deslocar, e ir ao estado 51

    $padrão  reduzir usando a regra 76 (expr)


Estado 46

   71 expr: expr EQ . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 65
    function-call  ir ao estado 35


Estado 47

   67 expr: expr LT . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 66
    function-call  ir ao estado 35


Estado 48

   68 expr: expr BT . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 67
    function-call  ir ao estado 35


Estado 49

   69 expr: expr LET . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 68
    function-call  ir ao estado 35


Estado 50

   70 expr: expr BET . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 69
    function-call  ir ao estado 35


Estado 51

   85 function-call: expr LPAR . arg-list RPAR

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 88 (arg-list)

    expr           ir ao estado 62
    function-call  ir ao estado 35
    arg-list       ir ao estado 70


Estado 52

   72 expr: expr PLUS . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 71
    function-call  ir ao estado 35


Estado 53

   73 expr: expr MINUS . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 72
    function-call  ir ao estado 35


Estado 54

   74 expr: expr STAR . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 73
    function-call  ir ao estado 35


Estado 55

   75 expr: expr OVER . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 74
    function-call  ir ao estado 35


Estado 56

   77 expr: expr PLUSPLUS .

    $padrão  reduzir usando a regra 77 (expr)


Estado 57

   78 expr: expr MINUSMINUS .

    $padrão  reduzir usando a regra 78 (expr)


Estado 58

    8 function-declaration: type-spec ID LPAR param-list RPAR . SEMI
    9 function-definition: type-spec ID LPAR param-list RPAR . compound-stmt

    SEMI  deslocar, e ir ao estado 75
    LCB   deslocar, e ir ao estado 76

    compound-stmt  ir ao estado 77


Estado 59

   10 param-list: param-list COMMA . param-spec

    VOID    deslocar, e ir ao estado 4
    CHAR    deslocar, e ir ao estado 5
    SHORT   deslocar, e ir ao estado 6
    INT     deslocar, e ir ao estado 7
    FLOAT   deslocar, e ir ao estado 8
    DOUBLE  deslocar, e ir ao estado 9
    ID      deslocar, e ir ao estado 10

    param-spec  ir ao estado 78
    type-spec   ir ao estado 38


Estado 60

   14 param-spec: type-spec ID .

    $padrão  reduzir usando a regra 14 (param-spec)


Estado 61

   49 array: ID LB expr RB .

    $padrão  reduzir usando a regra 49 (array)


Estado 62

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR
   87 arg-list: expr .

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 87 (arg-list)


Estado 63

   48 array-stmt: array ASSIGN LCB arg-list . RCB
   86 arg-list: arg-list . COMMA expr

    RCB    deslocar, e ir ao estado 79
    COMMA  deslocar, e ir ao estado 80


Estado 64

   79 expr: LPAR expr RPAR .

    $padrão  reduzir usando a regra 79 (expr)


Estado 65

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   71     | expr EQ expr .
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR        deslocar, e ir ao estado 51
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 71 (expr)


Estado 66

   67 expr: expr . LT expr
   67     | expr LT expr .
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR        deslocar, e ir ao estado 51
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 67 (expr)


Estado 67

   67 expr: expr . LT expr
   68     | expr . BT expr
   68     | expr BT expr .
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR        deslocar, e ir ao estado 51
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 68 (expr)


Estado 68

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   69     | expr LET expr .
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR        deslocar, e ir ao estado 51
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 69 (expr)


Estado 69

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   70     | expr BET expr .
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR        deslocar, e ir ao estado 51
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 70 (expr)


Estado 70

   85 function-call: expr LPAR arg-list . RPAR
   86 arg-list: arg-list . COMMA expr

    RPAR   deslocar, e ir ao estado 81
    COMMA  deslocar, e ir ao estado 80


Estado 71

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   72     | expr PLUS expr .
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR        deslocar, e ir ao estado 51
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 72 (expr)


Estado 72

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   73     | expr MINUS expr .
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR        deslocar, e ir ao estado 51
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 73 (expr)


Estado 73

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   74     | expr STAR expr .
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR        deslocar, e ir ao estado 51
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 74 (expr)


Estado 74

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   75     | expr OVER expr .
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    LPAR        deslocar, e ir ao estado 51
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 75 (expr)


Estado 75

    8 function-declaration: type-spec ID LPAR param-list RPAR SEMI .

    $padrão  reduzir usando a regra 8 (function-declaration)


Estado 76

   38 compound-stmt: LCB . stmt-list RCB

    $padrão  reduzir usando a regra 40 (stmt-list)

    stmt-list  ir ao estado 82


Estado 77

    9 function-definition: type-spec ID LPAR param-list RPAR compound-stmt .

    $padrão  reduzir usando a regra 9 (function-definition)


Estado 78

   10 param-list: param-list COMMA param-spec .

    $padrão  reduzir usando a regra 10 (param-list)


Estado 79

   48 array-stmt: array ASSIGN LCB arg-list RCB .

    $padrão  reduzir usando a regra 48 (array-stmt)


Estado 80

   86 arg-list: arg-list COMMA . expr

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 83
    function-call  ir ao estado 35


Estado 81

   85 function-call: expr LPAR arg-list RPAR .

    $padrão  reduzir usando a regra 85 (function-call)


Estado 82

   38 compound-stmt: LCB stmt-list . RCB
   39 stmt-list: stmt-list . stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    RCB       deslocar, e ir ao estado 95
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 98
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 83

   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR
   86 arg-list: arg-list COMMA expr .

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 86 (arg-list)


Estado 84

   58 break-stmt: BREAK . SEMI

    SEMI  deslocar, e ir ao estado 115


Estado 85

   59 case-stmt: CASE . expr COLON stmt

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 116
    function-call  ir ao estado 35


Estado 86

   57 continue-stmt: CONTINUE . SEMI

    SEMI  deslocar, e ir ao estado 117


Estado 87

   60 default-stmt: DEFAULT . COLON stmt

    COLON  deslocar, e ir ao estado 118


Estado 88

   62 do-while-stmt: DO . stmt WHILE LPAR expr RPAR SEMI

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 119
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 89

   63 for-stmt: FOR . LPAR stmt stmt expr RPAR stmt
   64         | FOR . LPAR stmt stmt RPAR stmt

    LPAR  deslocar, e ir ao estado 120


Estado 90

   52 if-stmt: IF . LPAR expr RPAR stmt
   53        | IF . LPAR expr RPAR stmt ELSE stmt

    LPAR  deslocar, e ir ao estado 121


Estado 91

   54 return-stmt: RETURN . return-value SEMI

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    $padrão  reduzir usando a regra 56 (return-value)

    return-value   ir ao estado 122
    expr           ir ao estado 123
    function-call  ir ao estado 35


Estado 92

   65 switch-stmt: SWITCH . LPAR expr RPAR stmt

    LPAR  deslocar, e ir ao estado 124


Estado 93

   61 while-stmt: WHILE . LPAR expr RPAR stmt

    LPAR  deslocar, e ir ao estado 125


Estado 94

   37 empty-stmt: SEMI .

    $padrão  reduzir usando a regra 37 (empty-stmt)


Estado 95

   38 compound-stmt: LCB stmt-list RCB .

    $padrão  reduzir usando a regra 38 (compound-stmt)


Estado 96

   21 type-spec: ID .
   84 expr: ID .

    ID        reduzir usando a regra 21 (type-spec)
    $padrão  reduzir usando a regra 84 (expr)


Estado 97

   41 var-declaration-stmt: type-spec . var-list SEMI

    ID  deslocar, e ir ao estado 41

    var-list    ir ao estado 18
    var-part    ir ao estado 19
    array-stmt  ir ao estado 20
    array       ir ao estado 21


Estado 98

   39 stmt-list: stmt-list stmt .

    $padrão  reduzir usando a regra 39 (stmt-list)


Estado 99

   22 stmt: empty-stmt .

    $padrão  reduzir usando a regra 22 (stmt)


Estado 100

   23 stmt: compound-stmt .

    $padrão  reduzir usando a regra 23 (stmt)


Estado 101

   24 stmt: var-declaration-stmt .

    $padrão  reduzir usando a regra 24 (stmt)


Estado 102

   25 stmt: assign-stmt .

    $padrão  reduzir usando a regra 25 (stmt)


Estado 103

   26 stmt: if-stmt .

    $padrão  reduzir usando a regra 26 (stmt)


Estado 104

   27 stmt: return-stmt .

    $padrão  reduzir usando a regra 27 (stmt)


Estado 105

   31 stmt: continue-stmt .

    $padrão  reduzir usando a regra 31 (stmt)


Estado 106

   28 stmt: break-stmt .

    $padrão  reduzir usando a regra 28 (stmt)


Estado 107

   29 stmt: case-stmt .

    $padrão  reduzir usando a regra 29 (stmt)


Estado 108

   30 stmt: default-stmt .

    $padrão  reduzir usando a regra 30 (stmt)


Estado 109

   32 stmt: while-stmt .

    $padrão  reduzir usando a regra 32 (stmt)


Estado 110

   33 stmt: do-while-stmt .

    $padrão  reduzir usando a regra 33 (stmt)


Estado 111

   34 stmt: for-stmt .

    $padrão  reduzir usando a regra 34 (stmt)


Estado 112

   35 stmt: switch-stmt .

    $padrão  reduzir usando a regra 35 (stmt)


Estado 113

   36 stmt: expr-stmt .

    $padrão  reduzir usando a regra 36 (stmt)


Estado 114

   51 assign-stmt: expr . ASSIGN expr SEMI
   66 expr-stmt: expr . SEMI
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    ASSIGN      deslocar, e ir ao estado 126
    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    SEMI        deslocar, e ir ao estado 127
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 115

   58 break-stmt: BREAK SEMI .

    $padrão  reduzir usando a regra 58 (break-stmt)


Estado 116

   59 case-stmt: CASE expr . COLON stmt
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    COLON       deslocar, e ir ao estado 128
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 117

   57 continue-stmt: CONTINUE SEMI .

    $padrão  reduzir usando a regra 57 (continue-stmt)


Estado 118

   60 default-stmt: DEFAULT COLON . stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 129
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 119

   62 do-while-stmt: DO stmt . WHILE LPAR expr RPAR SEMI

    WHILE  deslocar, e ir ao estado 130


Estado 120

   63 for-stmt: FOR LPAR . stmt stmt expr RPAR stmt
   64         | FOR LPAR . stmt stmt RPAR stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 131
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 121

   52 if-stmt: IF LPAR . expr RPAR stmt
   53        | IF LPAR . expr RPAR stmt ELSE stmt

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 132
    function-call  ir ao estado 35


Estado 122

   54 return-stmt: RETURN return-value . SEMI

    SEMI  deslocar, e ir ao estado 133


Estado 123

   55 return-value: expr .
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57

    $padrão  reduzir usando a regra 55 (return-value)


Estado 124

   65 switch-stmt: SWITCH LPAR . expr RPAR stmt

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 134
    function-call  ir ao estado 35


Estado 125

   61 while-stmt: WHILE LPAR . expr RPAR stmt

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 135
    function-call  ir ao estado 35


Estado 126

   51 assign-stmt: expr ASSIGN . expr SEMI

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 136
    function-call  ir ao estado 35


Estado 127

   66 expr-stmt: expr SEMI .

    $padrão  reduzir usando a regra 66 (expr-stmt)


Estado 128

   59 case-stmt: CASE expr COLON . stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 137
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 129

   60 default-stmt: DEFAULT COLON stmt .

    $padrão  reduzir usando a regra 60 (default-stmt)


Estado 130

   62 do-while-stmt: DO stmt WHILE . LPAR expr RPAR SEMI

    LPAR  deslocar, e ir ao estado 138


Estado 131

   63 for-stmt: FOR LPAR stmt . stmt expr RPAR stmt
   64         | FOR LPAR stmt . stmt RPAR stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 139
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 132

   52 if-stmt: IF LPAR expr . RPAR stmt
   53        | IF LPAR expr . RPAR stmt ELSE stmt
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    RPAR        deslocar, e ir ao estado 140
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 133

   54 return-stmt: RETURN return-value SEMI .

    $padrão  reduzir usando a regra 54 (return-stmt)


Estado 134

   65 switch-stmt: SWITCH LPAR expr . RPAR stmt
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    RPAR        deslocar, e ir ao estado 141
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 135

   61 while-stmt: WHILE LPAR expr . RPAR stmt
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    RPAR        deslocar, e ir ao estado 142
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 136

   51 assign-stmt: expr ASSIGN expr . SEMI
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    SEMI        deslocar, e ir ao estado 143
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 137

   59 case-stmt: CASE expr COLON stmt .

    $padrão  reduzir usando a regra 59 (case-stmt)


Estado 138

   62 do-while-stmt: DO stmt WHILE LPAR . expr RPAR SEMI

    LPAR      deslocar, e ir ao estado 28
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 144
    function-call  ir ao estado 35


Estado 139

   63 for-stmt: FOR LPAR stmt stmt . expr RPAR stmt
   64         | FOR LPAR stmt stmt . RPAR stmt

    LPAR      deslocar, e ir ao estado 28
    RPAR      deslocar, e ir ao estado 145
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 32
    STR_VAL   deslocar, e ir ao estado 33

    expr           ir ao estado 146
    function-call  ir ao estado 35


Estado 140

   52 if-stmt: IF LPAR expr RPAR . stmt
   53        | IF LPAR expr RPAR . stmt ELSE stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 147
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 141

   65 switch-stmt: SWITCH LPAR expr RPAR . stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 148
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 142

   61 while-stmt: WHILE LPAR expr RPAR . stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 149
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 143

   51 assign-stmt: expr ASSIGN expr SEMI .

    $padrão  reduzir usando a regra 51 (assign-stmt)


Estado 144

   62 do-while-stmt: DO stmt WHILE LPAR expr . RPAR SEMI
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    RPAR        deslocar, e ir ao estado 150
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 145

   64 for-stmt: FOR LPAR stmt stmt RPAR . stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 151
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 146

   63 for-stmt: FOR LPAR stmt stmt expr . RPAR stmt
   67 expr: expr . LT expr
   68     | expr . BT expr
   69     | expr . LET expr
   70     | expr . BET expr
   71     | expr . EQ expr
   72     | expr . PLUS expr
   73     | expr . MINUS expr
   74     | expr . STAR expr
   75     | expr . OVER expr
   77     | expr . PLUSPLUS
   78     | expr . MINUSMINUS
   85 function-call: expr . LPAR arg-list RPAR

    EQ          deslocar, e ir ao estado 46
    LT          deslocar, e ir ao estado 47
    BT          deslocar, e ir ao estado 48
    LET         deslocar, e ir ao estado 49
    BET         deslocar, e ir ao estado 50
    LPAR        deslocar, e ir ao estado 51
    RPAR        deslocar, e ir ao estado 152
    PLUS        deslocar, e ir ao estado 52
    MINUS       deslocar, e ir ao estado 53
    STAR        deslocar, e ir ao estado 54
    OVER        deslocar, e ir ao estado 55
    PLUSPLUS    deslocar, e ir ao estado 56
    MINUSMINUS  deslocar, e ir ao estado 57


Estado 147

   52 if-stmt: IF LPAR expr RPAR stmt .
   53        | IF LPAR expr RPAR stmt . ELSE stmt

    ELSE  deslocar, e ir ao estado 153

    $padrão  reduzir usando a regra 52 (if-stmt)


Estado 148

   65 switch-stmt: SWITCH LPAR expr RPAR stmt .

    $padrão  reduzir usando a regra 65 (switch-stmt)


Estado 149

   61 while-stmt: WHILE LPAR expr RPAR stmt .

    $padrão  reduzir usando a regra 61 (while-stmt)


Estado 150

   62 do-while-stmt: DO stmt WHILE LPAR expr RPAR . SEMI

    SEMI  deslocar, e ir ao estado 154


Estado 151

   64 for-stmt: FOR LPAR stmt stmt RPAR stmt .

    $padrão  reduzir usando a regra 64 (for-stmt)


Estado 152

   63 for-stmt: FOR LPAR stmt stmt expr RPAR . stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 155
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 153

   53 if-stmt: IF LPAR expr RPAR stmt ELSE . stmt

    VOID      deslocar, e ir ao estado 4
    CHAR      deslocar, e ir ao estado 5
    SHORT     deslocar, e ir ao estado 6
    INT       deslocar, e ir ao estado 7
    FLOAT     deslocar, e ir ao estado 8
    DOUBLE    deslocar, e ir ao estado 9
    BREAK     deslocar, e ir ao estado 84
    CASE      deslocar, e ir ao estado 85
    CONTINUE  deslocar, e ir ao estado 86
    DEFAULT   deslocar, e ir ao estado 87
    DO        deslocar, e ir ao estado 88
    FOR       deslocar, e ir ao estado 89
    IF        deslocar, e ir ao estado 90
    RETURN    deslocar, e ir ao estado 91
    SWITCH    deslocar, e ir ao estado 92
    WHILE     deslocar, e ir ao estado 93
    LPAR      deslocar, e ir ao estado 28
    SEMI      deslocar, e ir ao estado 94
    LCB       deslocar, e ir ao estado 76
    MINUS     deslocar, e ir ao estado 29
    INT_VAL   deslocar, e ir ao estado 30
    REAL_VAL  deslocar, e ir ao estado 31
    ID        deslocar, e ir ao estado 96
    STR_VAL   deslocar, e ir ao estado 33

    type-spec             ir ao estado 97
    stmt                  ir ao estado 156
    empty-stmt            ir ao estado 99
    compound-stmt         ir ao estado 100
    var-declaration-stmt  ir ao estado 101
    assign-stmt           ir ao estado 102
    if-stmt               ir ao estado 103
    return-stmt           ir ao estado 104
    continue-stmt         ir ao estado 105
    break-stmt            ir ao estado 106
    case-stmt             ir ao estado 107
    default-stmt          ir ao estado 108
    while-stmt            ir ao estado 109
    do-while-stmt         ir ao estado 110
    for-stmt              ir ao estado 111
    switch-stmt           ir ao estado 112
    expr-stmt             ir ao estado 113
    expr                  ir ao estado 114
    function-call         ir ao estado 35


Estado 154

   62 do-while-stmt: DO stmt WHILE LPAR expr RPAR SEMI .

    $padrão  reduzir usando a regra 62 (do-while-stmt)


Estado 155

   63 for-stmt: FOR LPAR stmt stmt expr RPAR stmt .

    $padrão  reduzir usando a regra 63 (for-stmt)


Estado 156

   53 if-stmt: IF LPAR expr RPAR stmt ELSE stmt .

    $padrão  reduzir usando a regra 53 (if-stmt)
